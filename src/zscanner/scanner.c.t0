
/*  Copyright (C) 2016 CZ.NIC, z.s.p.o. <knot-dns@labs.nic.cz>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <arpa/inet.h>
#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libgen.h>
#include <math.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "zscanner/scanner.h"
#include "zscanner/functions.h"
#include "libknot/descriptor.h"

/*! \brief Shorthand for setting warning data. */
#define WARN(err_code) { s->error.code = err_code; }
/*! \brief Shorthand for setting error data. */
#define ERR(err_code) { WARN(err_code); s->error.fatal = true; }
/*! \brief Shorthand for error reset. */
#define NOERR { WARN(ZS_OK); s->error.fatal = false; }

/*!
 * \brief Writes record type number to r_data.
 *
 * \param type		Type number.
 * \param rdata_tail	Position where to write type number to.
 */
static inline void type_num(const uint16_t type, uint8_t **rdata_tail)
{
	*((uint16_t *)*rdata_tail) = htons(type);
	*rdata_tail += 2;
}

/*!
 * \brief Sets bit to bitmap window.
 *
 * \param type		Type number.
 * \param s		Scanner context.
 */
static inline void window_add_bit(const uint16_t type, zs_scanner_t *s) {
	uint8_t win      = type / 256;
	uint8_t bit_pos  = type % 256;
	uint8_t byte_pos = bit_pos / 8;

	((s->windows[win]).bitmap)[byte_pos] |= 128 >> (bit_pos % 8);

	if ((s->windows[win]).length < byte_pos + 1) {
		(s->windows[win]).length = byte_pos + 1;
	}

	if (s->last_window < win) {
		s->last_window = win;
	}
}

// Include scanner file (in Ragel).

static const short _zone_scanner_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1,
	3, 1, 4, 1, 6, 1, 9, 1,
	10, 1, 11, 1, 13, 1, 14, 1,
	16, 1, 19, 1, 20, 1, 22, 1,
	23, 1, 25, 1, 26, 1, 27, 1,
	29, 1, 30, 1, 39, 1, 40, 1,
	41, 1, 43, 1, 45, 1, 46, 1,
	47, 1, 48, 1, 50, 1, 52, 1,
	53, 1, 55, 1, 57, 1, 59, 1,
	60, 1, 62, 1, 66, 1, 67, 1,
	70, 1, 71, 1, 73, 1, 74, 1,
	77, 1, 79, 1, 80, 1, 81, 1,
	82, 1, 83, 1, 84, 1, 85, 1,
	86, 1, 88, 1, 90, 1, 92, 1,
	96, 1, 97, 1, 101, 1, 102, 1,
	106, 1, 107, 1, 108, 1, 109, 1,
	110, 1, 111, 1, 112, 1, 113, 1,
	114, 1, 115, 1, 116, 1, 117, 1,
	118, 1, 119, 1, 121, 1, 122, 1,
	123, 1, 124, 1, 151, 1, 152, 1,
	153, 1, 154, 1, 155, 1, 156, 1,
	157, 1, 158, 1, 159, 1, 160, 1,
	161, 1, 162, 1, 163, 1, 164, 1,
	165, 1, 166, 1, 167, 1, 168, 1,
	169, 1, 170, 1, 171, 1, 172, 1,
	173, 1, 174, 1, 175, 1, 176, 1,
	177, 1, 178, 1, 179, 1, 180, 1,
	181, 1, 182, 1, 183, 1, 184, 1,
	185, 1, 186, 1, 187, 1, 188, 1,
	189, 1, 190, 1, 191, 1, 192, 1,
	193, 1, 194, 1, 195, 1, 196, 1,
	197, 1, 198, 1, 199, 1, 200, 1,
	201, 1, 202, 1, 203, 1, 204, 1,
	205, 1, 206, 1, 207, 1, 208, 1,
	209, 1, 210, 1, 211, 1, 212, 1,
	213, 1, 214, 1, 215, 1, 216, 1,
	217, 1, 218, 1, 219, 1, 220, 1,
	221, 1, 222, 1, 223, 1, 224, 1,
	225, 1, 226, 1, 227, 1, 228, 1,
	229, 1, 230, 1, 231, 1, 232, 1,
	233, 1, 234, 1, 235, 1, 236, 1,
	238, 1, 240, 1, 241, 1, 242, 1,
	243, 1, 250, 1, 251, 1, 256, 1,
	258, 1, 263, 1, 266, 1, 267, 1,
	268, 1, 269, 1, 271, 1, 272, 1,
	273, 1, 275, 2, 0, 43, 2, 1,
	0, 2, 1, 26, 2, 1, 272, 2,
	1, 318, 2, 2, 26, 2, 3, 26,
	2, 4, 66, 2, 4, 70, 2, 5,
	6, 2, 9, 10, 2, 12, 13, 2,
	14, 10, 2, 14, 11, 2, 15, 20,
	2, 15, 70, 2, 15, 77, 2, 16,
	0, 2, 16, 2, 2, 16, 3, 2,
	16, 76, 2, 18, 0, 2, 19, 9,
	2, 22, 62, 2, 22, 101, 2, 22,
	112, 2, 23, 0, 2, 23, 1, 2,
	23, 2, 2, 23, 3, 2, 23, 239,
	2, 24, 21, 2, 25, 1, 2, 25,
	2, 2, 25, 3, 2, 25, 86, 2,
	26, 1, 2, 26, 2, 2, 26, 3,
	2, 27, 4, 2, 27, 271, 2, 27,
	275, 2, 28, 21, 2, 29, 0, 2,
	29, 1, 2, 29, 2, 2, 29, 3,
	2, 29, 239, 2, 30, 35, 2, 31,
	30, 2, 32, 66, 2, 32, 256, 2,
	32, 271, 2, 32, 275, 2, 36, 244,
	2, 36, 245, 2, 36, 246, 2, 36,
	247, 2, 36, 248, 2, 36, 249, 2,
	39, 0, 2, 39, 1, 2, 39, 2,
	2, 39, 3, 2, 40, 0, 2, 40,
	1, 2, 40, 2, 2, 40, 3, 2,
	41, 0, 2, 41, 1, 2, 41, 2,
	2, 41, 3, 2, 42, 270, 2, 43,
	1, 2, 43, 2, 2, 43, 3, 2,
	50, 2, 2, 50, 3, 2, 50, 41,
	2, 50, 86, 2, 51, 52, 2, 53,
	1, 2, 53, 2, 2, 53, 3, 2,
	54, 271, 2, 55, 0, 2, 56, 57,
	2, 58, 59, 2, 60, 0, 2, 60,
	55, 2, 64, 0, 2, 64, 271, 2,
	68, 19, 2, 72, 62, 2, 73, 2,
	2, 73, 3, 2, 74, 4, 2, 75,
	19, 2, 77, 4, 2, 81, 1, 2,
	81, 26, 2, 83, 84, 2, 85, 1,
	2, 85, 2, 2, 85, 3, 2, 86,
	1, 2, 86, 2, 2, 86, 3, 2,
	87, 88, 2, 89, 271, 2, 90, 91,
	2, 92, 93, 2, 94, 95, 2, 94,
	96, 2, 94, 97, 2, 98, 99, 2,
	100, 271, 2, 103, 271, 2, 104, 0,
	2, 120, 271, 2, 122, 0, 2, 123,
	0, 2, 124, 0, 2, 125, 0, 2,
	126, 0, 2, 127, 0, 2, 128, 0,
	2, 129, 0, 2, 130, 0, 2, 131,
	0, 2, 132, 0, 2, 133, 0, 2,
	134, 0, 2, 135, 0, 2, 136, 0,
	2, 137, 0, 2, 138, 0, 2, 139,
	0, 2, 140, 0, 2, 141, 0, 2,
	142, 0, 2, 143, 0, 2, 144, 0,
	2, 145, 0, 2, 146, 0, 2, 147,
	0, 2, 148, 271, 2, 149, 271, 2,
	150, 271, 2, 151, 1, 2, 151, 2,
	2, 151, 3, 2, 152, 1, 2, 152,
	2, 2, 152, 3, 2, 153, 1, 2,
	153, 2, 2, 153, 3, 2, 154, 1,
	2, 154, 2, 2, 154, 3, 2, 155,
	1, 2, 155, 2, 2, 155, 3, 2,
	156, 1, 2, 156, 2, 2, 156, 3,
	2, 157, 1, 2, 157, 2, 2, 157,
	3, 2, 158, 1, 2, 158, 2, 2,
	158, 3, 2, 159, 1, 2, 159, 2,
	2, 159, 3, 2, 160, 1, 2, 160,
	2, 2, 160, 3, 2, 161, 1, 2,
	161, 2, 2, 161, 3, 2, 162, 1,
	2, 162, 2, 2, 162, 3, 2, 163,
	1, 2, 163, 2, 2, 163, 3, 2,
	164, 1, 2, 164, 2, 2, 164, 3,
	2, 165, 1, 2, 165, 2, 2, 165,
	3, 2, 166, 1, 2, 166, 2, 2,
	166, 3, 2, 167, 1, 2, 167, 2,
	2, 167, 3, 2, 168, 1, 2, 168,
	2, 2, 168, 3, 2, 169, 1, 2,
	169, 2, 2, 169, 3, 2, 170, 1,
	2, 170, 2, 2, 170, 3, 2, 171,
	1, 2, 171, 2, 2, 171, 3, 2,
	172, 1, 2, 172, 2, 2, 172, 3,
	2, 173, 1, 2, 173, 2, 2, 173,
	3, 2, 174, 1, 2, 174, 2, 2,
	174, 3, 2, 175, 1, 2, 175, 2,
	2, 175, 3, 2, 176, 1, 2, 176,
	2, 2, 176, 3, 2, 177, 1, 2,
	177, 2, 2, 177, 3, 2, 178, 1,
	2, 178, 2, 2, 178, 3, 2, 179,
	1, 2, 179, 2, 2, 179, 3, 2,
	180, 1, 2, 180, 2, 2, 180, 3,
	2, 181, 1, 2, 181, 2, 2, 181,
	3, 2, 182, 1, 2, 182, 2, 2,
	182, 3, 2, 183, 1, 2, 183, 2,
	2, 183, 3, 2, 184, 1, 2, 184,
	2, 2, 184, 3, 2, 185, 1, 2,
	185, 2, 2, 185, 3, 2, 186, 1,
	2, 186, 2, 2, 186, 3, 2, 187,
	1, 2, 187, 2, 2, 187, 3, 2,
	188, 1, 2, 188, 2, 2, 188, 3,
	2, 189, 1, 2, 189, 2, 2, 189,
	3, 2, 190, 1, 2, 190, 2, 2,
	190, 3, 2, 191, 1, 2, 191, 2,
	2, 191, 3, 2, 192, 1, 2, 192,
	2, 2, 192, 3, 2, 193, 1, 2,
	193, 2, 2, 193, 3, 2, 194, 1,
	2, 194, 2, 2, 194, 3, 2, 195,
	1, 2, 195, 2, 2, 195, 3, 2,
	196, 1, 2, 196, 2, 2, 196, 3,
	2, 197, 1, 2, 197, 2, 2, 197,
	3, 2, 198, 1, 2, 198, 2, 2,
	198, 3, 2, 199, 1, 2, 199, 2,
	2, 199, 3, 2, 200, 1, 2, 200,
	2, 2, 200, 3, 2, 201, 1, 2,
	201, 2, 2, 201, 3, 2, 202, 1,
	2, 202, 2, 2, 202, 3, 2, 203,
	1, 2, 203, 2, 2, 203, 3, 2,
	204, 1, 2, 204, 2, 2, 204, 3,
	2, 205, 1, 2, 205, 2, 2, 205,
	3, 2, 206, 1, 2, 206, 2, 2,
	206, 3, 2, 207, 1, 2, 207, 2,
	2, 207, 3, 2, 208, 1, 2, 208,
	2, 2, 208, 3, 2, 209, 1, 2,
	209, 2, 2, 209, 3, 2, 210, 1,
	2, 210, 2, 2, 210, 3, 2, 211,
	1, 2, 211, 2, 2, 211, 3, 2,
	212, 1, 2, 212, 2, 2, 212, 3,
	2, 213, 1, 2, 213, 2, 2, 213,
	3, 2, 214, 1, 2, 214, 2, 2,
	214, 3, 2, 215, 1, 2, 215, 2,
	2, 215, 3, 2, 216, 1, 2, 216,
	2, 2, 216, 3, 2, 217, 1, 2,
	217, 2, 2, 217, 3, 2, 218, 1,
	2, 218, 2, 2, 218, 3, 2, 219,
	1, 2, 219, 2, 2, 219, 3, 2,
	220, 1, 2, 220, 2, 2, 220, 3,
	2, 221, 1, 2, 221, 2, 2, 221,
	3, 2, 222, 1, 2, 222, 2, 2,
	222, 3, 2, 223, 1, 2, 223, 2,
	2, 223, 3, 2, 224, 1, 2, 224,
	2, 2, 224, 3, 2, 225, 1, 2,
	225, 2, 2, 225, 3, 2, 226, 1,
	2, 226, 2, 2, 226, 3, 2, 227,
	1, 2, 227, 2, 2, 227, 3, 2,
	228, 1, 2, 228, 2, 2, 228, 3,
	2, 229, 1, 2, 229, 2, 2, 229,
	3, 2, 230, 1, 2, 230, 2, 2,
	230, 3, 2, 231, 1, 2, 231, 2,
	2, 231, 3, 2, 232, 1, 2, 232,
	2, 2, 232, 3, 2, 233, 1, 2,
	233, 2, 2, 233, 3, 2, 234, 1,
	2, 234, 2, 2, 234, 3, 2, 235,
	1, 2, 235, 2, 2, 235, 3, 2,
	236, 1, 2, 236, 2, 2, 236, 3,
	2, 237, 0, 2, 240, 1, 2, 240,
	2, 2, 240, 3, 2, 241, 1, 2,
	241, 2, 2, 241, 3, 2, 242, 1,
	2, 242, 2, 2, 242, 3, 2, 243,
	1, 2, 243, 2, 2, 243, 3, 2,
	250, 1, 2, 250, 2, 2, 250, 3,
	2, 251, 1, 2, 251, 2, 2, 251,
	3, 2, 254, 0, 2, 255, 271, 2,
	257, 101, 2, 262, 101, 2, 271, 4,
	2, 272, 1, 2, 272, 26, 2, 274,
	272, 2, 275, 4, 2, 275, 271, 2,
	276, 270, 2, 277, 270, 2, 278, 270,
	2, 279, 270, 2, 280, 270, 2, 281,
	270, 2, 282, 270, 2, 283, 270, 2,
	284, 270, 2, 285, 270, 2, 286, 270,
	2, 287, 270, 2, 288, 270, 2, 289,
	270, 2, 290, 270, 2, 291, 270, 2,
	292, 270, 2, 293, 270, 2, 294, 270,
	2, 295, 270, 2, 296, 270, 2, 297,
	270, 2, 298, 270, 2, 299, 270, 2,
	300, 270, 2, 301, 270, 2, 302, 270,
	2, 303, 270, 2, 304, 270, 2, 305,
	270, 2, 306, 270, 2, 307, 270, 2,
	308, 270, 2, 309, 270, 2, 310, 270,
	2, 311, 270, 2, 312, 270, 2, 313,
	270, 2, 314, 270, 2, 315, 270, 2,
	316, 270, 2, 317, 270, 2, 318, 1,
	3, 0, 43, 1, 3, 0, 43, 2,
	3, 0, 43, 3, 3, 1, 64, 0,
	3, 1, 78, 0, 3, 1, 104, 0,
	3, 1, 237, 0, 3, 1, 254, 0,
	3, 1, 272, 26, 3, 1, 272, 318,
	3, 1, 318, 26, 3, 7, 1, 8,
	3, 11, 17, 0, 3, 16, 76, 2,
	3, 16, 76, 3, 3, 19, 9, 10,
	3, 23, 64, 0, 3, 25, 1, 86,
	3, 25, 1, 318, 3, 25, 2, 86,
	3, 25, 3, 86, 3, 25, 274, 272,
	3, 25, 276, 270, 3, 27, 82, 4,
	3, 27, 271, 4, 3, 27, 275, 4,
	3, 27, 275, 271, 3, 29, 1, 0,
	3, 31, 30, 272, 3, 32, 148, 271,
	3, 32, 150, 271, 3, 32, 275, 4,
	3, 32, 275, 271, 3, 34, 36, 244,
	3, 34, 36, 245, 3, 34, 36, 246,
	3, 34, 36, 247, 3, 34, 36, 248,
	3, 34, 36, 249, 3, 36, 244, 1,
	3, 36, 244, 2, 3, 36, 244, 3,
	3, 36, 245, 1, 3, 36, 245, 2,
	3, 36, 245, 3, 3, 36, 246, 1,
	3, 36, 246, 2, 3, 36, 246, 3,
	3, 36, 247, 1, 3, 36, 247, 2,
	3, 36, 247, 3, 3, 36, 248, 1,
	3, 36, 248, 2, 3, 36, 248, 3,
	3, 36, 249, 1, 3, 36, 249, 2,
	3, 36, 249, 3, 3, 42, 270, 1,
	3, 42, 270, 2, 3, 42, 270, 3,
	3, 42, 270, 272, 3, 44, 32, 66,
	3, 44, 32, 271, 3, 44, 32, 275,
	3, 49, 31, 30, 3, 50, 41, 0,
	3, 50, 41, 1, 3, 50, 41, 2,
	3, 50, 41, 3, 3, 50, 86, 1,
	3, 50, 86, 2, 3, 50, 86, 3,
	3, 60, 55, 0, 3, 61, 56, 57,
	3, 63, 22, 62, 3, 65, 0, 1,
	3, 68, 19, 9, 3, 69, 0, 1,
	3, 75, 19, 9, 3, 78, 0, 1,
	3, 81, 24, 21, 3, 81, 26, 1,
	3, 81, 26, 2, 3, 81, 26, 3,
	3, 83, 24, 21, 3, 83, 84, 272,
	3, 86, 1, 318, 3, 89, 100, 271,
	3, 89, 148, 271, 3, 90, 91, 0,
	3, 90, 91, 1, 3, 90, 91, 2,
	3, 90, 91, 3, 3, 92, 93, 0,
	3, 92, 93, 1, 3, 92, 93, 2,
	3, 92, 93, 3, 3, 98, 99, 0,
	3, 98, 99, 1, 3, 98, 99, 2,
	3, 98, 99, 3, 3, 103, 105, 256,
	3, 103, 265, 271, 3, 148, 149, 271,
	3, 193, 237, 0, 3, 194, 237, 0,
	3, 195, 237, 0, 3, 196, 237, 0,
	3, 197, 237, 0, 3, 198, 237, 0,
	3, 199, 237, 0, 3, 200, 237, 0,
	3, 201, 237, 0, 3, 202, 237, 0,
	3, 203, 237, 0, 3, 204, 237, 0,
	3, 205, 237, 0, 3, 206, 237, 0,
	3, 207, 237, 0, 3, 208, 237, 0,
	3, 209, 237, 0, 3, 210, 237, 0,
	3, 211, 237, 0, 3, 212, 237, 0,
	3, 213, 237, 0, 3, 214, 237, 0,
	3, 215, 237, 0, 3, 216, 237, 0,
	3, 217, 237, 0, 3, 218, 237, 0,
	3, 219, 237, 0, 3, 220, 237, 0,
	3, 221, 237, 0, 3, 222, 237, 0,
	3, 223, 237, 0, 3, 224, 237, 0,
	3, 225, 237, 0, 3, 226, 237, 0,
	3, 227, 237, 0, 3, 228, 237, 0,
	3, 229, 237, 0, 3, 230, 237, 0,
	3, 231, 237, 0, 3, 232, 237, 0,
	3, 233, 237, 0, 3, 234, 237, 0,
	3, 235, 237, 0, 3, 236, 237, 0,
	3, 253, 31, 30, 3, 258, 259, 0,
	3, 258, 260, 0, 3, 261, 103, 271,
	3, 263, 264, 0, 3, 265, 103, 271,
	3, 271, 4, 82, 3, 272, 24, 21,
	3, 272, 318, 1, 3, 275, 271, 4,
	3, 276, 270, 1, 3, 276, 270, 2,
	3, 276, 270, 3, 3, 276, 270, 272,
	3, 277, 270, 1, 3, 277, 270, 2,
	3, 277, 270, 3, 3, 277, 270, 272,
	3, 278, 270, 1, 3, 278, 270, 2,
	3, 278, 270, 3, 3, 278, 270, 272,
	3, 279, 270, 1, 3, 279, 270, 2,
	3, 279, 270, 3, 3, 279, 270, 272,
	3, 280, 270, 1, 3, 280, 270, 2,
	3, 280, 270, 3, 3, 280, 270, 272,
	3, 281, 270, 1, 3, 281, 270, 2,
	3, 281, 270, 3, 3, 281, 270, 272,
	3, 282, 270, 1, 3, 282, 270, 2,
	3, 282, 270, 3, 3, 282, 270, 272,
	3, 283, 270, 1, 3, 283, 270, 2,
	3, 283, 270, 3, 3, 283, 270, 272,
	3, 284, 270, 1, 3, 284, 270, 2,
	3, 284, 270, 3, 3, 284, 270, 272,
	3, 285, 270, 1, 3, 285, 270, 2,
	3, 285, 270, 3, 3, 285, 270, 272,
	3, 286, 270, 1, 3, 286, 270, 2,
	3, 286, 270, 3, 3, 286, 270, 272,
	3, 287, 270, 1, 3, 287, 270, 2,
	3, 287, 270, 3, 3, 287, 270, 272,
	3, 288, 270, 1, 3, 288, 270, 2,
	3, 288, 270, 3, 3, 288, 270, 272,
	3, 289, 270, 1, 3, 289, 270, 2,
	3, 289, 270, 3, 3, 289, 270, 272,
	3, 290, 270, 1, 3, 290, 270, 2,
	3, 290, 270, 3, 3, 290, 270, 272,
	3, 291, 270, 1, 3, 291, 270, 2,
	3, 291, 270, 3, 3, 291, 270, 272,
	3, 292, 270, 1, 3, 292, 270, 2,
	3, 292, 270, 3, 3, 292, 270, 272,
	3, 293, 270, 1, 3, 293, 270, 2,
	3, 293, 270, 3, 3, 293, 270, 272,
	3, 294, 270, 1, 3, 294, 270, 2,
	3, 294, 270, 3, 3, 294, 270, 272,
	3, 295, 270, 1, 3, 295, 270, 2,
	3, 295, 270, 3, 3, 295, 270, 272,
	3, 296, 270, 1, 3, 296, 270, 2,
	3, 296, 270, 3, 3, 296, 270, 272,
	3, 297, 270, 1, 3, 297, 270, 2,
	3, 297, 270, 3, 3, 297, 270, 272,
	3, 298, 270, 1, 3, 298, 270, 2,
	3, 298, 270, 3, 3, 298, 270, 272,
	3, 299, 270, 1, 3, 299, 270, 2,
	3, 299, 270, 3, 3, 299, 270, 272,
	3, 300, 270, 1, 3, 300, 270, 2,
	3, 300, 270, 3, 3, 300, 270, 272,
	3, 301, 270, 1, 3, 301, 270, 2,
	3, 301, 270, 3, 3, 301, 270, 272,
	3, 302, 270, 1, 3, 302, 270, 2,
	3, 302, 270, 3, 3, 302, 270, 272,
	3, 303, 270, 1, 3, 303, 270, 2,
	3, 303, 270, 3, 3, 303, 270, 272,
	3, 304, 270, 1, 3, 304, 270, 2,
	3, 304, 270, 3, 3, 304, 270, 272,
	3, 305, 270, 1, 3, 305, 270, 2,
	3, 305, 270, 3, 3, 305, 270, 272,
	3, 306, 270, 1, 3, 306, 270, 2,
	3, 306, 270, 3, 3, 306, 270, 272,
	3, 307, 270, 1, 3, 307, 270, 2,
	3, 307, 270, 3, 3, 307, 270, 272,
	3, 308, 270, 1, 3, 308, 270, 2,
	3, 308, 270, 3, 3, 308, 270, 272,
	3, 309, 270, 1, 3, 309, 270, 2,
	3, 309, 270, 3, 3, 309, 270, 272,
	3, 310, 270, 1, 3, 310, 270, 2,
	3, 310, 270, 3, 3, 310, 270, 272,
	3, 311, 270, 1, 3, 311, 270, 2,
	3, 311, 270, 3, 3, 311, 270, 272,
	3, 312, 270, 1, 3, 312, 270, 2,
	3, 312, 270, 3, 3, 312, 270, 272,
	3, 313, 270, 1, 3, 313, 270, 2,
	3, 313, 270, 3, 3, 313, 270, 272,
	3, 314, 270, 1, 3, 314, 270, 2,
	3, 314, 270, 3, 3, 314, 270, 272,
	3, 315, 270, 1, 3, 315, 270, 2,
	3, 315, 270, 3, 3, 315, 270, 272,
	3, 316, 270, 1, 3, 316, 270, 2,
	3, 316, 270, 3, 3, 316, 270, 272,
	3, 317, 270, 1, 3, 317, 270, 2,
	3, 317, 270, 3, 3, 317, 270, 272,
	3, 318, 1, 26, 4, 5, 7, 1,
	8, 4, 14, 11, 17, 0, 4, 16,
	69, 0, 1, 4, 23, 1, 64, 0,
	4, 25, 1, 86, 318, 4, 25, 1,
	274, 272, 4, 25, 1, 276, 270, 4,
	25, 2, 274, 272, 4, 25, 2, 276,
	270, 4, 25, 3, 274, 272, 4, 25,
	3, 276, 270, 4, 25, 276, 270, 272,
	4, 27, 32, 275, 4, 4, 27, 44,
	32, 275, 4, 27, 275, 271, 4, 4,
	31, 30, 24, 21, 4, 32, 275, 271,
	4, 4, 34, 31, 30, 35, 4, 34,
	36, 244, 1, 4, 34, 36, 244, 2,
	4, 34, 36, 244, 3, 4, 34, 36,
	245, 1, 4, 34, 36, 245, 2, 4,
	34, 36, 245, 3, 4, 34, 36, 246,
	1, 4, 34, 36, 246, 2, 4, 34,
	36, 246, 3, 4, 34, 36, 247, 1,
	4, 34, 36, 247, 2, 4, 34, 36,
	247, 3, 4, 34, 36, 248, 1, 4,
	34, 36, 248, 2, 4, 34, 36, 248,
	3, 4, 34, 36, 249, 1, 4, 34,
	36, 249, 2, 4, 34, 36, 249, 3,
	4, 36, 246, 254, 0, 4, 36, 247,
	254, 0, 4, 36, 248, 254, 0, 4,
	36, 249, 254, 0, 4, 37, 33, 31,
	30, 4, 38, 33, 31, 30, 4, 42,
	270, 1, 272, 4, 44, 32, 4, 66,
	4, 50, 49, 31, 30, 4, 50, 65,
	0, 1, 4, 68, 19, 9, 10, 4,
	73, 78, 0, 1, 4, 75, 19, 9,
	10, 4, 83, 84, 24, 21, 4, 89,
	148, 149, 271, 4, 90, 91, 1, 0,
	4, 92, 93, 1, 0, 4, 98, 99,
	1, 0, 4, 193, 1, 237, 0, 4,
	194, 1, 237, 0, 4, 195, 1, 237,
	0, 4, 196, 1, 237, 0, 4, 197,
	1, 237, 0, 4, 198, 1, 237, 0,
	4, 199, 1, 237, 0, 4, 200, 1,
	237, 0, 4, 201, 1, 237, 0, 4,
	202, 1, 237, 0, 4, 203, 1, 237,
	0, 4, 204, 1, 237, 0, 4, 205,
	1, 237, 0, 4, 206, 1, 237, 0,
	4, 207, 1, 237, 0, 4, 208, 1,
	237, 0, 4, 209, 1, 237, 0, 4,
	210, 1, 237, 0, 4, 211, 1, 237,
	0, 4, 212, 1, 237, 0, 4, 213,
	1, 237, 0, 4, 214, 1, 237, 0,
	4, 215, 1, 237, 0, 4, 216, 1,
	237, 0, 4, 217, 1, 237, 0, 4,
	218, 1, 237, 0, 4, 219, 1, 237,
	0, 4, 220, 1, 237, 0, 4, 221,
	1, 237, 0, 4, 222, 1, 237, 0,
	4, 223, 1, 237, 0, 4, 224, 1,
	237, 0, 4, 225, 1, 237, 0, 4,
	226, 1, 237, 0, 4, 227, 1, 237,
	0, 4, 228, 1, 237, 0, 4, 229,
	1, 237, 0, 4, 230, 1, 237, 0,
	4, 231, 1, 237, 0, 4, 232, 1,
	237, 0, 4, 233, 1, 237, 0, 4,
	234, 1, 237, 0, 4, 235, 1, 237,
	0, 4, 236, 1, 237, 0, 4, 276,
	270, 1, 272, 4, 276, 270, 1, 318,
	4, 277, 270, 1, 272, 4, 278, 270,
	1, 272, 4, 279, 270, 1, 272, 4,
	280, 270, 1, 272, 4, 281, 270, 1,
	272, 4, 282, 270, 1, 272, 4, 283,
	270, 1, 272, 4, 284, 270, 1, 272,
	4, 285, 270, 1, 272, 4, 286, 270,
	1, 272, 4, 287, 270, 1, 272, 4,
	288, 270, 1, 272, 4, 289, 270, 1,
	272, 4, 290, 270, 1, 272, 4, 291,
	270, 1, 272, 4, 292, 270, 1, 272,
	4, 293, 270, 1, 272, 4, 294, 270,
	1, 272, 4, 295, 270, 1, 272, 4,
	296, 270, 1, 272, 4, 297, 270, 1,
	272, 4, 298, 270, 1, 272, 4, 299,
	270, 1, 272, 4, 300, 270, 1, 272,
	4, 301, 270, 1, 272, 4, 302, 270,
	1, 272, 4, 303, 270, 1, 272, 4,
	304, 270, 1, 272, 4, 305, 270, 1,
	272, 4, 306, 270, 1, 272, 4, 307,
	270, 1, 272, 4, 308, 270, 1, 272,
	4, 309, 270, 1, 272, 4, 310, 270,
	1, 272, 4, 311, 270, 1, 272, 4,
	312, 270, 1, 272, 4, 313, 270, 1,
	272, 4, 314, 270, 1, 272, 4, 315,
	270, 1, 272, 4, 316, 270, 1, 272,
	4, 317, 270, 1, 272, 5, 16, 76,
	78, 0, 1, 5, 25, 1, 276, 270,
	272, 5, 25, 1, 276, 270, 318, 5,
	27, 32, 275, 271, 4, 5, 31, 30,
	272, 24, 21, 5, 34, 36, 246, 254,
	0, 5, 34, 36, 247, 254, 0, 5,
	34, 36, 248, 254, 0, 5, 34, 36,
	249, 254, 0, 5, 36, 246, 1, 254,
	0, 5, 36, 247, 1, 254, 0, 5,
	36, 248, 1, 254, 0, 5, 36, 249,
	1, 254, 0, 5, 44, 32, 275, 271,
	4, 5, 83, 84, 272, 24, 21, 5,
	252, 37, 33, 31, 30, 5, 276, 270,
	1, 272, 318, 5, 276, 270, 272, 318,
	1, 6, 25, 1, 276, 270, 272, 318,
	6, 27, 44, 32, 275, 271, 4, 6,
	34, 36, 246, 1, 254, 0, 6, 34,
	36, 247, 1, 254, 0, 6, 34, 36,
	248, 1, 254, 0, 6, 34, 36, 249,
	1, 254, 0
};

static const short _zone_scanner_cond_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 12,
	14, 14, 14, 17, 19, 22, 24, 26,
	28, 28, 28, 30, 35, 35, 35, 35,
	35, 35, 37, 39, 39, 39, 41, 41,
	41, 41, 43, 43, 43, 43, 43, 45,
	45, 45, 45, 47, 47, 47, 47, 49,
	51, 51, 51, 51, 51, 53, 53, 55,
	55, 55, 55, 55, 57, 57, 59, 61,
	61, 61, 61, 61, 61, 61, 61, 63,
	63, 63, 65, 67, 67, 67, 69, 69,
	71, 71, 73, 75, 75, 75, 75, 75,
	77, 79, 79, 79, 79, 79, 81, 81,
	83, 85, 85, 87, 89, 89, 89, 89,
	89, 91, 91, 91, 93, 93, 95, 95,
	95, 95, 97, 99, 99, 99, 101, 101,
	103, 103, 105, 105, 105, 105, 107, 107,
	107, 107, 109, 109, 111, 111, 111, 111,
	113, 113, 113, 115, 118, 120, 120, 122,
	124, 126, 128, 128, 130, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 135,
	137, 140, 142, 144, 147, 149, 149, 151,
	154, 156, 158, 160, 162, 164, 167, 169,
	171, 173, 175, 177, 179, 181, 183, 185,
	187, 189, 191, 193, 195, 197, 199, 201,
	204, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 208, 210, 212, 215, 217,
	219, 221, 223, 225, 227, 229, 231, 233,
	235, 237, 239, 241, 243, 245, 247, 249,
	251, 256, 261, 266, 266, 266, 268, 268,
	268, 268, 270, 270, 272, 275, 277, 279,
	284, 289, 292, 297, 299, 301, 303, 305,
	307, 309, 311, 313, 315, 317, 319, 321,
	323, 325, 328, 331, 333, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 337,
	337, 337, 337, 337, 338, 340, 342, 344,
	346, 346, 348, 348, 350, 353, 355, 357,
	357, 359, 361, 361, 361, 361, 361, 361,
	363, 366, 368, 370, 372, 374, 374, 376,
	378, 378, 378, 378, 378, 378, 380, 383,
	385, 388, 391, 391, 391, 391, 391, 393,
	396, 396, 398, 400, 402, 402, 402, 404,
	407, 407, 407, 409, 409, 409, 409, 409,
	409, 411, 413, 413, 413, 415, 415, 415,
	415, 417, 417, 417, 417, 417, 419, 419,
	419, 419, 421, 421, 421, 421, 423, 425,
	425, 425, 425, 425, 427, 427, 429, 429,
	429, 429, 429, 431, 431, 431, 431, 431,
	431, 431, 431, 433, 433, 433, 435, 437,
	437, 437, 439, 439, 441, 441, 443, 445,
	445, 445, 445, 445, 447, 449, 449, 449,
	449, 449, 451, 451, 453, 455, 455, 457,
	459, 459, 459, 459, 459, 461, 461, 461,
	463, 463, 465, 465, 465, 465, 467, 469,
	469, 469, 471, 471, 473, 473, 475, 475,
	475, 475, 477, 477, 477, 477, 479, 479,
	481, 481, 481, 481, 483, 483, 483, 485,
	485, 485, 485, 487, 487, 489, 491, 493,
	495, 497, 497, 499, 502, 505, 508, 510,
	512, 514, 516, 516, 518, 521, 524, 526,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 531,
	533, 535, 537, 539, 541, 543, 545, 547,
	549, 551, 553, 553, 553, 553, 553, 556,
	558, 558, 560, 563, 565, 565, 567, 570,
	572, 572, 574, 577, 580, 583, 583, 585,
	587, 587, 590, 590, 592, 594, 594, 597,
	597, 599, 601, 601, 604, 604, 606, 608,
	611, 611, 611, 611, 613, 615, 617, 619,
	621, 623, 625, 627, 629, 631, 633, 635,
	637, 639, 641, 643, 643, 645, 647, 649,
	651, 653, 655, 657, 659, 662, 664, 666,
	669, 671, 673, 675, 678, 680, 682, 684,
	687, 689, 691, 693, 696, 698, 701, 703,
	705, 708, 711, 714, 716, 719, 721, 723,
	726, 729, 729, 731, 733, 735, 737, 739,
	741, 741, 744, 747, 750, 750, 752, 754,
	756, 758, 760, 762, 764, 766, 768, 770,
	770, 773, 776, 779, 782, 785, 785, 787,
	789, 791, 793, 795, 797, 799, 802, 805,
	808, 810, 810, 810, 810, 810, 810, 812,
	815, 815, 815, 815, 815, 817, 819, 821,
	823, 825, 827, 827, 829, 832, 835, 838,
	841, 841, 843, 845, 847, 849, 849, 851,
	854, 857, 860, 860, 862, 864, 866, 868,
	870, 872, 878, 889, 891, 894, 900, 903,
	914, 917, 920, 923, 925, 927, 929, 931,
	937, 940, 943, 945, 947, 949, 951, 957,
	960, 963, 965, 967, 969, 971, 977, 980,
	983, 986, 986, 988, 990, 992, 994, 996,
	998, 1000, 1002, 1004, 1006, 1008, 1010, 1012,
	1014, 1016, 1018, 1020, 1023, 1026, 1029, 1032,
	1035, 1038, 1041, 1044, 1044, 1044, 1046, 1046,
	1046, 1046, 1048, 1048, 1050, 1050, 1050, 1052,
	1052, 1052, 1052, 1052, 1052, 1054, 1056, 1056,
	1056, 1058, 1058, 1058, 1058, 1060, 1060, 1060,
	1060, 1060, 1062, 1062, 1062, 1062, 1064, 1064,
	1064, 1064, 1066, 1068, 1068, 1068, 1068, 1068,
	1070, 1070, 1072, 1072, 1072, 1072, 1072, 1074,
	1074, 1074, 1074, 1074, 1074, 1074, 1074, 1076,
	1076, 1076, 1078, 1080, 1080, 1080, 1082, 1082,
	1084, 1084, 1086, 1088, 1088, 1088, 1088, 1088,
	1090, 1092, 1092, 1092, 1092, 1092, 1094, 1094,
	1096, 1098, 1098, 1100, 1102, 1102, 1102, 1102,
	1102, 1104, 1104, 1104, 1106, 1106, 1108, 1108,
	1108, 1108, 1110, 1112, 1112, 1112, 1114, 1114,
	1116, 1116, 1118, 1118, 1118, 1118, 1120, 1120,
	1120, 1120, 1122, 1122, 1124, 1124, 1124, 1124,
	1126, 1126, 1126, 1128, 1128, 1128, 1128, 1128,
	1130, 1132, 1134, 1136, 1138, 1140, 1142, 1145,
	1148, 1151, 1151, 1153, 1153, 1155, 1157, 1159,
	1161, 1163, 1165, 1167, 1169, 1169, 1169, 1169,
	1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169,
	1169, 1169, 1169, 1172, 1172, 1174, 1177, 1180,
	1183, 1183, 1185, 1187, 1189, 1191, 1193, 1195,
	1195, 1195, 1195, 1198, 1201, 1204, 1204, 1206,
	1208, 1210, 1212, 1214, 1216, 1216, 1218, 1221,
	1224, 1227, 1230, 1230, 1232, 1234, 1234, 1237,
	1237, 1239, 1241, 1241, 1241, 1241, 1241, 1241,
	1241, 1241, 1241, 1241, 1244, 1244, 1244, 1244,
	1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244,
	1244, 1244, 1246, 1248, 1250, 1252, 1252, 1255,
	1258, 1258, 1260, 1262, 1264, 1266, 1266, 1269,
	1272, 1274, 1276, 1278, 1280, 1282, 1284, 1286,
	1288, 1290, 1292, 1292, 1292, 1292, 1292, 1292,
	1292, 1292, 1294, 1294, 1296, 1299, 1299, 1301,
	1304, 1304, 1306, 1309, 1311, 1311, 1313, 1316,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1321, 1324, 1324, 1324, 1326, 1329,
	1331, 1334, 1336, 1339, 1341, 1344, 1344, 1344,
	1344, 1344, 1346, 1349, 1349, 1351, 1354, 1354,
	1356, 1359, 1359, 1365, 1368, 1379, 1382, 1393,
	1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396,
	1398, 1401, 1401, 1401, 1401, 1401, 1401
};

static const char _zone_scanner_cond_lengths[] = {
	0, 2, 2, 2, 2, 2, 2, 2,
	0, 0, 3, 2, 3, 2, 2, 2,
	0, 0, 2, 5, 0, 0, 0, 0,
	0, 2, 2, 0, 0, 2, 0, 0,
	0, 2, 0, 0, 0, 0, 2, 0,
	0, 0, 2, 0, 0, 0, 2, 2,
	0, 0, 0, 0, 2, 0, 2, 0,
	0, 0, 0, 2, 0, 2, 2, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 2, 2, 0, 0, 2, 0, 2,
	0, 2, 2, 0, 0, 0, 0, 2,
	2, 0, 0, 0, 0, 2, 0, 2,
	2, 0, 2, 2, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 2, 0, 0,
	0, 2, 2, 0, 0, 2, 0, 2,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 2,
	0, 0, 2, 3, 2, 0, 2, 2,
	2, 2, 0, 2, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 2,
	3, 2, 2, 3, 2, 0, 2, 3,
	2, 2, 2, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3,
	2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	5, 5, 5, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 3, 2, 2, 5,
	5, 3, 5, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 3, 2, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 0,
	0, 0, 0, 1, 2, 2, 2, 2,
	0, 2, 0, 2, 3, 2, 2, 0,
	2, 2, 0, 0, 0, 0, 0, 2,
	3, 2, 2, 2, 2, 0, 2, 2,
	0, 0, 0, 0, 0, 2, 3, 2,
	3, 3, 0, 0, 0, 0, 2, 3,
	0, 2, 2, 2, 0, 0, 2, 3,
	0, 0, 2, 0, 0, 0, 0, 0,
	2, 2, 0, 0, 2, 0, 0, 0,
	2, 0, 0, 0, 0, 2, 0, 0,
	0, 2, 0, 0, 0, 2, 2, 0,
	0, 0, 0, 2, 0, 2, 0, 0,
	0, 0, 2, 0, 0, 0, 0, 0,
	0, 0, 2, 0, 0, 2, 2, 0,
	0, 2, 0, 2, 0, 2, 2, 0,
	0, 0, 0, 2, 2, 0, 0, 0,
	0, 2, 0, 2, 2, 0, 2, 2,
	0, 0, 0, 0, 2, 0, 0, 2,
	0, 2, 0, 0, 0, 2, 2, 0,
	0, 2, 0, 2, 0, 2, 0, 0,
	0, 2, 0, 0, 0, 2, 0, 2,
	0, 0, 0, 2, 0, 0, 2, 0,
	0, 0, 2, 0, 2, 2, 2, 2,
	2, 0, 2, 3, 3, 3, 2, 2,
	2, 2, 0, 2, 3, 3, 2, 3,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 0, 0, 0, 0, 3, 2,
	0, 2, 3, 2, 0, 2, 3, 2,
	0, 2, 3, 3, 3, 0, 2, 2,
	0, 3, 0, 2, 2, 0, 3, 0,
	2, 2, 0, 3, 0, 2, 2, 3,
	0, 0, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 2, 3,
	2, 2, 2, 3, 2, 3, 2, 2,
	3, 3, 3, 2, 3, 2, 2, 3,
	3, 0, 2, 2, 2, 2, 2, 2,
	0, 3, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 0,
	3, 3, 3, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3,
	2, 0, 0, 0, 0, 0, 2, 3,
	0, 0, 0, 0, 2, 2, 2, 2,
	2, 2, 0, 2, 3, 3, 3, 3,
	0, 2, 2, 2, 2, 0, 2, 3,
	3, 3, 0, 2, 2, 2, 2, 2,
	2, 6, 11, 2, 3, 6, 3, 11,
	3, 3, 3, 2, 2, 2, 2, 6,
	3, 3, 2, 2, 2, 2, 6, 3,
	3, 2, 2, 2, 2, 6, 3, 3,
	3, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 0, 0, 2, 0,
	0, 0, 0, 0, 2, 2, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 2, 2, 0, 0, 0, 0, 2,
	0, 2, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 2, 2, 0, 0, 2, 0, 2,
	0, 2, 2, 0, 0, 0, 0, 2,
	2, 0, 0, 0, 0, 2, 0, 2,
	2, 0, 2, 2, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 2, 0, 0,
	0, 2, 2, 0, 0, 2, 0, 2,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 0, 0, 2,
	2, 2, 2, 2, 2, 2, 3, 3,
	3, 0, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3, 0, 2, 3, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 0,
	0, 0, 3, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 0, 2, 3, 3,
	3, 3, 0, 2, 2, 0, 3, 0,
	2, 2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 2, 2, 2, 0, 3, 3,
	0, 2, 2, 2, 2, 0, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 2, 3, 0, 2, 3,
	0, 2, 3, 2, 0, 2, 3, 3,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 3, 0, 0, 2, 3, 2,
	3, 2, 3, 2, 3, 0, 0, 0,
	0, 2, 3, 0, 2, 3, 0, 2,
	3, 0, 6, 3, 11, 3, 11, 3,
	0, 0, 0, 0, 0, 0, 0, 2,
	3, 0, 0, 0, 0, 0, 0
};

static const short _zone_scanner_cond_keys[] = {
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 58, 59, 59, 60, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 10, 10, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, 9, 9, 10, 10,
	32, 32, 40, 40, 41, 41, 43, 43,
	47, 47, 48, 57, 59, 59, 65, 90,
	97, 122, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 9, 9, 10, 10,
	32, 32, 40, 40, 41, 41, 59, 59,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	43, 43, 47, 47, 48, 57, 59, 59,
	65, 90, 97, 122, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 43, 43, 47, 47, 48, 57,
	59, 59, 65, 90, 97, 122, -128, 9,
	10, 10, 11, 127, 9, 9, 10, 10,
	32, 32, 40, 40, 41, 41, 43, 43,
	47, 47, 48, 57, 59, 59, 65, 90,
	97, 122, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 0
};

static const char _zone_scanner_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 0, 0, 0, 5, 5,
	0, 0, 0, 0, 5, 5, 0, 0,
	0, 0, 0, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 0, 0, 0, 0, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 5, 5, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5, 5, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5,
	5, 5, 5, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 5, 5, 5, 5,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5,
	5, 0, 0, 0, 5, 5, 5, 5,
	5, 5, 5, 5, 0, 0, 0, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 0, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5, 5, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5, 5, 5, 5,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 0, 0, 0, 5, 5,
	5, 5, 0, 0, 0, 5, 5, 5,
	5, 5, 5, 0, 0, 0, 5, 5,
	5, 5, 5, 5, 0, 0, 0, 5,
	5, 5, 5, 5, 5, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	5, 5, 5, 5, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5, 5, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	8, 11, 8, 8, 8, 11, 3, 6,
	3, 3, 3, 3, 3, 3, 6, 3,
	3, 1, 1, 6, 6, 6, 4, 9,
	4, 4, 4, 9, 7, 7, 7, 8,
	11, 8, 8, 8, 3, 3, 3, 11,
	3, 3, 10, 10, 10, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 8, 11, 8, 8, 8,
	11, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 8,
	11, 8, 8, 8, 11, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 8, 11, 8, 8, 8,
	11, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5, 5,
	5, 5, 5, 5, 0, 0, 5, 5,
	0, 0, 0, 5, 5, 0, 0, 0,
	5, 5, 0, 0, 0, 0, 0, 5,
	5, 0, 0, 0, 0, 0, 0, 5,
	5, 0, 0, 0, 5, 5, 0, 0,
	0, 5, 5, 0, 0, 0, 5, 5,
	0, 0, 0, 5, 5, 0, 0, 0,
	5, 5, 0, 0, 0, 5, 5, 0,
	0, 0, 5, 5, 0, 0, 0, 4,
	9, 4, 4, 4, 9, 7, 7, 7,
	3, 6, 3, 3, 3, 3, 3, 3,
	6, 3, 3, 6, 6, 6, 8, 11,
	8, 8, 8, 3, 3, 3, 11, 3,
	3, 10, 10, 10, 5, 5, 0, 0,
	0, 0
};

static const short _zone_scanner_key_offsets[] = {
	0, 0, 40, 58, 94, 110, 127, 135,
	143, 144, 145, 148, 167, 173, 225, 245,
	283, 291, 293, 303, 317, 321, 323, 325,
	327, 329, 339, 349, 351, 353, 363, 365,
	367, 369, 379, 385, 387, 389, 391, 401,
	405, 407, 409, 419, 421, 423, 425, 435,
	445, 447, 449, 451, 452, 462, 463, 473,
	475, 477, 479, 481, 491, 495, 501, 537,
	539, 541, 543, 545, 547, 549, 551, 561,
	565, 567, 577, 587, 593, 594, 604, 605,
	615, 617, 627, 637, 641, 643, 645, 647,
	657, 667, 673, 675, 677, 679, 689, 691,
	701, 713, 715, 726, 738, 740, 742, 744,
	746, 756, 758, 760, 770, 776, 786, 788,
	790, 792, 802, 812, 820, 822, 832, 834,
	844, 846, 856, 858, 860, 862, 872, 878,
	880, 882, 892, 894, 904, 906, 908, 910,
	922, 924, 926, 936, 939, 979, 983, 989,
	1027, 1045, 1053, 1065, 1073, 1076, 1077, 1083,
	1085, 1087, 1089, 1091, 1093, 1095, 1101, 1107,
	1145, 1148, 1166, 1204, 1207, 1215, 1227, 1235,
	1238, 1254, 1304, 1322, 1341, 1381, 1387, 1401,
	1415, 1467, 1483, 1497, 1507, 1517, 1529, 1541,
	1555, 1567, 1581, 1591, 1605, 1621, 1635, 1645,
	1651, 1665, 1667, 1669, 1671, 1673, 1675, 1681,
	1683, 1685, 1691, 1699, 1719, 1759, 1765, 1783,
	1835, 1851, 1865, 1875, 1885, 1897, 1909, 1923,
	1935, 1949, 1959, 1973, 1989, 2003, 2013, 2028,
	2068, 2082, 2096, 2110, 2112, 2114, 2124, 2126,
	2128, 2130, 2140, 2142, 2152, 2158, 2172, 2186,
	2202, 2216, 2219, 2233, 2247, 2259, 2267, 2275,
	2285, 2295, 2307, 2317, 2329, 2337, 2349, 2363,
	2375, 2383, 2389, 2395, 2405, 2411, 2412, 2413,
	2424, 2440, 2456, 2458, 2460, 2462, 2478, 2484,
	2490, 2496, 2508, 2510, 2512, 2514, 2526, 2532,
	2538, 2540, 2542, 2544, 2550, 2556, 2564, 2584,
	2592, 2593, 2603, 2615, 2625, 2628, 2634, 2650,
	2660, 2678, 2686, 2687, 2689, 2691, 2693, 2703,
	2711, 2714, 2720, 2732, 2740, 2758, 2768, 2786,
	2794, 2795, 2797, 2799, 2801, 2811, 2819, 2825,
	2841, 2844, 2847, 2854, 2861, 2869, 2877, 2894,
	2897, 2898, 2908, 2948, 2964, 2966, 2968, 2978,
	2981, 2989, 2991, 3001, 3005, 3007, 3009, 3011,
	3013, 3023, 3033, 3035, 3037, 3047, 3049, 3051,
	3053, 3063, 3069, 3071, 3073, 3075, 3085, 3089,
	3091, 3093, 3103, 3105, 3107, 3109, 3119, 3129,
	3131, 3133, 3135, 3136, 3146, 3147, 3157, 3159,
	3161, 3163, 3165, 3175, 3177, 3179, 3181, 3183,
	3185, 3187, 3189, 3199, 3203, 3205, 3215, 3225,
	3231, 3232, 3242, 3243, 3253, 3255, 3265, 3275,
	3279, 3281, 3283, 3285, 3295, 3305, 3311, 3313,
	3315, 3317, 3327, 3329, 3339, 3351, 3353, 3364,
	3376, 3378, 3380, 3382, 3384, 3394, 3396, 3398,
	3408, 3414, 3424, 3426, 3428, 3430, 3440, 3450,
	3458, 3460, 3470, 3472, 3482, 3484, 3494, 3496,
	3498, 3500, 3510, 3516, 3518, 3520, 3530, 3532,
	3542, 3544, 3546, 3548, 3560, 3562, 3564, 3574,
	3576, 3578, 3580, 3590, 3592, 3602, 3608, 3616,
	3624, 3636, 3642, 3658, 3661, 3664, 3667, 3673,
	3682, 3692, 3704, 3710, 3726, 3729, 3732, 3740,
	3743, 3755, 3763, 3767, 3773, 3775, 3782, 3784,
	3786, 3788, 3790, 3791, 3792, 3794, 3796, 3798,
	3799, 3805, 3809, 3813, 3814, 3816, 3818, 3820,
	3822, 3828, 3830, 3832, 3834, 3836, 3837, 3838,
	3840, 3842, 3844, 3845, 3846, 3847, 3853, 3854,
	3855, 3857, 3859, 3861, 3862, 3863, 3864, 3870,
	3872, 3873, 3874, 3875, 3876, 3882, 3883, 3884,
	3890, 3892, 3894, 3896, 3898, 3900, 3902, 3904,
	3910, 3912, 3914, 3916, 3918, 3920, 3922, 3926,
	3928, 3930, 3936, 3938, 3940, 3946, 3948, 3950,
	3954, 3956, 3957, 3963, 3965, 3967, 3970, 3977,
	3979, 3981, 3983, 3985, 3986, 3987, 3989, 3991,
	3993, 3994, 4000, 4001, 4002, 4008, 4009, 4010,
	4016, 4030, 4038, 4040, 4042, 4044, 4046, 4048,
	4054, 4060, 4062, 4064, 4066, 4068, 4070, 4076,
	4080, 4082, 4088, 4090, 4092, 4098, 4100, 4102,
	4104, 4110, 4112, 4114, 4120, 4124, 4126, 4132,
	4134, 4136, 4142, 4144, 4146, 4148, 4154, 4156,
	4158, 4164, 4167, 4176, 4185, 4191, 4200, 4206,
	4221, 4227, 4235, 4243, 4251, 4269, 4277, 4295,
	4303, 4321, 4329, 4347, 4355, 4367, 4375, 4378,
	4386, 4398, 4406, 4409, 4417, 4429, 4437, 4440,
	4448, 4460, 4468, 4471, 4474, 4477, 4483, 4489,
	4501, 4507, 4510, 4519, 4525, 4540, 4546, 4549,
	4551, 4559, 4574, 4580, 4583, 4589, 4599, 4615,
	4618, 4625, 4638, 4640, 4648, 4658, 4666, 4676,
	4685, 4693, 4699, 4707, 4715, 4725, 4733, 4743,
	4752, 4760, 4766, 4775, 4777, 4791, 4803, 4817,
	4829, 4843, 4855, 4869, 4879, 4882, 4895, 4908,
	4911, 4924, 4937, 4947, 4950, 4963, 4976, 4986,
	4989, 5002, 5015, 5025, 5028, 5034, 5037, 5045,
	5053, 5056, 5059, 5062, 5068, 5071, 5079, 5087,
	5090, 5093, 5095, 5103, 5111, 5119, 5127, 5135,
	5150, 5156, 5159, 5162, 5165, 5167, 5175, 5183,
	5191, 5203, 5209, 5221, 5227, 5239, 5245, 5260,
	5266, 5269, 5272, 5275, 5278, 5281, 5287, 5293,
	5301, 5309, 5321, 5327, 5340, 5342, 5345, 5348,
	5351, 5364, 5366, 5367, 5370, 5373, 5375, 5387,
	5390, 5391, 5398, 5405, 5407, 5415, 5427, 5433,
	5441, 5449, 5461, 5467, 5483, 5486, 5489, 5492,
	5495, 5497, 5505, 5513, 5521, 5533, 5539, 5555,
	5558, 5561, 5564, 5566, 5574, 5584, 5590, 5598,
	5606, 5613, 5647, 5660, 5662, 5665, 5679, 5682,
	5723, 5732, 5735, 5738, 5744, 5752, 5760, 5769,
	5806, 5809, 5812, 5818, 5826, 5834, 5847, 5888,
	5891, 5894, 5900, 5908, 5916, 5931, 5965, 5968,
	5971, 5974, 6004, 6016, 6028, 6034, 6042, 6050,
	6058, 6066, 6074, 6082, 6090, 6098, 6106, 6114,
	6129, 6135, 6148, 6150, 6153, 6156, 6159, 6162,
	6165, 6168, 6171, 6174, 6176, 6178, 6184, 6186,
	6188, 6190, 6196, 6198, 6204, 6212, 6214, 6220,
	6224, 6226, 6228, 6230, 6232, 6238, 6244, 6246,
	6248, 6254, 6256, 6258, 6260, 6266, 6272, 6274,
	6276, 6278, 6284, 6288, 6290, 6292, 6298, 6300,
	6302, 6304, 6310, 6316, 6318, 6320, 6322, 6323,
	6329, 6330, 6336, 6338, 6340, 6342, 6344, 6350,
	6352, 6354, 6356, 6358, 6360, 6362, 6364, 6370,
	6374, 6376, 6382, 6388, 6394, 6395, 6401, 6402,
	6408, 6410, 6416, 6422, 6426, 6428, 6430, 6432,
	6438, 6444, 6450, 6452, 6454, 6456, 6462, 6464,
	6470, 6478, 6480, 6487, 6495, 6497, 6499, 6501,
	6503, 6509, 6511, 6513, 6519, 6525, 6531, 6533,
	6535, 6537, 6543, 6549, 6557, 6559, 6565, 6567,
	6573, 6575, 6581, 6583, 6585, 6587, 6593, 6599,
	6601, 6603, 6609, 6611, 6617, 6619, 6621, 6623,
	6631, 6633, 6635, 6641, 6650, 6656, 6662, 6664,
	6672, 6680, 6688, 6700, 6706, 6719, 6721, 6724,
	6727, 6730, 6737, 6739, 6741, 6749, 6757, 6765,
	6773, 6781, 6794, 6800, 6812, 6818, 6825, 6831,
	6838, 6845, 6851, 6858, 6870, 6876, 6877, 6878,
	6879, 6880, 6881, 6884, 6890, 6902, 6905, 6908,
	6911, 6913, 6921, 6929, 6937, 6945, 6953, 6966,
	6972, 6978, 6990, 6993, 6996, 6999, 7001, 7009,
	7017, 7025, 7033, 7041, 7053, 7059, 7075, 7078,
	7081, 7084, 7087, 7089, 7097, 7106, 7115, 7118,
	7120, 7128, 7140, 7146, 7152, 7158, 7159, 7165,
	7171, 7177, 7183, 7190, 7193, 7199, 7205, 7206,
	7212, 7218, 7225, 7231, 7237, 7238, 7244, 7250,
	7257, 7259, 7267, 7275, 7283, 7295, 7301, 7304,
	7307, 7309, 7317, 7329, 7335, 7347, 7353, 7356,
	7359, 7377, 7410, 7458, 7508, 7526, 7576, 7594,
	7627, 7692, 7757, 7757, 7757, 7757, 7769, 7769,
	7769, 7769, 7785, 7785, 7802, 7805, 7805, 7845,
	7848, 7848, 7864, 7867, 7879, 7879, 7895, 7898,
	7901, 7901, 7901, 7901, 7901, 7901, 7901, 7901,
	7901, 7901, 7917, 7920, 7920, 7920, 7930, 7933,
	7945, 7948, 7960, 7963, 7975, 7978, 7978, 7978,
	7978, 7978, 7991, 7994, 7994, 8010, 8013, 8013,
	8029, 8032, 8032, 8046, 8049, 8062, 8065, 8106,
	8115, 8115, 8115, 8115, 8115, 8115, 8115, 8115,
	8131, 8134, 8134, 8134, 8134, 8134, 8134
};

static const short _zone_scanner_trans_keys[] = {
	9, 32, 40, 41, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 778, 827, 1034, 1083, 48, 57,
	9, 32, 40, 41, 68, 72, 77, 83,
	87, 100, 104, 109, 115, 119, 1034, 1083,
	48, 57, 9, 32, 40, 41, 65, 67,
	68, 69, 72, 73, 75, 76, 77, 78,
	80, 82, 83, 84, 85, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1034, 1083, 9, 32,
	40, 41, 65, 70, 80, 97, 102, 112,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 92, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 778, 827, 1034, 1083, 9,
	32, 40, 41, 778, 827, 1034, 1083, 10,
	35, 1034, 896, 1151, 9, 32, 40, 41,
	92, 1802, 1851, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 58, 60, 127, 778,
	1034, 640, 895, 896, 1151, 9, 32, 40,
	41, 58, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 92, 97, 99, 100, 101, 104, 105,
	107, 108, 109, 110, 112, 114, 115, 116,
	117, 1802, 1851, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 47, 48, 57, 60,
	127, 9, 32, 40, 41, 68, 72, 77,
	83, 87, 100, 104, 109, 115, 119, 778,
	827, 1034, 1083, 48, 57, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 778,
	827, 1034, 1083, 65, 68, 69, 78, 97,
	100, 101, 110, 65, 97, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 777,
	778, 800, 808, 809, 827, 1033, 1034, 1056,
	1064, 1065, 1083, 896, 1151, 78, 83, 110,
	115, 83, 115, 75, 107, 69, 101, 89,
	121, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 82, 114, 84,
	116, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 65, 97, 77, 109, 69,
	101, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 72, 78, 83, 104, 110,
	115, 67, 99, 73, 105, 68, 100, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 65, 83, 97, 115, 77, 109, 69,
	101, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 75, 107, 69, 101, 89,
	121, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 85, 117, 73,
	105, 52, 54, 56, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 52, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 73, 105, 78, 110, 70, 102, 79,
	111, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 78, 80, 110, 112, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 1034,
	1083, 80, 112, 83, 115, 69, 101, 67,
	99, 75, 107, 69, 101, 89, 121, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 69, 88, 101, 120, 89, 121, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 51, 54, 79, 80, 111,
	112, 50, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 52, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 67,
	99, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 73, 88, 105,
	120, 78, 110, 70, 102, 79, 111, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 65, 73, 83, 97, 105,
	115, 80, 112, 84, 116, 82, 114, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 68, 100, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 9, 32, 40,
	41, 69, 101, 2058, 2107, 2314, 2363, 2570,
	2619, 67, 99, 9, 32, 40, 41, 51,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 80, 112, 2058, 2107, 2314, 2363,
	2570, 2619, 65, 97, 82, 114, 65, 97,
	77, 109, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 84, 116, 82, 114,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 80, 82, 84, 112, 114, 116,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 83, 115, 73, 105, 71, 103,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 79, 80, 82, 83,
	111, 112, 114, 115, 65, 97, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	70, 102, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 86, 118, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	72, 104, 70, 102, 80, 112, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	76, 88, 89, 108, 120, 121, 83, 115,
	65, 97, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 84, 116, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	80, 112, 69, 101, 48, 57, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 82, 114, 73, 105, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	1034, 896, 1151, 9, 32, 40, 41, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 80, 82, 83, 84, 85, 97, 99,
	100, 101, 104, 105, 107, 108, 109, 110,
	112, 114, 115, 116, 117, 778, 827, 1034,
	1083, 48, 57, 78, 80, 110, 112, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 1034,
	1083, 48, 57, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 68, 72, 77,
	83, 87, 100, 104, 109, 115, 119, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 1034, 896, 1151, 10, 73, 79, 84,
	105, 111, 116, 78, 110, 67, 99, 76,
	108, 85, 117, 68, 100, 69, 101, 32,
	59, 9, 10, 40, 41, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 80, 82, 83, 84, 85, 97, 99,
	100, 101, 104, 105, 107, 108, 109, 110,
	112, 114, 115, 116, 117, 1034, 1083, 48,
	57, 1034, 896, 1151, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 1034, 1083, 48, 57, 9, 32,
	40, 41, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	1034, 1083, 48, 57, 1034, 896, 1151, 9,
	32, 40, 41, 1034, 1083, 48, 57, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 1034, 896, 1151, 9, 32,
	40, 41, 65, 70, 80, 97, 102, 112,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 58, 65, 67, 68, 69, 72,
	73, 75, 76, 77, 78, 80, 82, 83,
	84, 85, 92, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 2058, 2107, 2314, 2363, 2570, 2619,
	-128, 8, 11, 47, 48, 57, 60, 127,
	9, 32, 40, 41, 65, 70, 80, 97,
	102, 112, 1802, 1851, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 92, 1802,
	1851, 2058, 2107, 2314, 2363, 2570, 2619, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 778,
	827, 1034, 1083, 48, 57, 778, 1034, 640,
	895, 896, 1151, 9, 32, 40, 41, 778,
	827, 1034, 1083, -128, 8, 11, 58, 60,
	127, 9, 32, 40, 41, 778, 827, 1034,
	1083, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 58, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 92, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 1802, 1851, 2058, 2107, 2314,
	2363, 2570, 2619, -128, 8, 11, 47, 48,
	57, 60, 127, 9, 32, 40, 41, 65,
	68, 69, 78, 97, 100, 101, 110, 778,
	827, 1034, 1083, 9, 32, 40, 41, 72,
	78, 83, 104, 110, 115, 778, 827, 1034,
	1083, 9, 32, 40, 41, 85, 117, 778,
	827, 1034, 1083, 9, 32, 40, 41, 73,
	105, 778, 827, 1034, 1083, 9, 32, 40,
	41, 78, 80, 110, 112, 778, 827, 1034,
	1083, 9, 32, 40, 41, 69, 88, 101,
	120, 778, 827, 1034, 1083, 9, 32, 40,
	41, 51, 54, 79, 80, 111, 112, 778,
	827, 1034, 1083, 9, 32, 40, 41, 73,
	88, 105, 120, 778, 827, 1034, 1083, 9,
	32, 40, 41, 65, 73, 83, 97, 105,
	115, 778, 827, 1034, 1083, 9, 32, 40,
	41, 84, 116, 778, 827, 1034, 1083, 9,
	32, 40, 41, 80, 82, 84, 112, 114,
	116, 778, 827, 1034, 1083, 9, 32, 40,
	41, 79, 80, 82, 83, 111, 112, 114,
	115, 778, 827, 1034, 1083, 9, 32, 40,
	41, 76, 88, 89, 108, 120, 121, 778,
	827, 1034, 1083, 9, 32, 40, 41, 82,
	114, 778, 827, 1034, 1083, 778, 1034, 640,
	895, 896, 1151, 9, 32, 40, 41, 73,
	79, 84, 105, 111, 116, 778, 827, 1034,
	1083, 82, 114, 73, 105, 71, 103, 73,
	105, 78, 110, 32, 59, 9, 10, 40,
	41, 84, 116, 76, 108, 32, 59, 9,
	10, 40, 41, 9, 32, 40, 41, 778,
	827, 1034, 1083, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 778, 827, 1034, 1083, 48, 57, 9,
	32, 40, 41, 65, 67, 68, 69, 72,
	73, 75, 76, 77, 78, 80, 82, 83,
	84, 85, 97, 99, 100, 101, 104, 105,
	107, 108, 109, 110, 112, 114, 115, 116,
	117, 778, 827, 1034, 1083, 48, 57, 778,
	1034, 640, 895, 896, 1151, 9, 32, 40,
	41, 65, 70, 80, 97, 102, 112, 1802,
	1851, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 58, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 92, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 1802, 1851, 2058, 2107, 2314,
	2363, 2570, 2619, -128, 8, 11, 47, 48,
	57, 60, 127, 9, 32, 40, 41, 65,
	68, 69, 78, 97, 100, 101, 110, 778,
	827, 1034, 1083, 9, 32, 40, 41, 72,
	78, 83, 104, 110, 115, 778, 827, 1034,
	1083, 9, 32, 40, 41, 85, 117, 778,
	827, 1034, 1083, 9, 32, 40, 41, 73,
	105, 778, 827, 1034, 1083, 9, 32, 40,
	41, 78, 80, 110, 112, 778, 827, 1034,
	1083, 9, 32, 40, 41, 69, 88, 101,
	120, 778, 827, 1034, 1083, 9, 32, 40,
	41, 51, 54, 79, 80, 111, 112, 778,
	827, 1034, 1083, 9, 32, 40, 41, 73,
	88, 105, 120, 778, 827, 1034, 1083, 9,
	32, 40, 41, 65, 73, 83, 97, 105,
	115, 778, 827, 1034, 1083, 9, 32, 40,
	41, 84, 116, 778, 827, 1034, 1083, 9,
	32, 40, 41, 80, 82, 84, 112, 114,
	116, 778, 827, 1034, 1083, 9, 32, 40,
	41, 79, 80, 82, 83, 111, 112, 114,
	115, 778, 827, 1034, 1083, 9, 32, 40,
	41, 76, 88, 89, 108, 120, 121, 778,
	827, 1034, 1083, 9, 32, 40, 41, 82,
	114, 778, 827, 1034, 1083, 9, 32, 35,
	40, 41, 778, 827, 1034, 1083, -128, 8,
	11, 58, 60, 127, 9, 32, 40, 41,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 112, 114, 115, 116, 117, 778, 827,
	1034, 1083, 48, 57, 777, 778, 800, 808,
	809, 827, 1033, 1034, 1056, 1064, 1065, 1083,
	896, 1151, 777, 778, 800, 808, 809, 827,
	1033, 1034, 1056, 1064, 1065, 1083, 896, 1151,
	777, 778, 800, 808, 809, 1033, 1034, 1056,
	1064, 1065, 640, 895, 896, 1151, 65, 97,
	65, 97, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 83, 115, 68, 100,
	66, 98, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 76, 108, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	778, 1034, 640, 895, 896, 1151, 9, 32,
	40, 41, 778, 827, 1034, 1083, -128, 8,
	11, 58, 60, 127, 9, 32, 40, 41,
	778, 827, 1034, 1083, -128, 8, 11, 58,
	60, 127, 777, 778, 800, 808, 809, 827,
	1033, 1034, 1056, 1064, 1065, 1083, 640, 895,
	896, 1151, 777, 778, 800, 808, 809, 1033,
	1034, 1056, 1064, 1065, 640, 895, 896, 1151,
	1034, 896, 1151, 777, 778, 800, 808, 809,
	827, 1033, 1034, 1056, 1064, 1065, 1083, 896,
	1151, 9, 32, 40, 41, 65, 68, 69,
	78, 97, 100, 101, 110, 1034, 1083, 9,
	32, 40, 41, 72, 78, 83, 104, 110,
	115, 1034, 1083, 9, 32, 40, 41, 85,
	117, 1034, 1083, 9, 32, 40, 41, 73,
	105, 1034, 1083, 9, 32, 40, 41, 78,
	80, 110, 112, 1034, 1083, 9, 32, 40,
	41, 69, 88, 101, 120, 1034, 1083, 9,
	32, 40, 41, 51, 54, 79, 80, 111,
	112, 1034, 1083, 9, 32, 40, 41, 73,
	88, 105, 120, 1034, 1083, 9, 32, 40,
	41, 65, 73, 83, 97, 105, 115, 1034,
	1083, 9, 32, 40, 41, 84, 116, 1034,
	1083, 9, 32, 40, 41, 80, 82, 84,
	112, 114, 116, 1034, 1083, 9, 32, 40,
	41, 79, 80, 82, 83, 111, 112, 114,
	115, 1034, 1083, 9, 32, 40, 41, 76,
	88, 89, 108, 120, 121, 1034, 1083, 9,
	32, 40, 41, 82, 114, 1034, 1083, 778,
	1034, 640, 895, 896, 1151, 778, 1034, 640,
	895, 896, 1151, 9, 32, 40, 41, 78,
	80, 110, 112, 1034, 1083, 778, 1034, 640,
	895, 896, 1151, 10, 10, 42, 46, 64,
	92, 95, 45, 57, 65, 90, 97, 122,
	32, 42, 46, 59, 92, 95, 9, 10,
	40, 41, 45, 57, 65, 90, 97, 122,
	32, 42, 45, 59, 92, 95, 9, 10,
	40, 41, 47, 57, 65, 90, 97, 122,
	48, 57, 48, 57, 48, 57, 32, 42,
	46, 59, 92, 95, 9, 10, 40, 41,
	45, 57, 65, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 32, 59, 9, 10,
	40, 41, 34, 92, 33, 58, 60, 126,
	32, 33, 59, 92, 9, 10, 35, 39,
	40, 41, 42, 126, 48, 57, 48, 57,
	48, 57, 32, 33, 59, 92, 9, 10,
	35, 39, 40, 41, 42, 126, 9, 34,
	92, 522, 32, 126, 32, 59, 9, 10,
	40, 41, 48, 57, 48, 57, 48, 57,
	9, 34, 92, 522, 32, 126, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 778, 827, 1034, 1083, 48, 57,
	9, 32, 40, 41, 778, 827, 1034, 1083,
	10, 9, 32, 40, 41, 778, 827, 1034,
	1083, 48, 57, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 48, 57, 9,
	32, 40, 41, 778, 827, 1034, 1083, 48,
	57, 1034, 896, 1151, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 42, 46,
	92, 95, 1034, 1083, 45, 57, 65, 90,
	97, 122, 42, 46, 92, 95, 45, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	42, 45, 92, 95, 778, 827, 1034, 1083,
	47, 57, 65, 90, 97, 122, 9, 32,
	40, 41, 778, 827, 1034, 1083, 10, 48,
	57, 48, 57, 48, 57, 42, 46, 92,
	95, 45, 57, 65, 90, 97, 122, 9,
	32, 40, 41, 778, 827, 1034, 1083, 1034,
	896, 1151, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, -128, 8,
	11, 58, 60, 127, 9, 32, 40, 41,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	42, 46, 92, 95, 778, 827, 1034, 1083,
	45, 57, 65, 90, 97, 122, 42, 46,
	92, 95, 45, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 42, 45, 92, 95,
	778, 827, 1034, 1083, 47, 57, 65, 90,
	97, 122, 9, 32, 40, 41, 778, 827,
	1034, 1083, 10, 48, 57, 48, 57, 48,
	57, 42, 46, 92, 95, 45, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 778,
	827, 1034, 1083, 778, 1034, 640, 895, 896,
	1151, 9, 32, 40, 41, 42, 46, 92,
	95, 1034, 1083, 45, 57, 65, 90, 97,
	122, 1034, 896, 1151, 1034, 896, 1151, 43,
	47, 57, 65, 90, 97, 122, 43, 47,
	57, 65, 90, 97, 122, 43, 61, 47,
	57, 65, 90, 97, 122, 43, 61, 47,
	57, 65, 90, 97, 122, 9, 32, 40,
	41, 43, 2058, 2107, 2314, 2363, 2570, 2619,
	47, 57, 65, 90, 97, 122, 1034, 896,
	1151, 61, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 112, 114, 115, 116, 117, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	65, 70, 80, 97, 102, 112, 2058, 2107,
	2314, 2363, 2570, 2619, 65, 97, 65, 97,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 1034, 896, 1151, 65, 68, 69,
	78, 97, 100, 101, 110, 65, 97, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 78, 83, 110, 115, 83, 115, 75,
	107, 69, 101, 89, 121, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 82, 114, 84, 116, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 65,
	97, 77, 109, 69, 101, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 72,
	78, 83, 104, 110, 115, 67, 99, 73,
	105, 68, 100, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 65, 83, 97,
	115, 77, 109, 69, 101, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 75,
	107, 69, 101, 89, 121, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 85, 117, 73, 105, 52, 54, 56,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 52, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 73, 105, 78,
	110, 70, 102, 79, 111, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 80,
	112, 83, 115, 69, 101, 67, 99, 75,
	107, 69, 101, 89, 121, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 69,
	88, 101, 120, 89, 121, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 51, 54, 79, 80, 111, 112, 50,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 52, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 67, 99, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 73, 88, 105, 120, 78,
	110, 70, 102, 79, 111, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 65, 73, 83, 97, 105, 115, 80,
	112, 84, 116, 82, 114, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 68,
	100, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 69,
	101, 2058, 2107, 2314, 2363, 2570, 2619, 67,
	99, 9, 32, 40, 41, 51, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	80, 112, 2058, 2107, 2314, 2363, 2570, 2619,
	65, 97, 82, 114, 65, 97, 77, 109,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 84, 116, 82, 114, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	80, 82, 84, 112, 114, 116, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	83, 115, 73, 105, 71, 103, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 79, 80, 82, 83, 111, 112,
	114, 115, 65, 97, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 70, 102,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 86, 118, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 72, 104,
	70, 102, 80, 112, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 76, 88,
	89, 108, 120, 121, 83, 115, 65, 97,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 84, 116, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 80, 112,
	69, 101, 48, 57, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	82, 114, 73, 105, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 83, 115,
	68, 100, 66, 98, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 76, 108,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 48, 1034, 1083,
	49, 57, 9, 32, 40, 41, 778, 827,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 65, 70, 97, 102,
	48, 57, 65, 70, 97, 102, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 65, 70, 97, 102, 1034, 896,
	1151, 1034, 896, 1151, 9, 32, 40, 41,
	1034, 1083, 48, 57, 1034, 896, 1151, 68,
	69, 73, 80, 82, 100, 101, 105, 112,
	114, 48, 57, 32, 59, 9, 10, 40,
	41, 48, 57, 72, 83, 104, 115, 32,
	59, 9, 10, 40, 41, 65, 97, 32,
	45, 59, 9, 10, 40, 41, 78, 110,
	83, 115, 69, 101, 67, 99, 51, 45,
	83, 115, 72, 104, 65, 97, 49, 32,
	59, 9, 10, 40, 41, 67, 68, 99,
	100, 67, 68, 99, 100, 45, 71, 103,
	79, 111, 83, 115, 84, 116, 32, 59,
	9, 10, 40, 41, 83, 115, 65, 97,
	80, 112, 50, 51, 53, 54, 83, 115,
	72, 104, 65, 97, 50, 53, 54, 32,
	59, 9, 10, 40, 41, 56, 52, 83,
	115, 72, 104, 65, 97, 51, 56, 52,
	32, 59, 9, 10, 40, 41, 50, 52,
	53, 53, 49, 57, 32, 59, 9, 10,
	40, 41, 52, 56, 32, 59, 9, 10,
	40, 41, 78, 110, 68, 100, 73, 105,
	82, 114, 69, 101, 67, 99, 84, 116,
	32, 59, 9, 10, 40, 41, 82, 114,
	73, 105, 86, 118, 65, 97, 84, 116,
	69, 101, 68, 79, 100, 111, 78, 110,
	83, 115, 32, 59, 9, 10, 40, 41,
	73, 105, 68, 100, 32, 59, 9, 10,
	40, 41, 83, 115, 65, 97, 77, 83,
	109, 115, 68, 100, 53, 32, 59, 9,
	10, 40, 41, 72, 104, 65, 97, 49,
	50, 53, 32, 45, 59, 9, 10, 40,
	41, 78, 110, 83, 115, 69, 101, 67,
	99, 51, 45, 83, 115, 72, 104, 65,
	97, 49, 32, 59, 9, 10, 40, 41,
	53, 54, 32, 59, 9, 10, 40, 41,
	49, 50, 32, 59, 9, 10, 40, 41,
	65, 73, 79, 80, 83, 85, 97, 105,
	111, 112, 115, 117, 48, 57, 32, 59,
	9, 10, 40, 41, 48, 57, 67, 99,
	80, 112, 75, 107, 73, 105, 88, 120,
	32, 59, 9, 10, 40, 41, 65, 80,
	83, 97, 112, 115, 67, 99, 80, 112,
	75, 107, 73, 105, 88, 120, 32, 59,
	9, 10, 40, 41, 71, 75, 103, 107,
	80, 112, 32, 59, 9, 10, 40, 41,
	73, 105, 88, 120, 32, 59, 9, 10,
	40, 41, 80, 112, 75, 107, 73, 105,
	32, 59, 9, 10, 40, 41, 73, 105,
	68, 100, 32, 59, 9, 10, 40, 41,
	71, 75, 103, 107, 80, 112, 32, 59,
	9, 10, 40, 41, 73, 105, 88, 120,
	32, 59, 9, 10, 40, 41, 80, 112,
	75, 107, 73, 105, 32, 59, 9, 10,
	40, 41, 82, 114, 73, 105, 32, 59,
	9, 10, 40, 41, 46, 48, 57, 32,
	46, 59, 9, 10, 40, 41, 48, 57,
	42, 92, 95, 45, 57, 64, 90, 97,
	122, 32, 59, 9, 10, 40, 41, 42,
	92, 95, 45, 57, 64, 90, 97, 122,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 42, 92, 95, 1034, 1083, 45,
	57, 64, 90, 97, 122, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 32, 59, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 9, 10, 40,
	41, 48, 57, 32, 59, 9, 10, 40,
	41, 48, 57, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 48, 57, 32,
	59, 9, 10, 40, 41, 48, 57, 1034,
	896, 1151, 9, 32, 40, 41, 1034, 1083,
	48, 57, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 1034, 896,
	1151, 9, 32, 40, 41, 1034, 1083, 48,
	57, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 1034, 896, 1151,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 32, 59, 9,
	10, 40, 41, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 1034, 1083, -128,
	8, 11, 58, 60, 127, 32, 59, 9,
	10, 40, 41, 1034, 896, 1151, 42, 92,
	95, 45, 57, 64, 90, 97, 122, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 42, 92, 95, 1034, 1083, 45, 57,
	64, 90, 97, 122, 32, 59, 9, 10,
	40, 41, 1034, 896, 1151, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 42, 92, 95, 1034, 1083,
	45, 57, 64, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 1034, 896, 1151, 32,
	59, 9, 10, 40, 41, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 58, 60, 127, 1034,
	896, 1151, 46, 48, 58, 65, 70, 97,
	102, 32, 46, 59, 9, 10, 40, 41,
	48, 58, 65, 70, 97, 102, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 78, 83, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 78, 83,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	46, 1034, 1083, 48, 57, 9, 32, 40,
	41, 78, 83, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 69,
	87, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 69, 87, 1034, 1083, 48, 57, 9,
	32, 40, 41, 46, 1034, 1083, 48, 57,
	9, 32, 40, 41, 69, 87, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 45, 1034, 1083, 48, 57, 48,
	57, 9, 32, 40, 41, 46, 109, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 9, 32, 40, 41, 46,
	109, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 48, 57, 9, 32, 40,
	41, 46, 109, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 9,
	32, 40, 41, 46, 109, 2058, 2107, 2314,
	2363, 2570, 2619, 48, 57, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 1034,
	896, 1151, 9, 32, 40, 41, 109, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 9,
	32, 40, 41, 109, 2058, 2107, 2314, 2363,
	2570, 2619, 48, 57, 1034, 896, 1151, 9,
	32, 40, 41, 109, 2058, 2107, 2314, 2363,
	2570, 2619, 48, 57, 9, 32, 40, 41,
	109, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 1034, 896, 1151, 9, 32,
	40, 41, 109, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 9, 32, 40, 41, 109,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 1034, 896, 1151, 9, 32, 40,
	41, 109, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 9, 32, 40, 41, 109, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 1034, 896, 1151, 9, 32, 40, 41,
	1034, 1083, 1034, 896, 1151, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 9, 32,
	40, 41, 1034, 1083, 1034, 896, 1151, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 1034,
	896, 1151, 1034, 896, 1151, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 42, 92, 95, 1034, 1083,
	45, 57, 64, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, -128, 8, 11,
	58, 60, 127, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 1034, 1083, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 1034,
	1083, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 42, 92, 95, 1034, 1083, 45, 57,
	64, 90, 97, 122, 32, 59, 9, 10,
	40, 41, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 1034, 896,
	1151, 48, 57, 65, 90, 97, 122, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 43, 1034, 1083, 47, 57,
	65, 90, 97, 122, 1546, 1595, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 9,
	32, 33, 40, 41, 49, 50, 2058, 2107,
	2314, 2363, 2570, 2619, 49, 50, 58, 46,
	48, 57, 47, 46, 57, 48, 57, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 1034, 896, 1151, 58, 46,
	48, 58, 65, 70, 97, 102, 47, 46,
	58, 65, 70, 97, 102, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 65,
	70, 97, 102, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 65,
	70, 97, 102, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 48, 49, 50, 51, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 46, 1034, 1083, 6153, 6176, 6184,
	6185, 6409, 6432, 6440, 6441, 6665, 6688, 6696,
	6697, 9482, 9531, 9738, 9787, 10250, 10299, 10506,
	10555, 10762, 10811, 11274, 11323, 11530, 11579, 11786,
	11835, 12298, 12347, 12554, 12603, 12810, 12859, 3081,
	3104, 3112, 3113, 3115, 4106, 4155, 3119, 3129,
	3137, 3162, 3169, 3194, 1546, 1595, 4106, 3968,
	4223, 4617, 4640, 4648, 4649, 13578, 13627, 13834,
	13883, 14346, 14395, 14602, 14651, 14858, 14907, 5642,
	5504, 5759, 3115, 6153, 6176, 6184, 6185, 6409,
	6432, 6440, 6441, 6665, 6688, 6696, 6697, 9482,
	9531, 9738, 9787, 10250, 10299, 10506, 10555, 10762,
	10811, 11274, 11323, 11530, 11579, 11786, 11835, 12298,
	12347, 12554, 12603, 12810, 12859, 3119, 3129, 3137,
	3162, 3169, 3194, 7690, 8202, 8714, 7552, 7807,
	8064, 8319, 8576, 8831, 1034, 896, 1151, 1034,
	896, 1151, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 46, 1034, 1083, 48,
	57, 46, 6153, 6176, 6184, 6185, 6409, 6432,
	6440, 6441, 6665, 6688, 6696, 6697, 9482, 9531,
	9738, 9787, 10250, 10299, 10506, 10555, 10762, 10811,
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347,
	12554, 12603, 12810, 12859, 48, 57, 1034, 896,
	1151, 1034, 896, 1151, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 46, 1034,
	1083, 48, 58, 65, 70, 97, 102, 46,
	6153, 6176, 6184, 6185, 6409, 6432, 6440, 6441,
	6665, 6688, 6696, 6697, 9482, 9531, 9738, 9787,
	10250, 10299, 10506, 10555, 10762, 10811, 11274, 11323,
	11530, 11579, 11786, 11835, 12298, 12347, 12554, 12603,
	12810, 12859, 48, 58, 65, 70, 97, 102,
	1034, 896, 1151, 1034, 896, 1151, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	42, 92, 95, 1034, 1083, 45, 57, 64,
	90, 97, 122, 6153, 6176, 6184, 6185, 6409,
	6432, 6440, 6441, 6665, 6688, 6696, 6697, 9482,
	9531, 9738, 9787, 10250, 10299, 10506, 10555, 10762,
	10811, 11274, 11323, 11530, 11579, 11786, 11835, 12298,
	12347, 12554, 12603, 12810, 12859, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 65, 67,
	68, 69, 72, 73, 75, 76, 77, 78,
	80, 82, 83, 84, 85, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 9, 32, 40, 41,
	65, 70, 80, 97, 102, 112, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 42, 92,
	95, 1034, 1083, 45, 57, 64, 90, 97,
	122, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 43, 1034, 1083, 47, 57,
	65, 90, 97, 122, 1546, 1595, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 65, 97,
	65, 97, 9, 32, 40, 41, 1034, 1083,
	83, 115, 68, 100, 66, 98, 9, 32,
	40, 41, 1034, 1083, 76, 108, 9, 32,
	40, 41, 1034, 1083, 65, 68, 69, 78,
	97, 100, 101, 110, 65, 97, 9, 32,
	40, 41, 1034, 1083, 78, 83, 110, 115,
	83, 115, 75, 107, 69, 101, 89, 121,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 82, 114, 84, 116,
	9, 32, 40, 41, 1034, 1083, 65, 97,
	77, 109, 69, 101, 9, 32, 40, 41,
	1034, 1083, 72, 78, 83, 104, 110, 115,
	67, 99, 73, 105, 68, 100, 9, 32,
	40, 41, 1034, 1083, 65, 83, 97, 115,
	77, 109, 69, 101, 9, 32, 40, 41,
	1034, 1083, 75, 107, 69, 101, 89, 121,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 85, 117, 73, 105,
	52, 54, 56, 9, 32, 40, 41, 1034,
	1083, 52, 9, 32, 40, 41, 1034, 1083,
	73, 105, 78, 110, 70, 102, 79, 111,
	9, 32, 40, 41, 1034, 1083, 80, 112,
	83, 115, 69, 101, 67, 99, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	1034, 1083, 69, 88, 101, 120, 89, 121,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 51, 54, 79, 80,
	111, 112, 50, 9, 32, 40, 41, 1034,
	1083, 52, 9, 32, 40, 41, 1034, 1083,
	67, 99, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 73, 88,
	105, 120, 78, 110, 70, 102, 79, 111,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 65, 73, 83, 97,
	105, 115, 80, 112, 84, 116, 82, 114,
	9, 32, 40, 41, 1034, 1083, 68, 100,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 69, 101, 1034, 1083, 67, 99,
	9, 32, 40, 41, 51, 1034, 1083, 9,
	32, 40, 41, 80, 112, 1034, 1083, 65,
	97, 82, 114, 65, 97, 77, 109, 9,
	32, 40, 41, 1034, 1083, 84, 116, 82,
	114, 9, 32, 40, 41, 1034, 1083, 80,
	82, 84, 112, 114, 116, 9, 32, 40,
	41, 1034, 1083, 83, 115, 73, 105, 71,
	103, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 79, 80, 82,
	83, 111, 112, 114, 115, 65, 97, 9,
	32, 40, 41, 1034, 1083, 70, 102, 9,
	32, 40, 41, 1034, 1083, 86, 118, 9,
	32, 40, 41, 1034, 1083, 72, 104, 70,
	102, 80, 112, 9, 32, 40, 41, 1034,
	1083, 76, 88, 89, 108, 120, 121, 83,
	115, 65, 97, 9, 32, 40, 41, 1034,
	1083, 84, 116, 9, 32, 40, 41, 1034,
	1083, 80, 112, 69, 101, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 82,
	114, 73, 105, 9, 32, 40, 41, 1034,
	1083, 42, 92, 95, 45, 57, 64, 90,
	97, 122, 32, 59, 9, 10, 40, 41,
	32, 59, 9, 10, 40, 41, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 43, 1034,
	1083, 47, 57, 65, 90, 97, 122, 1546,
	1595, 1034, 896, 1151, 1034, 896, 1151, 1034,
	896, 1151, 43, 47, 57, 65, 90, 97,
	122, 1546, 1595, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 45, 1034, 1083, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 86, 97, 118, 48, 57, 65, 86,
	97, 118, 61, 48, 57, 65, 86, 97,
	118, 48, 57, 65, 86, 97, 118, 61,
	48, 57, 65, 86, 97, 118, 61, 48,
	57, 65, 86, 97, 118, 48, 57, 65,
	86, 97, 118, 61, 48, 57, 65, 86,
	97, 118, 32, 59, 9, 10, 40, 41,
	48, 57, 65, 86, 97, 118, 32, 59,
	9, 10, 40, 41, 61, 61, 61, 61,
	61, 1034, 896, 1151, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 1034, 1083,
	48, 57, 65, 70, 97, 102, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 45, 1034, 1083,
	48, 57, 65, 70, 97, 102, 32, 59,
	9, 10, 40, 41, 48, 57, 65, 70,
	97, 102, 32, 59, 9, 10, 40, 41,
	48, 57, 65, 70, 97, 102, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 65,
	70, 97, 102, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 46, 1034, 1083,
	48, 57, 32, 46, 59, 9, 10, 40,
	41, 48, 57, 1034, 896, 1151, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 48, 57, 65, 70, 97, 102,
	48, 57, 65, 70, 97, 102, 58, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 48, 57, 65, 70, 97, 102, 32,
	58, 59, 9, 10, 40, 41, 1034, 896,
	1151, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 45, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 32, 45, 59, 9, 10, 40,
	41, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 45, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 32, 45, 59, 9, 10, 40,
	41, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, -128, 8, 11, 58, 60, 127, 32,
	59, 9, 10, 40, 41, 1034, 896, 1151,
	1034, 896, 1151, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, -128, 8, 11, 58, 60,
	127, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, -128, 8, 11,
	58, 60, 127, 32, 59, 9, 10, 40,
	41, 1034, 896, 1151, 1034, 896, 1151, 9,
	32, 36, 40, 41, 42, 92, 95, 778,
	827, 1034, 1083, 45, 57, 64, 90, 97,
	122, 9, 32, 36, 40, 41, 42, 58,
	92, 95, 1802, 1851, 2058, 2107, 2314, 2363,
	2570, 2619, -128, 8, 11, 44, 45, 57,
	60, 63, 64, 90, 91, 96, 97, 122,
	123, 127, 9, 32, 36, 40, 41, 42,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 92,
	95, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	778, 827, 1034, 1083, 45, 57, 64, 90,
	98, 122, 9, 32, 36, 40, 41, 42,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 92,
	95, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	778, 827, 1034, 1083, 45, 47, 48, 57,
	64, 90, 98, 122, 9, 32, 36, 40,
	41, 42, 92, 95, 778, 827, 1034, 1083,
	45, 57, 64, 90, 97, 122, 9, 32,
	36, 40, 41, 42, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 92, 95, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 778, 827, 1034, 1083,
	45, 47, 48, 57, 64, 90, 98, 122,
	9, 32, 36, 40, 41, 42, 92, 95,
	778, 827, 1034, 1083, 45, 57, 64, 90,
	97, 122, 9, 32, 36, 40, 41, 42,
	58, 92, 95, 1802, 1851, 2058, 2107, 2314,
	2363, 2570, 2619, -128, 8, 11, 44, 45,
	57, 60, 63, 64, 90, 91, 96, 97,
	122, 123, 127, 9, 32, 36, 40, 41,
	42, 58, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 92, 95, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 1802, 1851, 2058, 2107, 2314, 2363,
	2570, 2619, -128, 8, 11, 44, 45, 47,
	48, 57, 60, 63, 64, 90, 91, 96,
	98, 122, 123, 127, 9, 32, 36, 40,
	41, 42, 58, 65, 67, 68, 69, 72,
	73, 75, 76, 77, 78, 80, 82, 83,
	84, 85, 92, 95, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 1802, 1851, 2058, 2107, 2314,
	2363, 2570, 2619, -128, 8, 11, 44, 45,
	47, 48, 57, 60, 63, 64, 90, 91,
	96, 98, 122, 123, 127, 32, 33, 59,
	92, 9, 10, 35, 39, 40, 41, 42,
	126, 9, 32, 40, 41, 42, 46, 92,
	95, 1034, 1083, 45, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 43, 2058, 2107,
	2314, 2363, 2570, 2619, 47, 57, 65, 90,
	97, 122, 1034, 896, 1151, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 2058,
	2107, 2314, 2363, 2570, 2619, 1034, 896, 1151,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 48, 57, 65, 70, 97, 102,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 48, 57, 65, 70, 97, 102, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 65, 70, 97, 102, 1034,
	896, 1151, 1034, 896, 1151, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, -128,
	8, 11, 58, 60, 127, 1034, 896, 1151,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 1034, 896, 1151, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 1034, 896, 1151, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	1034, 896, 1151, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 1034,
	896, 1151, 9, 32, 33, 40, 41, 49,
	50, 2058, 2107, 2314, 2363, 2570, 2619, 1034,
	896, 1151, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 65, 70, 97, 102, 1034, 896, 1151,
	4617, 4640, 4648, 4649, 13578, 13627, 13834, 13883,
	14346, 14395, 14602, 14651, 14858, 14907, 5642, 5504,
	5759, 3081, 3104, 3112, 3113, 3115, 4106, 4155,
	3119, 3129, 3137, 3162, 3169, 3194, 4106, 3968,
	4223, 3115, 6153, 6176, 6184, 6185, 6409, 6432,
	6440, 6441, 6665, 6688, 6696, 6697, 9482, 9531,
	9738, 9787, 10250, 10299, 10506, 10555, 10762, 10811,
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347,
	12554, 12603, 12810, 12859, 3119, 3129, 3137, 3162,
	3169, 3194, 7690, 8202, 8714, 7552, 7807, 8064,
	8319, 8576, 8831, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 65,
	70, 97, 102, 1034, 896, 1151, 0
};

static const char _zone_scanner_single_lengths[] = {
	0, 38, 16, 36, 16, 11, 8, 8,
	1, 1, 1, 13, 2, 44, 18, 38,
	8, 2, 10, 12, 4, 2, 2, 2,
	2, 10, 10, 2, 2, 10, 2, 2,
	2, 10, 6, 2, 2, 2, 10, 4,
	2, 2, 10, 2, 2, 2, 10, 10,
	2, 2, 2, 1, 10, 1, 10, 2,
	2, 2, 2, 10, 4, 6, 36, 2,
	2, 2, 2, 2, 2, 2, 10, 4,
	2, 10, 10, 6, 1, 10, 1, 10,
	2, 10, 10, 4, 2, 2, 2, 10,
	10, 6, 2, 2, 2, 10, 2, 10,
	12, 2, 11, 12, 2, 2, 2, 2,
	10, 2, 2, 10, 6, 10, 2, 2,
	2, 10, 10, 8, 2, 10, 2, 10,
	2, 10, 2, 2, 2, 10, 6, 2,
	2, 10, 2, 10, 2, 2, 0, 10,
	2, 2, 10, 1, 38, 4, 6, 36,
	16, 6, 10, 6, 1, 1, 6, 2,
	2, 2, 2, 2, 2, 2, 6, 36,
	1, 16, 36, 1, 6, 10, 6, 1,
	16, 42, 18, 13, 38, 2, 8, 8,
	44, 16, 14, 10, 10, 12, 12, 14,
	12, 14, 10, 14, 16, 14, 10, 2,
	14, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 18, 38, 2, 18, 44,
	16, 14, 10, 10, 12, 12, 14, 12,
	14, 10, 14, 16, 14, 10, 9, 38,
	12, 12, 10, 2, 2, 10, 2, 2,
	2, 10, 2, 10, 2, 8, 8, 12,
	10, 1, 12, 14, 12, 8, 8, 10,
	10, 12, 10, 12, 8, 12, 14, 12,
	8, 2, 2, 10, 2, 1, 1, 5,
	6, 6, 0, 0, 0, 6, 2, 2,
	2, 4, 0, 0, 0, 4, 4, 2,
	0, 0, 0, 4, 6, 6, 18, 8,
	1, 8, 10, 8, 1, 6, 10, 4,
	12, 8, 1, 0, 0, 0, 4, 8,
	1, 6, 6, 8, 12, 4, 12, 8,
	1, 0, 0, 0, 4, 8, 2, 10,
	1, 1, 1, 1, 2, 2, 11, 1,
	1, 10, 40, 16, 2, 2, 10, 1,
	8, 2, 10, 4, 2, 2, 2, 2,
	10, 10, 2, 2, 10, 2, 2, 2,
	10, 6, 2, 2, 2, 10, 4, 2,
	2, 10, 2, 2, 2, 10, 10, 2,
	2, 2, 1, 10, 1, 10, 2, 2,
	2, 2, 10, 2, 2, 2, 2, 2,
	2, 2, 10, 4, 2, 10, 10, 6,
	1, 10, 1, 10, 2, 10, 10, 4,
	2, 2, 2, 10, 10, 6, 2, 2,
	2, 10, 2, 10, 12, 2, 11, 12,
	2, 2, 2, 2, 10, 2, 2, 10,
	6, 10, 2, 2, 2, 10, 10, 8,
	2, 10, 2, 10, 2, 10, 2, 2,
	2, 10, 6, 2, 2, 10, 2, 10,
	2, 2, 0, 10, 2, 2, 10, 2,
	2, 2, 10, 2, 10, 6, 6, 6,
	6, 0, 10, 1, 1, 1, 6, 7,
	8, 6, 0, 10, 1, 1, 6, 1,
	10, 2, 4, 2, 2, 3, 2, 2,
	2, 2, 1, 1, 2, 2, 2, 1,
	2, 4, 4, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 2,
	2, 2, 1, 1, 1, 2, 1, 1,
	2, 2, 2, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 2, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 4,
	2, 1, 2, 2, 2, 3, 3, 2,
	2, 2, 2, 1, 1, 2, 2, 2,
	1, 2, 1, 1, 2, 1, 1, 2,
	12, 2, 2, 2, 2, 2, 2, 2,
	6, 2, 2, 2, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 3, 3, 2, 3, 6, 9,
	6, 6, 6, 6, 16, 6, 16, 6,
	16, 6, 12, 2, 10, 2, 1, 6,
	10, 6, 1, 6, 10, 6, 1, 6,
	10, 6, 1, 1, 1, 2, 6, 6,
	2, 1, 3, 6, 9, 2, 1, 0,
	6, 9, 2, 1, 2, 10, 10, 1,
	1, 3, 0, 6, 8, 6, 8, 7,
	8, 6, 6, 6, 8, 6, 8, 7,
	8, 6, 7, 0, 12, 10, 12, 10,
	12, 10, 12, 10, 1, 11, 11, 1,
	11, 11, 10, 1, 11, 11, 10, 1,
	11, 11, 10, 1, 6, 1, 6, 6,
	1, 1, 1, 6, 1, 6, 6, 1,
	1, 0, 6, 6, 6, 6, 6, 9,
	2, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 9, 2,
	1, 1, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 7, 2, 1, 1, 1,
	13, 2, 1, 1, 1, 0, 10, 1,
	1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 0, 10, 1, 1, 1, 1,
	0, 6, 6, 6, 6, 0, 10, 1,
	1, 1, 0, 6, 10, 6, 6, 6,
	7, 34, 7, 2, 1, 14, 1, 35,
	3, 1, 1, 6, 6, 6, 7, 35,
	1, 1, 6, 6, 6, 7, 35, 1,
	1, 6, 6, 6, 9, 34, 1, 1,
	1, 30, 12, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 9,
	6, 7, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 6, 2, 2,
	2, 6, 2, 6, 8, 2, 6, 4,
	2, 2, 2, 2, 6, 6, 2, 2,
	6, 2, 2, 2, 6, 6, 2, 2,
	2, 6, 4, 2, 2, 6, 2, 2,
	2, 6, 6, 2, 2, 2, 1, 6,
	1, 6, 2, 2, 2, 2, 6, 2,
	2, 2, 2, 2, 2, 2, 6, 4,
	2, 6, 6, 6, 1, 6, 1, 6,
	2, 6, 6, 4, 2, 2, 2, 6,
	6, 6, 2, 2, 2, 6, 2, 6,
	8, 2, 7, 8, 2, 2, 2, 2,
	6, 2, 2, 6, 6, 6, 2, 2,
	2, 6, 6, 8, 2, 6, 2, 6,
	2, 6, 2, 2, 2, 6, 6, 2,
	2, 6, 2, 6, 2, 2, 0, 6,
	2, 2, 6, 3, 2, 2, 0, 6,
	6, 6, 6, 6, 7, 2, 1, 1,
	1, 1, 2, 0, 6, 6, 6, 6,
	6, 7, 6, 6, 0, 1, 0, 1,
	1, 0, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 0, 6, 1, 1, 1,
	0, 6, 6, 6, 6, 6, 7, 2,
	0, 2, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 6, 0, 10, 1, 1,
	1, 1, 0, 6, 7, 3, 1, 0,
	6, 6, 0, 0, 0, 1, 0, 0,
	0, 0, 3, 1, 0, 0, 1, 0,
	0, 3, 0, 0, 1, 0, 0, 3,
	0, 6, 6, 6, 6, 2, 1, 1,
	0, 6, 6, 6, 6, 2, 1, 1,
	12, 17, 42, 42, 12, 42, 12, 17,
	47, 47, 0, 0, 0, 4, 0, 0,
	0, 10, 0, 11, 1, 0, 40, 1,
	0, 10, 1, 6, 0, 10, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 10, 1, 0, 0, 10, 1, 10,
	1, 10, 1, 10, 1, 0, 0, 0,
	0, 13, 1, 0, 10, 1, 0, 10,
	1, 0, 14, 1, 7, 1, 35, 3,
	0, 0, 0, 0, 0, 0, 0, 10,
	1, 0, 0, 0, 0, 0, 0
};

static const char _zone_scanner_range_lengths[] = {
	0, 1, 1, 0, 0, 3, 0, 0,
	0, 0, 1, 3, 2, 4, 1, 0,
	0, 0, 0, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 1,
	0, 0, 0, 1, 1, 0, 0, 1,
	1, 1, 1, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 4, 0, 3, 1, 2, 3, 3,
	4, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 2, 0, 1, 1, 2, 0, 4,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3, 1,
	1, 1, 2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 3, 3, 2,
	2, 1, 1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 2, 0, 2, 0, 0, 3,
	5, 5, 1, 1, 1, 5, 2, 2,
	2, 4, 1, 1, 1, 4, 1, 2,
	1, 1, 1, 1, 0, 1, 1, 0,
	0, 1, 1, 1, 1, 0, 3, 3,
	3, 0, 0, 1, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 3, 0,
	0, 1, 1, 1, 3, 0, 2, 3,
	1, 1, 3, 3, 3, 3, 3, 1,
	0, 0, 0, 0, 0, 0, 0, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 1,
	3, 3, 3, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 2, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 2, 0, 0, 0,
	0, 0, 2, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 2, 0, 0, 2,
	1, 3, 0, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 2, 0, 0, 2, 0, 0, 0,
	2, 0, 0, 2, 0, 0, 2, 0,
	0, 2, 0, 0, 0, 2, 0, 0,
	2, 1, 3, 3, 2, 3, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 0, 3,
	2, 1, 3, 0, 3, 2, 1, 1,
	1, 3, 2, 1, 2, 0, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 0, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 0, 3, 2,
	1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 3, 0, 1, 1, 1,
	0, 0, 0, 1, 1, 1, 1, 1,
	0, 3, 3, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
	0, 0, 3, 0, 1, 0, 1, 3,
	3, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 1,
	1, 0, 1, 1, 3, 0, 1, 1,
	1, 0, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 1,
	0, 0, 0, 3, 2, 2, 1, 1,
	1, 1, 3, 0, 3, 0, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 2, 0, 0, 0,
	0, 0, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2,
	3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1,
	1, 3, 3, 3, 3, 0, 3, 3,
	3, 3, 2, 1, 3, 3, 0, 3,
	3, 2, 3, 3, 0, 3, 3, 2,
	1, 1, 1, 1, 3, 2, 1, 1,
	1, 1, 3, 0, 3, 2, 1, 1,
	3, 8, 3, 4, 3, 4, 3, 8,
	9, 9, 0, 0, 0, 4, 0, 0,
	0, 3, 0, 3, 1, 0, 0, 1,
	0, 3, 1, 3, 0, 3, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 1, 0, 0, 0, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 0,
	0, 0, 1, 0, 3, 1, 0, 3,
	1, 0, 0, 1, 3, 1, 3, 3,
	0, 0, 0, 0, 0, 0, 0, 3,
	1, 0, 0, 0, 0, 0, 0
};

static const short _zone_scanner_index_offsets[] = {
	0, 0, 40, 58, 95, 112, 127, 136,
	145, 147, 149, 152, 169, 174, 223, 243,
	282, 291, 294, 305, 319, 324, 327, 330,
	333, 336, 347, 358, 361, 364, 375, 378,
	381, 384, 395, 402, 405, 408, 411, 422,
	427, 430, 433, 444, 447, 450, 453, 464,
	475, 478, 481, 484, 486, 497, 499, 510,
	513, 516, 519, 522, 533, 538, 545, 582,
	585, 588, 591, 594, 597, 600, 603, 614,
	619, 622, 633, 644, 651, 653, 664, 666,
	677, 680, 691, 702, 707, 710, 713, 716,
	727, 738, 745, 748, 751, 754, 765, 768,
	779, 792, 795, 807, 820, 823, 826, 829,
	832, 843, 846, 849, 860, 867, 878, 881,
	884, 887, 898, 909, 918, 921, 932, 935,
	946, 949, 960, 963, 966, 969, 980, 987,
	990, 993, 1004, 1007, 1018, 1021, 1024, 1026,
	1038, 1041, 1044, 1055, 1058, 1098, 1103, 1110,
	1148, 1166, 1174, 1186, 1194, 1197, 1199, 1206,
	1209, 1212, 1215, 1218, 1221, 1224, 1229, 1236,
	1274, 1277, 1295, 1333, 1336, 1344, 1356, 1364,
	1367, 1384, 1431, 1450, 1467, 1507, 1512, 1524,
	1536, 1585, 1602, 1617, 1628, 1639, 1652, 1665,
	1680, 1693, 1708, 1719, 1734, 1751, 1766, 1777,
	1782, 1797, 1800, 1803, 1806, 1809, 1812, 1817,
	1820, 1823, 1828, 1837, 1857, 1897, 1902, 1921,
	1970, 1987, 2002, 2013, 2024, 2037, 2050, 2065,
	2078, 2093, 2104, 2119, 2136, 2151, 2162, 2175,
	2215, 2229, 2243, 2256, 2259, 2262, 2273, 2276,
	2279, 2282, 2293, 2296, 2307, 2312, 2324, 2336,
	2351, 2364, 2367, 2381, 2396, 2409, 2418, 2427,
	2438, 2449, 2462, 2473, 2486, 2495, 2508, 2523,
	2536, 2545, 2550, 2555, 2566, 2571, 2573, 2575,
	2584, 2596, 2608, 2610, 2612, 2614, 2626, 2631,
	2636, 2641, 2650, 2652, 2654, 2656, 2665, 2671,
	2676, 2678, 2680, 2682, 2688, 2695, 2703, 2723,
	2732, 2734, 2744, 2756, 2766, 2769, 2776, 2790,
	2798, 2814, 2823, 2825, 2827, 2829, 2831, 2839,
	2848, 2851, 2858, 2868, 2877, 2893, 2901, 2917,
	2926, 2928, 2930, 2932, 2934, 2942, 2951, 2956,
	2970, 2973, 2976, 2981, 2986, 2992, 2998, 3013,
	3016, 3018, 3029, 3070, 3087, 3090, 3093, 3104,
	3107, 3116, 3119, 3130, 3135, 3138, 3141, 3144,
	3147, 3158, 3169, 3172, 3175, 3186, 3189, 3192,
	3195, 3206, 3213, 3216, 3219, 3222, 3233, 3238,
	3241, 3244, 3255, 3258, 3261, 3264, 3275, 3286,
	3289, 3292, 3295, 3297, 3308, 3310, 3321, 3324,
	3327, 3330, 3333, 3344, 3347, 3350, 3353, 3356,
	3359, 3362, 3365, 3376, 3381, 3384, 3395, 3406,
	3413, 3415, 3426, 3428, 3439, 3442, 3453, 3464,
	3469, 3472, 3475, 3478, 3489, 3500, 3507, 3510,
	3513, 3516, 3527, 3530, 3541, 3554, 3557, 3569,
	3582, 3585, 3588, 3591, 3594, 3605, 3608, 3611,
	3622, 3629, 3640, 3643, 3646, 3649, 3660, 3671,
	3680, 3683, 3694, 3697, 3708, 3711, 3722, 3725,
	3728, 3731, 3742, 3749, 3752, 3755, 3766, 3769,
	3780, 3783, 3786, 3788, 3800, 3803, 3806, 3817,
	3820, 3823, 3826, 3837, 3840, 3851, 3858, 3866,
	3874, 3884, 3888, 3902, 3905, 3908, 3911, 3918,
	3927, 3937, 3947, 3951, 3965, 3968, 3971, 3979,
	3982, 3994, 4000, 4005, 4010, 4013, 4019, 4022,
	4025, 4028, 4031, 4033, 4035, 4038, 4041, 4044,
	4046, 4051, 4056, 4061, 4063, 4066, 4069, 4072,
	4075, 4080, 4083, 4086, 4089, 4092, 4094, 4096,
	4099, 4102, 4105, 4107, 4109, 4111, 4116, 4118,
	4120, 4123, 4126, 4129, 4131, 4133, 4135, 4140,
	4143, 4145, 4147, 4149, 4151, 4156, 4158, 4160,
	4165, 4168, 4171, 4174, 4177, 4180, 4183, 4186,
	4191, 4194, 4197, 4200, 4203, 4206, 4209, 4214,
	4217, 4220, 4225, 4228, 4231, 4236, 4239, 4242,
	4247, 4250, 4252, 4257, 4260, 4263, 4267, 4273,
	4276, 4279, 4282, 4285, 4287, 4289, 4292, 4295,
	4298, 4300, 4305, 4307, 4309, 4314, 4316, 4318,
	4323, 4337, 4343, 4346, 4349, 4352, 4355, 4358,
	4363, 4370, 4373, 4376, 4379, 4382, 4385, 4390,
	4395, 4398, 4403, 4406, 4409, 4414, 4417, 4420,
	4423, 4428, 4431, 4434, 4439, 4444, 4447, 4452,
	4455, 4458, 4463, 4466, 4469, 4472, 4477, 4480,
	4483, 4488, 4491, 4498, 4505, 4510, 4517, 4524,
	4537, 4544, 4552, 4560, 4568, 4586, 4594, 4612,
	4620, 4638, 4646, 4662, 4668, 4680, 4686, 4689,
	4697, 4709, 4717, 4720, 4728, 4740, 4748, 4751,
	4759, 4771, 4779, 4782, 4785, 4788, 4793, 4800,
	4810, 4815, 4818, 4825, 4832, 4845, 4850, 4853,
	4855, 4863, 4876, 4881, 4884, 4889, 4900, 4914,
	4917, 4922, 4931, 4933, 4941, 4951, 4959, 4969,
	4978, 4987, 4994, 5002, 5010, 5020, 5028, 5038,
	5047, 5056, 5063, 5072, 5074, 5088, 5100, 5114,
	5126, 5140, 5152, 5166, 5177, 5180, 5193, 5206,
	5209, 5222, 5235, 5246, 5249, 5262, 5275, 5286,
	5289, 5302, 5315, 5326, 5329, 5336, 5339, 5347,
	5355, 5358, 5361, 5364, 5371, 5374, 5382, 5390,
	5393, 5396, 5398, 5406, 5414, 5422, 5430, 5438,
	5451, 5456, 5459, 5462, 5465, 5467, 5475, 5483,
	5491, 5501, 5508, 5518, 5525, 5535, 5542, 5555,
	5560, 5563, 5566, 5569, 5572, 5575, 5579, 5586,
	5594, 5602, 5612, 5619, 5630, 5633, 5636, 5639,
	5642, 5656, 5659, 5661, 5664, 5667, 5669, 5681,
	5684, 5686, 5691, 5696, 5698, 5706, 5716, 5723,
	5731, 5739, 5749, 5753, 5767, 5770, 5773, 5776,
	5779, 5781, 5789, 5797, 5805, 5815, 5819, 5833,
	5836, 5839, 5842, 5844, 5852, 5863, 5870, 5878,
	5886, 5894, 5929, 5940, 5943, 5946, 5961, 5964,
	6003, 6010, 6013, 6016, 6023, 6031, 6039, 6048,
	6085, 6088, 6091, 6098, 6106, 6114, 6125, 6164,
	6167, 6170, 6177, 6185, 6193, 6206, 6241, 6244,
	6247, 6250, 6281, 6294, 6304, 6311, 6319, 6327,
	6335, 6343, 6351, 6359, 6367, 6375, 6383, 6391,
	6404, 6411, 6422, 6425, 6428, 6431, 6434, 6437,
	6440, 6443, 6446, 6449, 6452, 6455, 6462, 6465,
	6468, 6471, 6478, 6481, 6488, 6497, 6500, 6507,
	6512, 6515, 6518, 6521, 6524, 6531, 6538, 6541,
	6544, 6551, 6554, 6557, 6560, 6567, 6574, 6577,
	6580, 6583, 6590, 6595, 6598, 6601, 6608, 6611,
	6614, 6617, 6624, 6631, 6634, 6637, 6640, 6642,
	6649, 6651, 6658, 6661, 6664, 6667, 6670, 6677,
	6680, 6683, 6686, 6689, 6692, 6695, 6698, 6705,
	6710, 6713, 6720, 6727, 6734, 6736, 6743, 6745,
	6752, 6755, 6762, 6769, 6774, 6777, 6780, 6783,
	6790, 6797, 6804, 6807, 6810, 6813, 6820, 6823,
	6830, 6839, 6842, 6850, 6859, 6862, 6865, 6868,
	6871, 6878, 6881, 6884, 6891, 6898, 6905, 6908,
	6911, 6914, 6921, 6928, 6937, 6940, 6947, 6950,
	6957, 6960, 6967, 6970, 6973, 6976, 6983, 6990,
	6993, 6996, 7003, 7006, 7013, 7016, 7019, 7021,
	7029, 7032, 7035, 7042, 7049, 7054, 7059, 7061,
	7069, 7077, 7085, 7095, 7102, 7113, 7116, 7119,
	7122, 7125, 7130, 7133, 7135, 7143, 7151, 7159,
	7167, 7175, 7186, 7193, 7203, 7207, 7212, 7216,
	7221, 7226, 7230, 7235, 7243, 7248, 7250, 7252,
	7254, 7256, 7258, 7261, 7265, 7275, 7278, 7281,
	7284, 7286, 7294, 7302, 7310, 7318, 7326, 7337,
	7342, 7346, 7354, 7357, 7360, 7363, 7365, 7373,
	7381, 7389, 7397, 7405, 7415, 7419, 7433, 7436,
	7439, 7442, 7445, 7447, 7455, 7464, 7471, 7474,
	7476, 7484, 7494, 7498, 7502, 7506, 7508, 7512,
	7516, 7520, 7524, 7530, 7533, 7537, 7541, 7543,
	7547, 7551, 7557, 7561, 7565, 7567, 7571, 7575,
	7581, 7583, 7591, 7599, 7607, 7617, 7622, 7625,
	7628, 7630, 7638, 7648, 7655, 7665, 7670, 7673,
	7676, 7692, 7718, 7764, 7811, 7827, 7874, 7890,
	7916, 7973, 8030, 8031, 8032, 8033, 8042, 8043,
	8044, 8045, 8059, 8060, 8075, 8078, 8079, 8120,
	8123, 8124, 8138, 8141, 8151, 8152, 8166, 8169,
	8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179,
	8180, 8181, 8195, 8198, 8199, 8200, 8211, 8214,
	8226, 8229, 8241, 8244, 8256, 8259, 8260, 8261,
	8262, 8263, 8277, 8280, 8281, 8295, 8298, 8299,
	8313, 8316, 8317, 8332, 8335, 8346, 8349, 8388,
	8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402,
	8416, 8419, 8420, 8421, 8422, 8423, 8424
};

static const short _zone_scanner_indicies[] = {
	1, 1, 2, 3, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 4, 0,
	25, 25, 26, 27, 29, 30, 31, 32,
	33, 29, 30, 31, 32, 33, 34, 35,
	28, 24, 37, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 36, 58,
	58, 59, 60, 61, 62, 63, 61, 62,
	63, 64, 65, 66, 66, 67, 68, 57,
	70, 70, 72, 73, 74, 75, 76, 69,
	69, 77, 78, 69, 69, 69, 71, 80,
	80, 81, 82, 83, 84, 83, 84, 79,
	80, 80, 81, 82, 83, 84, 83, 84,
	85, 83, 84, 87, 86, 75, 76, 71,
	88, 88, 89, 90, 74, 83, 84, 83,
	91, 92, 93, 83, 94, 69, 69, 69,
	79, 83, 95, 84, 91, 79, 96, 96,
	98, 99, 69, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 74, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 20, 21, 116, 117, 118, 119,
	120, 121, 69, 69, 100, 69, 97, 123,
	123, 124, 125, 29, 30, 31, 32, 33,
	29, 30, 31, 32, 33, 83, 84, 126,
	127, 28, 122, 129, 129, 130, 131, 40,
	41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 52, 53, 54, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 83, 84, 132,
	133, 128, 134, 135, 136, 137, 134, 135,
	136, 137, 36, 138, 138, 36, 139, 139,
	140, 141, 142, 143, 144, 144, 145, 146,
	57, 80, 83, 80, 81, 82, 84, 147,
	83, 147, 148, 149, 91, 76, 79, 150,
	151, 150, 151, 36, 152, 152, 36, 153,
	153, 36, 154, 154, 36, 155, 155, 36,
	156, 156, 157, 158, 159, 160, 161, 161,
	162, 163, 57, 164, 164, 165, 166, 167,
	168, 169, 169, 170, 171, 57, 172, 172,
	36, 173, 173, 36, 174, 174, 175, 176,
	177, 178, 179, 179, 180, 181, 57, 182,
	182, 36, 183, 183, 36, 184, 184, 36,
	185, 185, 186, 187, 188, 189, 190, 190,
	191, 192, 57, 193, 194, 195, 193, 194,
	195, 36, 196, 196, 36, 197, 197, 36,
	198, 198, 36, 199, 199, 200, 201, 202,
	203, 204, 204, 205, 206, 57, 207, 208,
	207, 208, 36, 209, 209, 36, 210, 210,
	36, 211, 211, 212, 213, 214, 215, 216,
	216, 217, 218, 57, 219, 219, 36, 220,
	220, 36, 221, 221, 36, 222, 222, 223,
	224, 225, 226, 227, 227, 228, 229, 57,
	230, 230, 231, 232, 233, 234, 235, 235,
	236, 237, 57, 238, 238, 36, 239, 239,
	36, 240, 241, 36, 242, 36, 243, 243,
	244, 245, 246, 247, 248, 248, 249, 250,
	57, 251, 36, 252, 252, 253, 254, 255,
	256, 257, 257, 258, 259, 57, 260, 260,
	36, 261, 261, 36, 262, 262, 36, 263,
	263, 36, 264, 264, 265, 266, 267, 268,
	269, 269, 270, 271, 57, 272, 273, 272,
	273, 36, 274, 274, 275, 276, 277, 278,
	36, 279, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292,
	293, 294, 295, 296, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 36, 273, 273,
	36, 299, 299, 36, 300, 300, 36, 301,
	301, 36, 302, 302, 36, 303, 303, 36,
	304, 304, 36, 305, 305, 306, 307, 308,
	309, 310, 310, 311, 312, 57, 313, 314,
	313, 314, 36, 315, 315, 36, 316, 316,
	317, 318, 319, 320, 321, 321, 322, 323,
	57, 324, 324, 325, 326, 327, 328, 329,
	329, 330, 331, 57, 332, 333, 334, 335,
	334, 335, 36, 336, 36, 337, 337, 338,
	339, 340, 341, 342, 342, 343, 344, 57,
	345, 36, 346, 346, 347, 348, 349, 350,
	351, 351, 352, 353, 57, 354, 354, 36,
	355, 355, 356, 357, 358, 359, 360, 360,
	361, 362, 57, 363, 363, 364, 365, 366,
	367, 368, 368, 369, 370, 57, 371, 372,
	371, 372, 36, 373, 373, 36, 374, 374,
	36, 375, 375, 36, 376, 376, 377, 378,
	379, 380, 381, 381, 382, 383, 57, 384,
	384, 385, 386, 387, 388, 389, 389, 390,
	391, 57, 392, 393, 394, 392, 393, 394,
	36, 395, 395, 36, 396, 396, 36, 397,
	397, 36, 398, 398, 399, 400, 401, 402,
	403, 403, 404, 405, 57, 406, 406, 36,
	407, 407, 408, 409, 410, 411, 412, 412,
	413, 414, 57, 415, 415, 416, 417, 418,
	418, 419, 420, 421, 421, 422, 423, 57,
	424, 424, 36, 425, 425, 426, 427, 428,
	429, 430, 431, 431, 432, 433, 57, 434,
	434, 435, 436, 437, 437, 438, 439, 440,
	440, 441, 442, 57, 443, 443, 36, 444,
	444, 36, 445, 445, 36, 446, 446, 36,
	447, 447, 448, 449, 450, 451, 452, 452,
	453, 454, 57, 455, 455, 36, 456, 456,
	36, 457, 457, 458, 459, 460, 461, 462,
	462, 463, 464, 57, 465, 466, 467, 465,
	466, 467, 36, 468, 468, 469, 470, 471,
	472, 473, 473, 474, 475, 57, 476, 476,
	36, 477, 477, 36, 478, 478, 36, 479,
	479, 480, 481, 482, 483, 484, 484, 485,
	486, 57, 487, 487, 488, 489, 490, 491,
	492, 492, 493, 494, 57, 495, 496, 497,
	498, 495, 496, 497, 498, 36, 499, 499,
	36, 500, 500, 501, 502, 503, 504, 505,
	505, 506, 507, 57, 508, 508, 36, 509,
	509, 510, 511, 512, 513, 514, 514, 515,
	516, 57, 517, 517, 36, 518, 518, 519,
	520, 521, 522, 523, 523, 524, 525, 57,
	526, 526, 36, 527, 527, 36, 528, 528,
	36, 529, 529, 530, 531, 532, 533, 534,
	534, 535, 536, 57, 537, 538, 539, 537,
	538, 539, 36, 540, 540, 36, 541, 541,
	36, 542, 542, 543, 544, 545, 546, 547,
	547, 548, 549, 57, 550, 550, 36, 551,
	551, 552, 553, 554, 555, 556, 556, 557,
	558, 57, 559, 559, 36, 560, 560, 36,
	562, 561, 564, 564, 565, 566, 568, 569,
	570, 570, 571, 572, 567, 563, 573, 573,
	36, 574, 574, 36, 575, 575, 576, 577,
	578, 579, 580, 580, 581, 582, 57, 297,
	298, 36, 583, 583, 584, 585, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 586, 587,
	4, 0, 588, 273, 588, 273, 36, 589,
	589, 590, 591, 592, 593, 36, 594, 594,
	595, 596, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611,
	612, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 597, 561, 615, 615, 616, 617,
	619, 620, 621, 622, 623, 619, 620, 621,
	622, 623, 624, 625, 618, 24, 615, 615,
	616, 617, 624, 625, 626, 24, 628, 629,
	630, 631, 632, 628, 629, 630, 631, 632,
	627, 24, 633, 633, 634, 635, 637, 638,
	636, 24, 613, 614, 36, 20, 21, 640,
	641, 642, 640, 641, 642, 639, 643, 643,
	639, 644, 644, 639, 645, 645, 639, 646,
	646, 639, 647, 647, 639, 648, 648, 639,
	649, 649, 649, 649, 639, 651, 651, 652,
	653, 654, 655, 650, 656, 656, 657, 658,
	5, 6, 7, 8, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 5,
	6, 7, 8, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 19, 659, 660,
	4, 561, 659, 660, 661, 663, 663, 664,
	665, 29, 30, 31, 32, 33, 29, 30,
	31, 32, 33, 666, 667, 28, 662, 668,
	668, 669, 670, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18,
	19, 671, 672, 4, 561, 671, 672, 36,
	25, 25, 26, 27, 34, 35, 673, 24,
	675, 676, 677, 678, 679, 675, 676, 677,
	678, 679, 674, 24, 680, 680, 681, 682,
	684, 685, 683, 24, 55, 56, 36, 687,
	687, 688, 689, 61, 62, 63, 61, 62,
	63, 690, 691, 66, 66, 692, 693, 686,
	694, 694, 695, 696, 69, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 74, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 697, 698, 69, 69,
	699, 700, 69, 69, 100, 69, 563, 702,
	702, 703, 704, 61, 62, 63, 61, 62,
	63, 83, 84, 705, 706, 707, 708, 709,
	710, 701, 711, 711, 712, 713, 74, 83,
	84, 95, 91, 92, 93, 714, 94, 69,
	69, 69, 79, 715, 715, 716, 717, 5,
	6, 7, 8, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 19, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 83, 84, 718,
	719, 4, 0, 83, 718, 84, 719, 85,
	720, 720, 721, 722, 83, 84, 83, 84,
	84, 84, 84, 79, 720, 720, 721, 722,
	83, 84, 83, 84, 84, 84, 84, 85,
	723, 723, 724, 725, 69, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 74, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 83, 84, 718, 726,
	92, 93, 718, 727, 69, 69, 100, 69,
	97, 80, 80, 81, 82, 134, 135, 136,
	137, 134, 135, 136, 137, 83, 84, 83,
	84, 701, 80, 80, 81, 82, 193, 194,
	195, 193, 194, 195, 83, 84, 83, 84,
	701, 80, 80, 81, 82, 238, 238, 83,
	84, 83, 84, 701, 80, 80, 81, 82,
	260, 260, 83, 84, 83, 84, 701, 80,
	80, 81, 82, 588, 273, 588, 273, 83,
	84, 83, 84, 701, 80, 80, 81, 82,
	313, 314, 313, 314, 83, 84, 83, 84,
	701, 80, 80, 81, 82, 332, 333, 334,
	335, 334, 335, 83, 84, 83, 84, 701,
	80, 80, 81, 82, 371, 372, 371, 372,
	83, 84, 83, 84, 701, 80, 80, 81,
	82, 392, 393, 394, 392, 393, 394, 83,
	84, 83, 84, 701, 80, 80, 81, 82,
	455, 455, 83, 84, 83, 84, 701, 80,
	80, 81, 82, 465, 466, 467, 465, 466,
	467, 83, 84, 83, 84, 701, 80, 80,
	81, 82, 495, 496, 497, 498, 495, 496,
	497, 498, 83, 84, 83, 84, 701, 80,
	80, 81, 82, 537, 538, 539, 537, 538,
	539, 83, 84, 83, 84, 701, 80, 80,
	81, 82, 573, 573, 83, 84, 83, 84,
	701, 83, 728, 84, 726, 79, 80, 80,
	81, 82, 640, 641, 642, 640, 641, 642,
	83, 84, 83, 84, 729, 730, 730, 639,
	731, 731, 639, 732, 732, 639, 733, 733,
	639, 734, 734, 639, 735, 735, 735, 735,
	639, 736, 736, 639, 737, 737, 639, 738,
	738, 738, 738, 639, 740, 740, 741, 742,
	83, 84, 743, 744, 739, 746, 746, 747,
	748, 29, 30, 31, 32, 33, 29, 30,
	31, 32, 33, 83, 84, 749, 750, 28,
	745, 751, 751, 752, 753, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 83, 84, 754, 755, 4,
	0, 83, 754, 84, 755, 128, 757, 757,
	758, 759, 61, 62, 63, 61, 62, 63,
	83, 84, 760, 761, 707, 708, 762, 763,
	756, 764, 764, 765, 766, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 74, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 83, 84, 728,
	726, 92, 93, 767, 727, 69, 69, 100,
	69, 97, 740, 740, 741, 742, 134, 135,
	136, 137, 134, 135, 136, 137, 83, 84,
	743, 744, 756, 740, 740, 741, 742, 193,
	194, 195, 193, 194, 195, 83, 84, 743,
	744, 756, 740, 740, 741, 742, 238, 238,
	83, 84, 743, 744, 756, 740, 740, 741,
	742, 260, 260, 83, 84, 743, 744, 756,
	740, 740, 741, 742, 588, 273, 588, 273,
	83, 84, 743, 744, 756, 740, 740, 741,
	742, 313, 314, 313, 314, 83, 84, 743,
	744, 756, 740, 740, 741, 742, 332, 333,
	334, 335, 334, 335, 83, 84, 743, 744,
	756, 740, 740, 741, 742, 371, 372, 371,
	372, 83, 84, 743, 744, 756, 740, 740,
	741, 742, 392, 393, 394, 392, 393, 394,
	83, 84, 743, 744, 756, 740, 740, 741,
	742, 455, 455, 83, 84, 743, 744, 756,
	740, 740, 741, 742, 465, 466, 467, 465,
	466, 467, 83, 84, 743, 744, 756, 740,
	740, 741, 742, 495, 496, 497, 498, 495,
	496, 497, 498, 83, 84, 743, 744, 756,
	740, 740, 741, 742, 537, 538, 539, 537,
	538, 539, 83, 84, 743, 744, 756, 740,
	740, 741, 742, 573, 573, 83, 84, 743,
	744, 756, 768, 768, 87, 770, 771, 86,
	86, 772, 773, 86, 86, 86, 769, 715,
	715, 716, 717, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18,
	19, 83, 84, 718, 719, 4, 97, 80,
	83, 80, 81, 82, 84, 774, 718, 774,
	775, 776, 719, 660, 79, 80, 83, 80,
	81, 82, 84, 774, 718, 774, 775, 776,
	719, 660, 85, 720, 83, 720, 721, 722,
	777, 718, 777, 778, 779, 84, 726, 79,
	780, 780, 36, 781, 781, 36, 782, 782,
	783, 784, 785, 786, 787, 787, 788, 789,
	57, 790, 790, 36, 791, 791, 36, 792,
	792, 36, 793, 793, 794, 795, 796, 797,
	798, 798, 799, 800, 57, 801, 801, 36,
	802, 802, 803, 804, 805, 806, 807, 807,
	808, 809, 57, 20, 116, 21, 117, 79,
	810, 810, 811, 812, 83, 84, 83, 84,
	21, 21, 21, 79, 810, 810, 811, 812,
	83, 84, 83, 84, 21, 21, 21, 85,
	810, 83, 810, 811, 812, 84, 813, 718,
	813, 814, 815, 726, 21, 117, 79, 720,
	83, 720, 721, 722, 816, 83, 816, 817,
	818, 84, 91, 79, 697, 698, 71, 80,
	83, 80, 81, 82, 84, 819, 718, 819,
	820, 821, 726, 698, 79, 651, 651, 652,
	653, 134, 135, 136, 137, 134, 135, 136,
	137, 654, 655, 822, 651, 651, 652, 653,
	193, 194, 195, 193, 194, 195, 654, 655,
	822, 651, 651, 652, 653, 238, 238, 654,
	655, 822, 651, 651, 652, 653, 260, 260,
	654, 655, 822, 651, 651, 652, 653, 588,
	273, 588, 273, 654, 655, 822, 651, 651,
	652, 653, 313, 314, 313, 314, 654, 655,
	822, 651, 651, 652, 653, 332, 333, 334,
	335, 334, 335, 654, 655, 822, 651, 651,
	652, 653, 371, 372, 371, 372, 654, 655,
	822, 651, 651, 652, 653, 392, 393, 394,
	392, 393, 394, 654, 655, 822, 651, 651,
	652, 653, 455, 455, 654, 655, 822, 651,
	651, 652, 653, 465, 466, 467, 465, 466,
	467, 654, 655, 822, 651, 651, 652, 653,
	495, 496, 497, 498, 495, 496, 497, 498,
	654, 655, 822, 651, 651, 652, 653, 537,
	538, 539, 537, 538, 539, 654, 655, 822,
	651, 651, 652, 653, 573, 573, 654, 655,
	822, 20, 22, 21, 23, 85, 20, 586,
	21, 587, 128, 651, 651, 652, 653, 272,
	273, 272, 273, 654, 655, 822, 83, 132,
	84, 133, 128, 824, 823, 826, 825, 828,
	829, 830, 831, 828, 828, 828, 828, 827,
	832, 833, 834, 832, 835, 833, 832, 832,
	833, 833, 833, 827, 836, 837, 837, 836,
	838, 837, 836, 836, 837, 837, 837, 827,
	839, 833, 841, 840, 842, 840, 843, 844,
	845, 843, 846, 844, 843, 843, 844, 844,
	844, 840, 836, 836, 836, 836, 827, 847,
	847, 847, 847, 827, 850, 851, 849, 849,
	848, 852, 849, 852, 851, 852, 849, 853,
	849, 848, 854, 849, 856, 855, 857, 855,
	858, 859, 858, 861, 858, 859, 860, 859,
	855, 862, 863, 864, 862, 862, 848, 852,
	852, 852, 852, 865, 866, 862, 867, 855,
	868, 855, 869, 870, 871, 869, 869, 855,
	873, 873, 874, 875, 876, 877, 872, 873,
	873, 874, 875, 876, 877, 879, 878, 881,
	881, 882, 883, 885, 886, 887, 888, 889,
	885, 886, 887, 888, 889, 890, 891, 890,
	891, 884, 880, 881, 881, 882, 883, 890,
	891, 890, 891, 892, 890, 891, 881, 881,
	882, 883, 890, 891, 890, 891, 893, 880,
	896, 897, 898, 899, 900, 896, 897, 898,
	899, 900, 895, 894, 901, 901, 902, 903,
	905, 906, 905, 906, 904, 880, 876, 877,
	872, 908, 908, 909, 910, 911, 912, 907,
	908, 908, 909, 910, 913, 914, 915, 913,
	911, 912, 913, 913, 913, 907, 916, 917,
	918, 916, 916, 916, 916, 907, 920, 920,
	921, 922, 923, 923, 924, 923, 925, 926,
	925, 926, 923, 923, 923, 919, 927, 927,
	928, 929, 930, 931, 930, 931, 919, 930,
	931, 932, 916, 934, 933, 935, 933, 936,
	937, 938, 936, 936, 936, 936, 933, 920,
	920, 921, 922, 925, 926, 925, 926, 919,
	911, 912, 907, 939, 939, 940, 941, 942,
	943, 661, 939, 939, 940, 941, 942, 943,
	944, 944, 944, 945, 947, 947, 948, 949,
	950, 951, 950, 952, 946, 954, 954, 955,
	956, 957, 958, 959, 957, 960, 961, 960,
	962, 957, 957, 957, 953, 964, 965, 966,
	964, 964, 964, 964, 963, 967, 967, 968,
	969, 970, 970, 971, 970, 972, 973, 972,
	973, 970, 970, 970, 953, 974, 974, 975,
	976, 960, 961, 960, 961, 85, 960, 961,
	977, 964, 979, 978, 980, 978, 981, 982,
	983, 981, 981, 981, 981, 978, 967, 967,
	968, 969, 972, 973, 972, 973, 953, 960,
	984, 961, 962, 85, 985, 985, 986, 987,
	957, 958, 959, 957, 988, 989, 957, 957,
	957, 963, 988, 989, 661, 942, 943, 661,
	991, 991, 991, 991, 990, 992, 992, 992,
	992, 990, 993, 994, 993, 993, 993, 990,
	995, 996, 995, 995, 995, 990, 996, 996,
	997, 998, 991, 999, 1000, 1001, 1001, 1002,
	1003, 991, 991, 991, 990, 999, 1000, 990,
	996, 990, 1005, 1005, 1006, 1007, 1008, 1009,
	1010, 1010, 1011, 1012, 1004, 1013, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1033, 1034, 1035, 1004, 1036, 1036,
	1037, 1038, 1039, 1040, 1041, 1039, 1040, 1041,
	1042, 1043, 1044, 1044, 1045, 1046, 1004, 1047,
	1047, 1004, 1048, 1048, 1004, 1049, 1049, 1050,
	1051, 1052, 1053, 1054, 1054, 1055, 1056, 1004,
	1031, 1032, 1004, 1057, 1058, 1059, 1060, 1057,
	1058, 1059, 1060, 1004, 1061, 1061, 1004, 1062,
	1062, 1063, 1064, 1065, 1066, 1067, 1067, 1068,
	1069, 1004, 1070, 1071, 1070, 1071, 1004, 1072,
	1072, 1004, 1073, 1073, 1004, 1074, 1074, 1004,
	1075, 1075, 1004, 1076, 1076, 1077, 1078, 1079,
	1080, 1081, 1081, 1082, 1083, 1004, 1084, 1084,
	1085, 1086, 1087, 1088, 1089, 1089, 1090, 1091,
	1004, 1092, 1092, 1004, 1093, 1093, 1004, 1094,
	1094, 1095, 1096, 1097, 1098, 1099, 1099, 1100,
	1101, 1004, 1102, 1102, 1004, 1103, 1103, 1004,
	1104, 1104, 1004, 1105, 1105, 1106, 1107, 1108,
	1109, 1110, 1110, 1111, 1112, 1004, 1113, 1114,
	1115, 1113, 1114, 1115, 1004, 1116, 1116, 1004,
	1117, 1117, 1004, 1118, 1118, 1004, 1119, 1119,
	1120, 1121, 1122, 1123, 1124, 1124, 1125, 1126,
	1004, 1127, 1128, 1127, 1128, 1004, 1129, 1129,
	1004, 1130, 1130, 1004, 1131, 1131, 1132, 1133,
	1134, 1135, 1136, 1136, 1137, 1138, 1004, 1139,
	1139, 1004, 1140, 1140, 1004, 1141, 1141, 1004,
	1142, 1142, 1143, 1144, 1145, 1146, 1147, 1147,
	1148, 1149, 1004, 1150, 1150, 1151, 1152, 1153,
	1154, 1155, 1155, 1156, 1157, 1004, 1158, 1158,
	1004, 1159, 1159, 1004, 1160, 1161, 1004, 1162,
	1004, 1163, 1163, 1164, 1165, 1166, 1167, 1168,
	1168, 1169, 1170, 1004, 1171, 1004, 1172, 1172,
	1173, 1174, 1175, 1176, 1177, 1177, 1178, 1179,
	1004, 1180, 1180, 1004, 1181, 1181, 1004, 1182,
	1182, 1004, 1183, 1183, 1004, 1184, 1184, 1185,
	1186, 1187, 1188, 1189, 1189, 1190, 1191, 1004,
	1192, 1192, 1004, 1193, 1193, 1004, 1194, 1194,
	1004, 1195, 1195, 1004, 1196, 1196, 1004, 1197,
	1197, 1004, 1198, 1198, 1004, 1199, 1199, 1200,
	1201, 1202, 1203, 1204, 1204, 1205, 1206, 1004,
	1207, 1208, 1207, 1208, 1004, 1209, 1209, 1004,
	1210, 1210, 1211, 1212, 1213, 1214, 1215, 1215,
	1216, 1217, 1004, 1218, 1218, 1219, 1220, 1221,
	1222, 1223, 1223, 1224, 1225, 1004, 1226, 1227,
	1228, 1229, 1228, 1229, 1004, 1230, 1004, 1231,
	1231, 1232, 1233, 1234, 1235, 1236, 1236, 1237,
	1238, 1004, 1239, 1004, 1240, 1240, 1241, 1242,
	1243, 1244, 1245, 1245, 1246, 1247, 1004, 1248,
	1248, 1004, 1249, 1249, 1250, 1251, 1252, 1253,
	1254, 1254, 1255, 1256, 1004, 1257, 1257, 1258,
	1259, 1260, 1261, 1262, 1262, 1263, 1264, 1004,
	1265, 1266, 1265, 1266, 1004, 1267, 1267, 1004,
	1268, 1268, 1004, 1269, 1269, 1004, 1270, 1270,
	1271, 1272, 1273, 1274, 1275, 1275, 1276, 1277,
	1004, 1278, 1278, 1279, 1280, 1281, 1282, 1283,
	1283, 1284, 1285, 1004, 1286, 1287, 1288, 1286,
	1287, 1288, 1004, 1289, 1289, 1004, 1290, 1290,
	1004, 1291, 1291, 1004, 1292, 1292, 1293, 1294,
	1295, 1296, 1297, 1297, 1298, 1299, 1004, 1300,
	1300, 1004, 1301, 1301, 1302, 1303, 1304, 1305,
	1306, 1306, 1307, 1308, 1004, 1309, 1309, 1310,
	1311, 1312, 1312, 1313, 1314, 1315, 1315, 1316,
	1317, 1004, 1318, 1318, 1004, 1319, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1325, 1326, 1327,
	1004, 1328, 1328, 1329, 1330, 1331, 1331, 1332,
	1333, 1334, 1334, 1335, 1336, 1004, 1337, 1337,
	1004, 1338, 1338, 1004, 1339, 1339, 1004, 1340,
	1340, 1004, 1341, 1341, 1342, 1343, 1344, 1345,
	1346, 1346, 1347, 1348, 1004, 1349, 1349, 1004,
	1350, 1350, 1004, 1351, 1351, 1352, 1353, 1354,
	1355, 1356, 1356, 1357, 1358, 1004, 1359, 1360,
	1361, 1359, 1360, 1361, 1004, 1362, 1362, 1363,
	1364, 1365, 1366, 1367, 1367, 1368, 1369, 1004,
	1370, 1370, 1004, 1371, 1371, 1004, 1372, 1372,
	1004, 1373, 1373, 1374, 1375, 1376, 1377, 1378,
	1378, 1379, 1380, 1004, 1381, 1381, 1382, 1383,
	1384, 1385, 1386, 1386, 1387, 1388, 1004, 1389,
	1390, 1391, 1392, 1389, 1390, 1391, 1392, 1004,
	1393, 1393, 1004, 1394, 1394, 1395, 1396, 1397,
	1398, 1399, 1399, 1400, 1401, 1004, 1402, 1402,
	1004, 1403, 1403, 1404, 1405, 1406, 1407, 1408,
	1408, 1409, 1410, 1004, 1411, 1411, 1004, 1412,
	1412, 1413, 1414, 1415, 1416, 1417, 1417, 1418,
	1419, 1004, 1420, 1420, 1004, 1421, 1421, 1004,
	1422, 1422, 1004, 1423, 1423, 1424, 1425, 1426,
	1427, 1428, 1428, 1429, 1430, 1004, 1431, 1432,
	1433, 1431, 1432, 1433, 1004, 1434, 1434, 1004,
	1435, 1435, 1004, 1436, 1436, 1437, 1438, 1439,
	1440, 1441, 1441, 1442, 1443, 1004, 1444, 1444,
	1004, 1445, 1445, 1446, 1447, 1448, 1449, 1450,
	1450, 1451, 1452, 1004, 1453, 1453, 1004, 1454,
	1454, 1004, 1455, 1004, 1456, 1456, 1457, 1458,
	1460, 1461, 1462, 1462, 1463, 1464, 1459, 1004,
	1465, 1465, 1004, 1466, 1466, 1004, 1467, 1467,
	1468, 1469, 1470, 1471, 1472, 1472, 1473, 1474,
	1004, 1475, 1475, 1004, 1476, 1476, 1004, 1477,
	1477, 1004, 1478, 1478, 1479, 1480, 1481, 1482,
	1483, 1483, 1484, 1485, 1004, 1486, 1486, 1004,
	1487, 1487, 1488, 1489, 1490, 1491, 1492, 1492,
	1493, 1494, 1004, 1496, 1496, 1497, 1498, 1499,
	1500, 1495, 1496, 1496, 1497, 1498, 1499, 1500,
	1502, 1501, 1503, 1503, 1504, 1505, 1507, 1508,
	1506, 1501, 1510, 1510, 1511, 1512, 1514, 1515,
	1513, 1513, 1513, 1509, 1516, 1516, 1516, 1509,
	1517, 1517, 1518, 1519, 1520, 1521, 1522, 1522,
	1523, 1524, 1513, 1513, 1513, 1509, 1520, 1521,
	1509, 1514, 1515, 1495, 1499, 1500, 1495, 1525,
	1525, 1526, 1527, 1528, 1529, 1495, 1525, 1525,
	1526, 1527, 1530, 1528, 1529, 1531, 1501, 1532,
	1532, 1533, 1534, 1536, 1536, 1537, 1538, 1535,
	1501, 1539, 1539, 1540, 1541, 1543, 1544, 1542,
	1542, 1542, 1509, 1545, 1545, 1545, 1509, 1546,
	1546, 1547, 1548, 1549, 1550, 1551, 1551, 1552,
	1553, 1542, 1542, 1542, 1509, 1549, 1550, 1509,
	1543, 1544, 1495, 1554, 1554, 1555, 1556, 1557,
	1558, 1535, 1501, 1528, 1529, 1495, 1561, 1562,
	1563, 1564, 1565, 1561, 1562, 1563, 1564, 1565,
	1560, 1559, 1566, 1566, 1566, 1566, 1567, 1559,
	1568, 1569, 1568, 1569, 1559, 1570, 1570, 1570,
	1570, 1559, 1571, 1571, 1559, 1572, 1573, 1572,
	1572, 1572, 1559, 1574, 1574, 1559, 1575, 1575,
	1559, 1576, 1576, 1559, 1577, 1577, 1559, 1578,
	1559, 1579, 1559, 1580, 1580, 1559, 1581, 1581,
	1559, 1582, 1582, 1559, 1583, 1559, 1584, 1584,
	1584, 1584, 1559, 1585, 1586, 1585, 1586, 1559,
	1587, 1588, 1587, 1588, 1559, 1589, 1559, 1590,
	1590, 1559, 1591, 1591, 1559, 1592, 1592, 1559,
	1593, 1593, 1559, 1594, 1594, 1594, 1594, 1559,
	1595, 1595, 1559, 1596, 1596, 1559, 1597, 1597,
	1559, 1598, 1599, 1559, 1600, 1559, 1601, 1559,
	1602, 1602, 1559, 1603, 1603, 1559, 1604, 1604,
	1559, 1605, 1559, 1606, 1559, 1607, 1559, 1608,
	1608, 1608, 1608, 1559, 1609, 1559, 1610, 1559,
	1611, 1611, 1559, 1612, 1612, 1559, 1613, 1613,
	1559, 1614, 1559, 1615, 1559, 1616, 1559, 1617,
	1617, 1617, 1617, 1559, 1618, 1619, 1559, 1620,
	1559, 1621, 1559, 1622, 1559, 1623, 1559, 1624,
	1624, 1624, 1624, 1559, 1625, 1559, 1626, 1559,
	1627, 1627, 1627, 1627, 1559, 1628, 1628, 1559,
	1629, 1629, 1559, 1630, 1630, 1559, 1631, 1631,
	1559, 1632, 1632, 1559, 1633, 1633, 1559, 1634,
	1634, 1559, 1635, 1635, 1635, 1635, 1559, 1636,
	1636, 1559, 1637, 1637, 1559, 1638, 1638, 1559,
	1639, 1639, 1559, 1640, 1640, 1559, 1641, 1641,
	1559, 1642, 1643, 1642, 1643, 1559, 1644, 1644,
	1559, 1645, 1645, 1559, 1646, 1646, 1646, 1646,
	1559, 1647, 1647, 1559, 1648, 1648, 1559, 1649,
	1649, 1649, 1649, 1559, 1650, 1650, 1559, 1651,
	1651, 1559, 1652, 1653, 1652, 1653, 1559, 1654,
	1654, 1559, 1655, 1559, 1656, 1656, 1656, 1656,
	1559, 1657, 1657, 1559, 1658, 1658, 1559, 1659,
	1660, 1661, 1559, 1662, 1663, 1662, 1662, 1662,
	1559, 1664, 1664, 1559, 1665, 1665, 1559, 1666,
	1666, 1559, 1667, 1667, 1559, 1668, 1559, 1669,
	1559, 1670, 1670, 1559, 1671, 1671, 1559, 1672,
	1672, 1559, 1673, 1559, 1674, 1674, 1674, 1674,
	1559, 1675, 1559, 1676, 1559, 1677, 1677, 1677,
	1677, 1559, 1678, 1559, 1679, 1559, 1680, 1680,
	1680, 1680, 1559, 1683, 1684, 1685, 1686, 1687,
	1688, 1683, 1684, 1685, 1686, 1687, 1688, 1682,
	1681, 1689, 1689, 1689, 1689, 1690, 1681, 1691,
	1691, 1681, 1692, 1692, 1681, 1693, 1693, 1681,
	1694, 1694, 1681, 1695, 1695, 1681, 1696, 1696,
	1696, 1696, 1681, 1697, 1698, 1699, 1697, 1698,
	1699, 1681, 1700, 1700, 1681, 1701, 1701, 1681,
	1702, 1702, 1681, 1703, 1703, 1681, 1704, 1704,
	1681, 1705, 1705, 1705, 1705, 1681, 1706, 1707,
	1706, 1707, 1681, 1708, 1708, 1681, 1709, 1709,
	1709, 1709, 1681, 1710, 1710, 1681, 1711, 1711,
	1681, 1712, 1712, 1712, 1712, 1681, 1713, 1713,
	1681, 1714, 1714, 1681, 1715, 1715, 1681, 1716,
	1716, 1716, 1716, 1681, 1717, 1717, 1681, 1718,
	1718, 1681, 1719, 1719, 1719, 1719, 1681, 1720,
	1721, 1720, 1721, 1681, 1722, 1722, 1681, 1723,
	1723, 1723, 1723, 1681, 1724, 1724, 1681, 1725,
	1725, 1681, 1726, 1726, 1726, 1726, 1681, 1727,
	1727, 1681, 1728, 1728, 1681, 1729, 1729, 1681,
	1730, 1730, 1730, 1730, 1681, 1731, 1731, 1681,
	1732, 1732, 1681, 1733, 1733, 1733, 1733, 1681,
	1735, 1735, 1734, 1736, 1737, 1736, 1736, 1736,
	1737, 1734, 1738, 1738, 1738, 1738, 1738, 1738,
	71, 1739, 1739, 1739, 1739, 71, 1740, 1740,
	1740, 1740, 1740, 1740, 71, 1741, 1741, 1742,
	1743, 1744, 1745, 71, 1746, 1746, 1747, 1748,
	1749, 1749, 1749, 1750, 1751, 1749, 1749, 1749,
	71, 1752, 1752, 1753, 1754, 1755, 1756, 71,
	1758, 1758, 1759, 1760, 1762, 1763, 1761, 1757,
	1764, 1764, 1765, 1766, 1768, 1769, 1767, 1757,
	1770, 1770, 1771, 1772, 1774, 1775, 1773, 1757,
	1777, 1777, 1778, 1779, 1781, 1782, 1783, 1784,
	1785, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1780, 1776, 1788, 1788, 1789, 1790, 1792, 1793,
	1791, 1757, 1794, 1794, 1795, 1796, 1798, 1799,
	1800, 1801, 1802, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1797, 1776, 1805, 1805, 1806, 1807,
	1809, 1810, 1808, 1757, 1811, 1811, 1812, 1813,
	1815, 1816, 1817, 1818, 1819, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1814, 1776, 1822, 1822,
	1823, 1824, 1826, 1827, 1825, 1757, 1828, 1828,
	1830, 1831, 1832, 1833, 1834, 1830, 1831, 1832,
	1833, 1834, 1828, 1828, 1829, 1776, 1828, 1828,
	1828, 1828, 1835, 1776, 1837, 1838, 1839, 1840,
	1841, 1837, 1838, 1839, 1840, 1841, 1836, 1776,
	1842, 1842, 1842, 1842, 1843, 1776, 1826, 1827,
	71, 1811, 1811, 1812, 1813, 1820, 1821, 1844,
	1776, 1846, 1847, 1848, 1849, 1850, 1846, 1847,
	1848, 1849, 1850, 1845, 1776, 1851, 1851, 1852,
	1853, 1855, 1856, 1854, 1776, 1809, 1810, 71,
	1794, 1794, 1795, 1796, 1803, 1804, 1857, 1776,
	1859, 1860, 1861, 1862, 1863, 1859, 1860, 1861,
	1862, 1863, 1858, 1776, 1864, 1864, 1865, 1866,
	1868, 1869, 1867, 1776, 1792, 1793, 71, 1777,
	1777, 1778, 1779, 1786, 1787, 1870, 1776, 1872,
	1873, 1874, 1875, 1876, 1872, 1873, 1874, 1875,
	1876, 1871, 1776, 1877, 1877, 1878, 1879, 1881,
	1882, 1880, 1776, 1774, 1775, 71, 1762, 1763,
	71, 1750, 1751, 71, 71, 71, 71, 71,
	1883, 1884, 1884, 1885, 1886, 1887, 1888, 71,
	1890, 1890, 1891, 1892, 1893, 1894, 1889, 1889,
	1889, 71, 1895, 1895, 1895, 1895, 71, 1893,
	1894, 71, 1896, 1896, 1896, 1896, 1896, 1896,
	71, 1897, 1897, 1898, 1899, 1900, 1901, 71,
	1902, 1902, 1903, 1904, 1905, 1905, 1905, 1906,
	1907, 1905, 1905, 1905, 71, 1908, 1908, 1908,
	1908, 71, 1906, 1907, 71, 1909, 1757, 1910,
	1910, 1911, 1912, 1914, 1915, 1913, 1757, 1916,
	1916, 1917, 1918, 1919, 1919, 1919, 1920, 1921,
	1919, 1919, 1919, 71, 1922, 1922, 1922, 1922,
	71, 1920, 1921, 71, 1924, 1924, 1924, 1924,
	1923, 1925, 1925, 1926, 1927, 1928, 1929, 1930,
	1930, 1931, 1932, 1924, 1934, 1934, 1935, 1936,
	1937, 1938, 1939, 1939, 1940, 1941, 1933, 1933,
	1933, 1924, 1937, 1938, 1924, 1942, 1942, 1942,
	1942, 1734, 1943, 1944, 1943, 1943, 1943, 1944,
	1944, 1944, 1734, 1946, 1945, 1947, 1947, 1948,
	1949, 1951, 1952, 1950, 1945, 1953, 1953, 1954,
	1955, 1957, 1958, 1959, 1960, 1956, 1945, 1961,
	1961, 1962, 1963, 1965, 1966, 1964, 1945, 1967,
	1967, 1968, 1969, 1957, 1958, 1971, 1972, 1970,
	1945, 1973, 1973, 1974, 1975, 1976, 1978, 1979,
	1977, 1945, 1980, 1980, 1981, 1982, 1957, 1958,
	1983, 1984, 1945, 1985, 1985, 1986, 1987, 1988,
	1989, 1945, 1985, 1985, 1986, 1987, 1988, 1989,
	1990, 1945, 1991, 1991, 1992, 1993, 1995, 1996,
	1994, 1945, 1997, 1997, 1998, 1999, 2001, 2002,
	2003, 2004, 2000, 1945, 2005, 2005, 2006, 2007,
	2009, 2010, 2008, 1945, 2011, 2011, 2012, 2013,
	2001, 2002, 2015, 2016, 2014, 1945, 2017, 2017,
	2018, 2019, 2020, 2022, 2023, 2021, 1945, 2024,
	2024, 2025, 2026, 2001, 2002, 2027, 2028, 1945,
	2029, 2029, 2030, 2031, 2032, 2033, 1945, 2029,
	2029, 2030, 2031, 2034, 2032, 2033, 2035, 1945,
	2036, 1945, 2037, 2037, 2038, 2039, 2040, 2042,
	2043, 2044, 2045, 2045, 2046, 2047, 2041, 1945,
	2048, 2048, 2049, 2050, 2052, 2053, 2054, 2054,
	2055, 2056, 2051, 1945, 2057, 2057, 2058, 2059,
	2060, 2062, 2063, 2064, 2065, 2065, 2066, 2067,
	2061, 1945, 2068, 2068, 2069, 2070, 2072, 2073,
	2054, 2054, 2074, 2075, 2071, 1945, 2076, 2076,
	2077, 2078, 2079, 2081, 2082, 2083, 2084, 2084,
	2085, 2086, 2080, 1945, 2087, 2087, 2088, 2089,
	2091, 2092, 2054, 2054, 2093, 2094, 2090, 1945,
	2095, 2095, 2096, 2097, 2098, 2095, 2100, 2101,
	2102, 2102, 2103, 2104, 2099, 1945, 2105, 2105,
	2106, 2107, 2108, 2109, 2054, 2054, 2110, 2111,
	1945, 2108, 2109, 1945, 2112, 2112, 2113, 2114,
	2112, 2116, 2117, 2118, 2118, 2119, 2120, 2115,
	1945, 2095, 2095, 2096, 2097, 2095, 2100, 2101,
	2102, 2102, 2103, 2104, 2121, 1945, 2091, 2092,
	1945, 2122, 2122, 2123, 2124, 2126, 2127, 2128,
	2129, 2129, 2130, 2131, 2125, 1945, 2076, 2076,
	2077, 2078, 2081, 2082, 2083, 2084, 2084, 2085,
	2086, 2132, 1945, 2087, 2087, 2088, 2089, 2091,
	2092, 2054, 2054, 2093, 2094, 1945, 2072, 2073,
	1945, 2133, 2133, 2134, 2135, 2137, 2138, 2139,
	2140, 2140, 2141, 2142, 2136, 1945, 2057, 2057,
	2058, 2059, 2062, 2063, 2064, 2065, 2065, 2066,
	2067, 2143, 1945, 2068, 2068, 2069, 2070, 2072,
	2073, 2054, 2054, 2074, 2075, 1945, 2052, 2053,
	1945, 2144, 2144, 2145, 2146, 2148, 2149, 2150,
	2151, 2151, 2152, 2153, 2147, 1945, 2037, 2037,
	2038, 2039, 2042, 2043, 2044, 2045, 2045, 2046,
	2047, 2154, 1945, 2048, 2048, 2049, 2050, 2052,
	2053, 2054, 2054, 2055, 2056, 1945, 2032, 2033,
	1945, 2155, 2155, 2156, 2157, 2158, 2159, 1945,
	2027, 2028, 1945, 2160, 2160, 2161, 2162, 2164,
	2165, 2163, 1945, 2017, 2017, 2018, 2019, 2022,
	2023, 2166, 1945, 2015, 2016, 1945, 2003, 2004,
	1945, 1988, 1989, 1945, 2167, 2167, 2168, 2169,
	2170, 2171, 1945, 1983, 1984, 1945, 2172, 2172,
	2173, 2174, 2176, 2177, 2175, 1945, 1973, 1973,
	1974, 1975, 1978, 1979, 2178, 1945, 1971, 1972,
	1945, 1959, 1960, 1945, 2179, 1757, 2180, 2180,
	2181, 2182, 2184, 2185, 2183, 1757, 2186, 2186,
	2187, 2188, 2190, 2191, 2189, 1757, 2192, 2192,
	2193, 2194, 2196, 2197, 2195, 1757, 2198, 2198,
	2199, 2200, 2202, 2203, 2201, 1757, 2204, 2204,
	2205, 2206, 2208, 2209, 2207, 1757, 2210, 2210,
	2211, 2212, 2213, 2213, 2213, 2214, 2215, 2213,
	2213, 2213, 71, 2216, 2216, 2216, 2216, 71,
	2214, 2215, 71, 2202, 2203, 71, 2190, 2191,
	71, 2217, 1757, 2218, 2218, 2219, 2220, 2222,
	2223, 2221, 1757, 2224, 2224, 2225, 2226, 2228,
	2229, 2227, 1757, 2230, 2230, 2231, 2232, 2234,
	2235, 2233, 1757, 2237, 2237, 2238, 2239, 2240,
	2241, 2236, 2236, 2236, 71, 2242, 2242, 2243,
	2244, 2245, 2246, 71, 2248, 2248, 2249, 2250,
	2251, 2252, 2247, 2247, 2247, 71, 2253, 2253,
	2254, 2255, 2256, 2257, 71, 2259, 2259, 2260,
	2261, 2262, 2263, 2258, 2258, 2258, 71, 2264,
	2264, 2265, 2266, 2267, 2268, 71, 2269, 2269,
	2270, 2271, 2272, 2272, 2272, 2273, 2274, 2272,
	2272, 2272, 71, 2275, 2275, 2275, 2275, 71,
	2273, 2274, 71, 2262, 2263, 71, 2251, 2252,
	71, 2240, 2241, 71, 2228, 2229, 71, 2276,
	2276, 2276, 71, 2277, 2277, 2278, 2279, 2280,
	2281, 71, 2277, 2277, 2278, 2279, 2280, 2281,
	2282, 1757, 2283, 2283, 2284, 2285, 2287, 2288,
	2286, 1757, 2289, 2289, 2290, 2291, 2293, 2294,
	2292, 2292, 2292, 71, 2295, 2295, 2296, 2297,
	2298, 2299, 71, 2295, 2295, 2296, 2297, 2300,
	2298, 2299, 2300, 2300, 2300, 71, 2301, 2301,
	71, 2298, 2299, 71, 2293, 2294, 71, 2280,
	2281, 71, 2303, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2311, 2312, 2313, 2302,
	2314, 2315, 2302, 2316, 2302, 2318, 2318, 2317,
	2320, 2319, 2317, 2321, 2302, 2322, 2322, 2323,
	2324, 2326, 2327, 2328, 2328, 2329, 2330, 2325,
	2302, 2309, 2310, 71, 2331, 2302, 2332, 2332,
	2332, 2332, 2317, 2334, 2333, 2333, 2333, 2317,
	2335, 1757, 2336, 2336, 2337, 2338, 2340, 2341,
	2339, 1757, 2342, 2342, 2343, 2344, 2346, 2347,
	2345, 2345, 2345, 71, 2348, 2348, 2349, 2350,
	2351, 2352, 71, 2348, 2348, 2349, 2350, 2351,
	2352, 2353, 1757, 2354, 2354, 2355, 2356, 2358,
	2359, 2357, 1757, 2361, 2361, 2362, 2363, 2365,
	2366, 2364, 2364, 2364, 2360, 2367, 2367, 2367,
	2360, 2368, 2368, 2369, 2370, 2371, 2372, 2373,
	2373, 2374, 2375, 2364, 2364, 2364, 2360, 2371,
	2372, 2360, 2365, 2366, 71, 2351, 2352, 71,
	2346, 2347, 71, 2376, 1757, 2377, 2377, 2378,
	2379, 2381, 2382, 2380, 1757, 2383, 2383, 2384,
	2385, 2387, 2388, 2386, 1757, 2389, 2389, 2390,
	2391, 2393, 2394, 2392, 1757, 2395, 2395, 2396,
	2397, 2399, 2400, 2398, 2398, 2398, 2360, 2401,
	2401, 2401, 2360, 2402, 2402, 2403, 2404, 2405,
	2406, 2407, 2407, 2408, 2409, 2398, 2398, 2398,
	2360, 2405, 2406, 2360, 2399, 2400, 71, 2387,
	2388, 71, 2410, 1757, 2411, 2411, 2412, 2413,
	2415, 2416, 2414, 1757, 2418, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2417, 2427,
	2427, 2428, 2429, 2430, 2431, 2417, 2427, 2427,
	2428, 2429, 2430, 2431, 2433, 2432, 2434, 2434,
	2435, 2436, 2438, 2439, 2437, 2432, 2440, 2440,
	2441, 2442, 2443, 2444, 2445, 2417, 2447, 2447,
	2448, 2449, 2450, 2450, 2451, 2452, 2453, 2453,
	2454, 2455, 2456, 2456, 2456, 2456, 2457, 2458,
	2456, 2456, 2459, 2460, 2461, 2462, 2456, 2456,
	2463, 2464, 2465, 2466, 2456, 2456, 2467, 2468,
	2446, 2447, 2447, 2448, 2449, 2470, 2457, 2458,
	2470, 2470, 2470, 2469, 2456, 2456, 2469, 2457,
	2458, 2469, 2450, 2450, 2451, 2452, 2456, 2456,
	2456, 2456, 2461, 2462, 2456, 2456, 2463, 2464,
	2469, 2461, 2462, 2469, 2470, 2447, 2447, 2448,
	2449, 2450, 2450, 2451, 2452, 2453, 2453, 2454,
	2455, 2456, 2456, 2456, 2456, 2457, 2458, 2456,
	2456, 2459, 2460, 2461, 2462, 2456, 2456, 2463,
	2464, 2465, 2466, 2456, 2456, 2467, 2468, 2470,
	2470, 2470, 2469, 2457, 2461, 2465, 2458, 2462,
	2466, 2469, 2444, 2445, 2417, 2430, 2431, 2417,
	2471, 2471, 2472, 2473, 2474, 2475, 2417, 2471,
	2471, 2472, 2473, 2474, 2475, 2476, 2432, 2477,
	2477, 2478, 2479, 2481, 2482, 2480, 2432, 2484,
	2484, 2485, 2486, 2487, 2488, 2489, 2487, 2483,
	2491, 2492, 2492, 2493, 2494, 2495, 2495, 2496,
	2497, 2498, 2498, 2499, 2500, 2501, 2501, 2501,
	2501, 2502, 2503, 2501, 2501, 2504, 2505, 2506,
	2507, 2501, 2501, 2508, 2509, 2510, 2511, 2501,
	2501, 2512, 2513, 2491, 2490, 2488, 2489, 2417,
	2474, 2475, 2417, 2514, 2514, 2515, 2516, 2517,
	2518, 2417, 2514, 2514, 2515, 2516, 2517, 2518,
	2519, 2432, 2520, 2520, 2521, 2522, 2524, 2525,
	2523, 2432, 2526, 2526, 2527, 2528, 2529, 2530,
	2531, 2529, 2529, 2529, 2483, 2532, 2533, 2533,
	2534, 2535, 2536, 2536, 2537, 2538, 2539, 2539,
	2540, 2541, 2542, 2542, 2542, 2542, 2543, 2544,
	2542, 2542, 2545, 2546, 2547, 2548, 2542, 2542,
	2549, 2550, 2551, 2552, 2542, 2542, 2553, 2554,
	2532, 2532, 2532, 2490, 2530, 2531, 2417, 2517,
	2518, 2417, 2555, 2555, 2556, 2557, 2558, 2559,
	2417, 2555, 2555, 2556, 2557, 2558, 2559, 2560,
	2432, 2561, 2561, 2562, 2563, 2565, 2566, 2564,
	2432, 2567, 2567, 2568, 2569, 2570, 2570, 2570,
	2571, 2572, 2570, 2570, 2570, 2417, 2573, 2573,
	2574, 2575, 2576, 2576, 2577, 2578, 2579, 2579,
	2580, 2581, 2582, 2582, 2582, 2582, 2583, 2584,
	2582, 2582, 2585, 2586, 2587, 2588, 2582, 2582,
	2589, 2590, 2591, 2592, 2582, 2582, 2593, 2594,
	2446, 2571, 2572, 2417, 2558, 2559, 2417, 2425,
	2426, 71, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2595, 2611, 2611, 2612, 2613, 2614, 2615, 2616,
	2614, 2615, 2616, 2617, 2618, 2595, 2619, 2619,
	2620, 2621, 2623, 2624, 2622, 2622, 2622, 71,
	2625, 2625, 2626, 2627, 2628, 2629, 71, 2625,
	2625, 2626, 2627, 2628, 2629, 2630, 1757, 2631,
	2631, 2632, 2633, 2635, 2636, 2634, 1757, 2637,
	2637, 2638, 2639, 2641, 2642, 2640, 1757, 2643,
	2643, 2644, 2645, 2647, 2648, 2646, 1757, 2650,
	2650, 2651, 2652, 2654, 2655, 2653, 2649, 2656,
	2656, 2657, 2658, 2660, 2661, 2659, 2649, 2662,
	2662, 2663, 2664, 2666, 2667, 2665, 2649, 2668,
	2668, 2669, 2670, 2672, 2673, 2671, 2649, 2674,
	2674, 2675, 2676, 2678, 2679, 2677, 1757, 2680,
	2680, 2681, 2682, 2684, 2685, 2683, 1757, 2686,
	2686, 2687, 2688, 2689, 2689, 2689, 2690, 2691,
	2689, 2689, 2689, 71, 2692, 2692, 2693, 2694,
	2695, 2696, 71, 2697, 2697, 2698, 2699, 2700,
	2701, 2702, 2700, 2700, 2700, 71, 2703, 2703,
	71, 2701, 2702, 71, 2690, 2691, 71, 2678,
	2679, 71, 2666, 2667, 71, 2654, 2655, 71,
	2641, 2642, 71, 2628, 2629, 71, 2623, 2624,
	71, 2704, 2704, 2595, 2705, 2705, 2595, 2706,
	2706, 2707, 2708, 2709, 2710, 2595, 2711, 2711,
	2595, 2712, 2712, 2595, 2713, 2713, 2595, 2714,
	2714, 2715, 2716, 2717, 2718, 2595, 2719, 2719,
	2595, 2720, 2720, 2721, 2722, 2723, 2724, 2595,
	2725, 2726, 2727, 2728, 2725, 2726, 2727, 2728,
	2595, 2729, 2729, 2595, 2730, 2730, 2731, 2732,
	2733, 2734, 2595, 2735, 2736, 2735, 2736, 2595,
	2737, 2737, 2595, 2738, 2738, 2595, 2739, 2739,
	2595, 2740, 2740, 2595, 2741, 2741, 2742, 2743,
	2744, 2745, 2595, 2746, 2746, 2747, 2748, 2749,
	2750, 2595, 2751, 2751, 2595, 2752, 2752, 2595,
	2753, 2753, 2754, 2755, 2756, 2757, 2595, 2758,
	2758, 2595, 2759, 2759, 2595, 2760, 2760, 2595,
	2761, 2761, 2762, 2763, 2764, 2765, 2595, 2766,
	2767, 2768, 2766, 2767, 2768, 2595, 2769, 2769,
	2595, 2770, 2770, 2595, 2771, 2771, 2595, 2772,
	2772, 2773, 2774, 2775, 2776, 2595, 2777, 2778,
	2777, 2778, 2595, 2779, 2779, 2595, 2780, 2780,
	2595, 2781, 2781, 2782, 2783, 2784, 2785, 2595,
	2786, 2786, 2595, 2787, 2787, 2595, 2788, 2788,
	2595, 2789, 2789, 2790, 2791, 2792, 2793, 2595,
	2794, 2794, 2795, 2796, 2797, 2798, 2595, 2799,
	2799, 2595, 2800, 2800, 2595, 2801, 2802, 2595,
	2803, 2595, 2804, 2804, 2805, 2806, 2807, 2808,
	2595, 2809, 2595, 2810, 2810, 2811, 2812, 2813,
	2814, 2595, 2815, 2815, 2595, 2816, 2816, 2595,
	2817, 2817, 2595, 2818, 2818, 2595, 2819, 2819,
	2820, 2821, 2822, 2823, 2595, 2824, 2824, 2595,
	2825, 2825, 2595, 2826, 2826, 2595, 2827, 2827,
	2595, 2828, 2828, 2595, 2829, 2829, 2595, 2830,
	2830, 2595, 2831, 2831, 2832, 2833, 2834, 2835,
	2595, 2836, 2837, 2836, 2837, 2595, 2838, 2838,
	2595, 2839, 2839, 2840, 2841, 2842, 2843, 2595,
	2844, 2844, 2845, 2846, 2847, 2848, 2595, 2849,
	2850, 2851, 2852, 2851, 2852, 2595, 2853, 2595,
	2854, 2854, 2855, 2856, 2857, 2858, 2595, 2859,
	2595, 2860, 2860, 2861, 2862, 2863, 2864, 2595,
	2865, 2865, 2595, 2866, 2866, 2867, 2868, 2869,
	2870, 2595, 2871, 2871, 2872, 2873, 2874, 2875,
	2595, 2876, 2877, 2876, 2877, 2595, 2878, 2878,
	2595, 2879, 2879, 2595, 2880, 2880, 2595, 2881,
	2881, 2882, 2883, 2884, 2885, 2595, 2886, 2886,
	2887, 2888, 2889, 2890, 2595, 2891, 2892, 2893,
	2891, 2892, 2893, 2595, 2894, 2894, 2595, 2895,
	2895, 2595, 2896, 2896, 2595, 2897, 2897, 2898,
	2899, 2900, 2901, 2595, 2902, 2902, 2595, 2903,
	2903, 2904, 2905, 2906, 2907, 2595, 2908, 2908,
	2909, 2910, 2911, 2911, 2912, 2913, 2595, 2914,
	2914, 2595, 2915, 2915, 2916, 2917, 2918, 2919,
	2920, 2595, 2921, 2921, 2922, 2923, 2924, 2924,
	2925, 2926, 2595, 2927, 2927, 2595, 2928, 2928,
	2595, 2929, 2929, 2595, 2930, 2930, 2595, 2931,
	2931, 2932, 2933, 2934, 2935, 2595, 2936, 2936,
	2595, 2937, 2937, 2595, 2938, 2938, 2939, 2940,
	2941, 2942, 2595, 2943, 2944, 2945, 2943, 2944,
	2945, 2595, 2946, 2946, 2947, 2948, 2949, 2950,
	2595, 2951, 2951, 2595, 2952, 2952, 2595, 2953,
	2953, 2595, 2954, 2954, 2955, 2956, 2957, 2958,
	2595, 2959, 2959, 2960, 2961, 2962, 2963, 2595,
	2964, 2965, 2966, 2967, 2964, 2965, 2966, 2967,
	2595, 2968, 2968, 2595, 2969, 2969, 2970, 2971,
	2972, 2973, 2595, 2974, 2974, 2595, 2975, 2975,
	2976, 2977, 2978, 2979, 2595, 2980, 2980, 2595,
	2981, 2981, 2982, 2983, 2984, 2985, 2595, 2986,
	2986, 2595, 2987, 2987, 2595, 2988, 2988, 2595,
	2989, 2989, 2990, 2991, 2992, 2993, 2595, 2994,
	2995, 2996, 2994, 2995, 2996, 2595, 2997, 2997,
	2595, 2998, 2998, 2595, 2999, 2999, 3000, 3001,
	3002, 3003, 2595, 3004, 3004, 2595, 3005, 3005,
	3006, 3007, 3008, 3009, 2595, 3010, 3010, 2595,
	3011, 3011, 2595, 3013, 3012, 3014, 3014, 3015,
	3016, 3018, 3019, 3017, 3012, 3020, 3020, 2595,
	3021, 3021, 2595, 3022, 3022, 3023, 3024, 3025,
	3026, 2595, 3027, 3027, 3027, 3027, 3027, 3027,
	71, 3028, 3028, 3028, 3028, 71, 3029, 3029,
	3029, 3029, 71, 3030, 1757, 3031, 3031, 3032,
	3033, 3035, 3036, 3034, 1757, 3037, 3037, 3038,
	3039, 3041, 3042, 3040, 1757, 3043, 3043, 3044,
	3045, 3047, 3048, 3046, 1757, 3049, 3049, 3050,
	3051, 3053, 3054, 3052, 3052, 3052, 71, 3055,
	3055, 3056, 3057, 3058, 3059, 71, 3055, 3055,
	3056, 3057, 3060, 3058, 3059, 3060, 3060, 3060,
	71, 3061, 3061, 71, 3058, 3059, 71, 3053,
	3054, 71, 3041, 3042, 71, 3062, 3062, 3062,
	3062, 71, 3063, 3063, 71, 3064, 1757, 3065,
	3065, 3066, 3067, 3069, 3070, 3068, 1757, 3071,
	3071, 3072, 3073, 3075, 3076, 3074, 1757, 3077,
	3077, 3078, 3079, 3081, 3082, 3080, 1757, 3083,
	3083, 3084, 3085, 3087, 3088, 3086, 1757, 3089,
	3089, 3090, 3091, 3093, 3094, 3092, 1757, 3095,
	3095, 3096, 3097, 3098, 3100, 3101, 3099, 3099,
	3099, 2360, 3102, 3102, 3103, 3104, 3105, 3106,
	2360, 3108, 3108, 3109, 3110, 3112, 3113, 3111,
	3111, 3111, 3107, 3114, 3114, 3114, 3107, 3116,
	3115, 3115, 3115, 3107, 3117, 3117, 3117, 3107,
	3119, 3118, 3118, 3118, 3107, 3121, 3120, 3120,
	3120, 3107, 3122, 3122, 3122, 3107, 3124, 3123,
	3123, 3123, 3107, 3125, 3125, 3125, 3125, 3126,
	3126, 3126, 3107, 3127, 3127, 3127, 3127, 71,
	3128, 3107, 3124, 3107, 3121, 3107, 3129, 3107,
	3119, 3107, 3112, 3113, 71, 3130, 3130, 3130,
	2360, 3102, 3102, 3103, 3104, 3105, 3106, 3131,
	3131, 3131, 2360, 3100, 3101, 71, 3087, 3088,
	71, 3075, 3076, 71, 3132, 1757, 3133, 3133,
	3134, 3135, 3137, 3138, 3136, 1757, 3139, 3139,
	3140, 3141, 3143, 3144, 3142, 1757, 3145, 3145,
	3146, 3147, 3149, 3150, 3148, 1757, 3151, 3151,
	3152, 3153, 3155, 3156, 3154, 1757, 3157, 3157,
	3158, 3159, 3161, 3162, 3160, 1757, 3163, 3163,
	3164, 3165, 3166, 3168, 3169, 3167, 3167, 3167,
	2360, 3170, 3170, 3170, 3170, 2360, 3171, 3171,
	3171, 2360, 3170, 3170, 3170, 3170, 3172, 3172,
	3172, 2360, 3168, 3169, 71, 3155, 3156, 71,
	3143, 3144, 71, 3173, 1757, 3174, 3174, 3175,
	3176, 3178, 3179, 3177, 1757, 3180, 3180, 3181,
	3182, 3184, 3185, 3183, 1757, 3186, 3186, 3187,
	3188, 3190, 3191, 3189, 1757, 3192, 3192, 3193,
	3194, 3196, 3197, 3195, 1757, 3198, 3198, 3199,
	3200, 3202, 3203, 3201, 1757, 3204, 3204, 3205,
	3206, 3208, 3209, 3207, 3207, 3207, 2360, 3210,
	3210, 3210, 2360, 3211, 3211, 3212, 3213, 3214,
	3215, 3216, 3216, 3217, 3218, 3207, 3207, 3207,
	2360, 3214, 3215, 2360, 3208, 3209, 71, 3196,
	3197, 71, 3184, 3185, 71, 3219, 1757, 3220,
	3220, 3221, 3222, 3224, 3225, 3223, 1757, 3226,
	3226, 3227, 3228, 3229, 3230, 3231, 3229, 1734,
	3232, 3233, 3232, 3232, 3232, 3233, 1734, 3230,
	3231, 71, 3234, 1757, 3235, 3235, 3236, 3237,
	3239, 3240, 3238, 1757, 3241, 3241, 3242, 3243,
	3245, 3246, 3244, 3244, 3244, 2360, 3247, 3247,
	3247, 2360, 3248, 3248, 3248, 2360, 3249, 3249,
	3249, 2360, 3251, 3250, 3252, 3252, 3252, 2360,
	3253, 3253, 3253, 2360, 3254, 3254, 3254, 2360,
	3255, 3255, 3255, 2360, 3257, 3251, 3257, 3257,
	3257, 3256, 3245, 3246, 71, 3258, 3258, 3258,
	2360, 3259, 3259, 3259, 2360, 3261, 3260, 3262,
	3262, 3262, 2360, 3263, 3263, 3263, 2360, 3264,
	3261, 3264, 3264, 3264, 3260, 3265, 3265, 3265,
	2360, 3266, 3266, 3266, 2360, 3267, 3260, 3268,
	3268, 3268, 2360, 3269, 3269, 3269, 2360, 3270,
	3267, 3270, 3270, 3270, 3260, 3271, 1757, 3272,
	3272, 3273, 3274, 3276, 3277, 3275, 1757, 3278,
	3278, 3279, 3280, 3282, 3283, 3281, 1757, 3284,
	3284, 3285, 3286, 3288, 3289, 3287, 1757, 3291,
	3291, 3292, 3293, 3294, 3295, 3290, 3290, 3290,
	71, 3296, 3296, 3296, 3296, 71, 3294, 3295,
	71, 3282, 3283, 71, 3297, 1757, 3298, 3298,
	3299, 3300, 3302, 3303, 3301, 1757, 3305, 3305,
	3306, 3307, 3308, 3309, 3304, 3304, 3304, 71,
	3310, 3310, 3311, 3312, 3313, 3314, 71, 3316,
	3316, 3317, 3318, 3319, 3320, 3315, 3315, 3315,
	71, 3321, 3321, 3321, 3321, 71, 3319, 3320,
	71, 3308, 3309, 71, 3323, 3323, 3324, 3325,
	3326, 3327, 3327, 3327, 20, 21, 3328, 3329,
	3327, 3327, 3327, 3322, 3330, 3330, 3331, 3332,
	3333, 3334, 69, 3335, 3334, 20, 21, 3336,
	3337, 118, 119, 3338, 3339, 69, 69, 3334,
	69, 3334, 69, 3334, 69, 739, 3341, 3341,
	3324, 3342, 3343, 3327, 3344, 3345, 3346, 3347,
	3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355,
	3356, 3357, 3358, 3327, 3327, 3344, 3345, 3346,
	3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354,
	3355, 3356, 3357, 3358, 20, 21, 3359, 3360,
	3327, 3327, 3327, 3340, 3341, 3341, 3324, 3342,
	3343, 3327, 3363, 3364, 3365, 3366, 3367, 3368,
	3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376,
	3377, 3327, 3327, 3363, 3364, 3365, 3366, 3367,
	3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375,
	3376, 3377, 20, 21, 3359, 3360, 3327, 3362,
	3327, 3327, 3361, 3379, 3379, 3380, 3381, 3382,
	3383, 3383, 3383, 3384, 3385, 3386, 3387, 3383,
	3383, 3383, 3378, 3323, 3323, 3324, 3388, 3389,
	3327, 3363, 3364, 3365, 3366, 3367, 3368, 3369,
	3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377,
	3327, 3327, 3363, 3364, 3365, 3366, 3367, 3368,
	3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376,
	3377, 20, 21, 3390, 3329, 3327, 3362, 3327,
	3327, 3361, 3391, 3391, 3324, 3392, 3393, 3327,
	3327, 3327, 83, 84, 3394, 3395, 3327, 3327,
	3327, 739, 3396, 3396, 3331, 3397, 3398, 3334,
	69, 3335, 3334, 83, 84, 3394, 3399, 92,
	93, 3394, 3400, 69, 69, 3334, 69, 3334,
	69, 3334, 69, 739, 3330, 3330, 3331, 3332,
	3333, 3334, 69, 3403, 3404, 3405, 3406, 3407,
	3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415,
	3416, 3417, 3335, 3334, 3403, 3404, 3405, 3406,
	3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414,
	3415, 3416, 3417, 20, 21, 3336, 3337, 118,
	119, 3338, 3339, 69, 69, 3334, 3402, 69,
	3334, 69, 3334, 69, 3401, 3396, 3396, 3331,
	3397, 3398, 3334, 69, 3403, 3404, 3405, 3406,
	3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414,
	3415, 3416, 3417, 3335, 3334, 3403, 3404, 3405,
	3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413,
	3414, 3415, 3416, 3417, 83, 84, 3418, 3399,
	92, 93, 3418, 3400, 69, 69, 3334, 3402,
	69, 3334, 69, 3334, 69, 3401, 661, 661,
	661, 852, 849, 852, 851, 852, 849, 853,
	849, 848, 661, 661, 661, 985, 985, 986,
	987, 957, 958, 959, 957, 988, 989, 957,
	957, 957, 963, 661, 996, 996, 997, 998,
	991, 999, 1000, 1001, 1001, 1002, 1003, 991,
	991, 991, 990, 999, 1000, 990, 661, 1013,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1033, 1034, 1035, 1004,
	1031, 1032, 1004, 661, 1517, 1517, 1518, 1519,
	1520, 1521, 1522, 1522, 1523, 1524, 1513, 1513,
	1513, 1509, 1520, 1521, 1509, 1539, 1539, 1540,
	1541, 1543, 1544, 1542, 1542, 1542, 1509, 1495,
	1546, 1546, 1547, 1548, 1549, 1550, 1551, 1551,
	1552, 1553, 1542, 1542, 1542, 1509, 1549, 1550,
	1509, 1543, 1544, 1495, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 1934, 1934, 1935,
	1936, 1937, 1938, 1939, 1939, 1940, 1941, 1933,
	1933, 1933, 1924, 1937, 1938, 1924, 661, 661,
	2105, 2105, 2106, 2107, 2108, 2109, 2054, 2054,
	2110, 2111, 1945, 2108, 2109, 1945, 2087, 2087,
	2088, 2089, 2091, 2092, 2054, 2054, 2093, 2094,
	2090, 1945, 2091, 2092, 1945, 2068, 2068, 2069,
	2070, 2072, 2073, 2054, 2054, 2074, 2075, 2071,
	1945, 2072, 2073, 1945, 2048, 2048, 2049, 2050,
	2052, 2053, 2054, 2054, 2055, 2056, 2051, 1945,
	2052, 2053, 1945, 661, 661, 661, 661, 2303,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2311, 2312, 2313, 2302, 2309, 2310, 71,
	661, 2368, 2368, 2369, 2370, 2371, 2372, 2373,
	2373, 2374, 2375, 2364, 2364, 2364, 2360, 2371,
	2372, 2360, 661, 2402, 2402, 2403, 2404, 2405,
	2406, 2407, 2407, 2408, 2409, 2398, 2398, 2398,
	2360, 2405, 2406, 2360, 661, 2450, 2450, 2451,
	2452, 2456, 2456, 2456, 2456, 2461, 2462, 2456,
	2456, 2463, 2464, 2469, 2461, 2462, 2469, 2447,
	2447, 2448, 2449, 2470, 2457, 2458, 2470, 2470,
	2470, 2469, 2457, 2458, 2469, 2470, 2447, 2447,
	2448, 2449, 2450, 2450, 2451, 2452, 2453, 2453,
	2454, 2455, 2456, 2456, 2456, 2456, 2457, 2458,
	2456, 2456, 2459, 2460, 2461, 2462, 2456, 2456,
	2463, 2464, 2465, 2466, 2456, 2456, 2467, 2468,
	2470, 2470, 2470, 2469, 2457, 2461, 2465, 2458,
	2462, 2466, 2469, 661, 661, 661, 661, 661,
	661, 661, 3211, 3211, 3212, 3213, 3214, 3215,
	3216, 3216, 3217, 3218, 3207, 3207, 3207, 2360,
	3214, 3215, 2360, 661, 661, 661, 661, 661,
	661, 0
};

static const short _zone_scanner_trans_targs[] = {
	0, 1, 1, 1, 2, 4, 16, 34,
	48, 55, 141, 71, 75, 83, 89, 105,
	108, 115, 126, 136, 1120, 149, 1125, 257,
	0, 3, 3, 3, 2, 164, 164, 164,
	164, 164, 3, 167, 0, 3, 3, 3,
	4, 16, 34, 48, 55, 60, 71, 75,
	83, 89, 105, 108, 115, 126, 136, 3,
	167, 0, 5, 5, 5, 227, 230, 234,
	5, 10, 6, 11, 19, 6, 5, 0,
	5, 5, 9, 5, 10, 11, 19, 0,
	7, 7, 7, 1120, 8, 0, 6, 6,
	11, 11, 11, 12, 1126, 174, 240, 1121,
	13, 0, 13, 13, 14, 170, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 1128, 236, 1126, 237,
	1129, 239, 0, 15, 15, 15, 1122, 260,
	0, 15, 15, 15, 1122, 260, 17, 20,
	27, 30, 18, 5, 5, 5, 5, 10,
	6, 11, 19, 19, 19, 19, 21, 26,
	22, 23, 24, 25, 5, 5, 5, 5,
	10, 6, 11, 19, 5, 5, 5, 5,
	10, 6, 11, 19, 28, 29, 5, 5,
	5, 5, 10, 6, 11, 19, 31, 32,
	33, 5, 5, 5, 5, 10, 6, 11,
	19, 35, 39, 47, 36, 37, 38, 5,
	5, 5, 5, 10, 6, 11, 19, 40,
	43, 41, 42, 5, 5, 5, 5, 10,
	6, 11, 19, 44, 45, 46, 5, 5,
	5, 5, 10, 6, 11, 19, 5, 5,
	5, 5, 10, 6, 11, 19, 49, 50,
	51, 53, 52, 5, 5, 5, 5, 10,
	6, 11, 19, 54, 5, 5, 5, 5,
	10, 6, 11, 19, 56, 57, 58, 59,
	5, 5, 5, 5, 10, 6, 11, 19,
	61, 64, 62, 62, 62, 62, 139, 62,
	62, 62, 4, 16, 34, 48, 55, 63,
	71, 75, 83, 89, 105, 108, 115, 126,
	136, 62, 139, 65, 66, 67, 68, 69,
	70, 5, 5, 5, 5, 10, 6, 11,
	19, 72, 74, 73, 5, 5, 5, 5,
	10, 6, 11, 19, 5, 5, 5, 5,
	10, 6, 11, 19, 76, 78, 80, 82,
	77, 5, 5, 5, 5, 10, 6, 11,
	19, 79, 5, 5, 5, 5, 10, 6,
	11, 19, 81, 5, 5, 5, 5, 10,
	6, 11, 19, 5, 5, 5, 5, 10,
	6, 11, 19, 84, 88, 85, 86, 87,
	5, 5, 5, 5, 10, 6, 11, 19,
	5, 5, 5, 5, 10, 6, 11, 19,
	90, 94, 96, 91, 92, 93, 5, 5,
	5, 5, 10, 6, 11, 19, 95, 5,
	5, 5, 5, 10, 6, 11, 19, 5,
	5, 5, 97, 5, 10, 6, 11, 19,
	98, 5, 5, 5, 99, 5, 10, 6,
	11, 19, 5, 5, 5, 100, 5, 10,
	6, 11, 19, 101, 102, 103, 104, 5,
	5, 5, 5, 10, 6, 11, 19, 106,
	107, 5, 5, 5, 5, 10, 6, 11,
	19, 109, 110, 114, 5, 5, 5, 5,
	10, 6, 11, 19, 111, 112, 113, 5,
	5, 5, 5, 10, 6, 11, 19, 5,
	5, 5, 5, 10, 6, 11, 19, 116,
	118, 120, 122, 117, 5, 5, 5, 5,
	10, 6, 11, 19, 119, 5, 5, 5,
	5, 10, 6, 11, 19, 121, 5, 5,
	5, 5, 10, 6, 11, 19, 123, 124,
	125, 5, 5, 5, 5, 10, 6, 11,
	19, 127, 130, 132, 128, 129, 5, 5,
	5, 5, 10, 6, 11, 19, 131, 5,
	5, 5, 5, 10, 6, 11, 19, 133,
	134, 0, 135, 0, 5, 5, 5, 135,
	5, 10, 6, 11, 19, 137, 138, 5,
	5, 5, 5, 10, 6, 11, 19, 140,
	140, 140, 1123, 258, 142, 143, 143, 143,
	143, 148, 143, 143, 143, 144, 4, 16,
	34, 48, 55, 63, 71, 75, 83, 89,
	105, 108, 115, 126, 136, 143, 148, 62,
	62, 62, 144, 145, 145, 145, 145, 145,
	62, 139, 146, 146, 147, 147, 147, 147,
	147, 62, 62, 62, 146, 62, 139, 0,
	151, 193, 199, 152, 153, 154, 155, 156,
	157, 1124, 0, 159, 159, 159, 159, 160,
	159, 159, 159, 159, 160, 0, 0, 162,
	162, 162, 162, 163, 162, 162, 162, 162,
	163, 165, 165, 166, 166, 166, 166, 166,
	3, 3, 3, 165, 3, 167, 0, 169,
	169, 169, 169, 241, 176, 242, 169, 169,
	169, 169, 241, 176, 242, 0, 171, 171,
	171, 1121, 12, 1126, 174, 1127, 240, 171,
	171, 171, 1127, 172, 172, 172, 1125, 173,
	175, 175, 175, 176, 176, 176, 191, 226,
	1128, 0, 194, 195, 196, 197, 198, 1124,
	200, 201, 1124, 0, 172, 172, 172, 1125,
	173, 0, 204, 204, 204, 1123, 205, 204,
	204, 204, 1123, 205, 0, 207, 207, 207,
	1128, 191, 1129, 226, 207, 207, 207, 1129,
	223, 0, 223, 223, 223, 224, 225, 225,
	225, 226, 226, 226, 228, 229, 5, 5,
	5, 5, 10, 6, 11, 19, 231, 232,
	233, 5, 5, 5, 5, 10, 6, 11,
	19, 235, 5, 5, 5, 5, 10, 6,
	11, 19, 238, 238, 238, 239, 239, 239,
	240, 240, 240, 242, 242, 242, 0, 262,
	1130, 262, 1130, 0, 264, 270, 271, 266,
	1131, 264, 265, 266, 1131, 264, 266, 267,
	0, 268, 269, 1131, 264, 265, 266, 1131,
	0, 273, 278, 274, 1132, 1133, 275, 0,
	276, 277, 1132, 273, 1133, 274, 278, 279,
	280, 0, 281, 282, 283, 278, 279, 280,
	0, 285, 285, 285, 285, 292, 0, 286,
	0, 287, 287, 287, 286, 289, 289, 289,
	289, 289, 1134, 288, 0, 290, 0, 290,
	291, 291, 291, 291, 291, 287, 287, 287,
	290, 1134, 288, 0, 294, 294, 294, 294,
	304, 295, 303, 299, 295, 296, 299, 0,
	297, 297, 297, 295, 299, 1135, 298, 297,
	297, 297, 1135, 298, 300, 0, 301, 302,
	295, 296, 299, 306, 306, 306, 306, 321,
	307, 0, 0, 308, 308, 308, 1136, 312,
	318, 0, 308, 308, 308, 309, 317, 313,
	1136, 312, 318, 0, 309, 310, 313, 311,
	311, 311, 309, 313, 1136, 312, 311, 311,
	311, 314, 0, 315, 316, 309, 310, 313,
	1137, 319, 319, 319, 319, 320, 0, 323,
	324, 325, 328, 326, 326, 326, 326, 326,
	327, 1138, 1139, 1140, 0, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 330, 330, 330,
	331, 336, 353, 367, 374, 379, 387, 391,
	399, 405, 421, 424, 431, 442, 452, 330,
	335, 1141, 1142, 1143, 330, 330, 330, 332,
	455, 459, 330, 335, 1141, 1142, 1143, 333,
	334, 330, 330, 330, 330, 335, 1141, 1142,
	1143, 337, 339, 346, 349, 338, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 340, 345,
	341, 342, 343, 344, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 347, 348, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 350, 351,
	352, 330, 330, 330, 330, 335, 1141, 1142,
	1143, 354, 358, 366, 355, 356, 357, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 359,
	362, 360, 361, 330, 330, 330, 330, 335,
	1141, 1142, 1143, 363, 364, 365, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 368, 369,
	370, 372, 371, 330, 330, 330, 330, 335,
	1141, 1142, 1143, 373, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 375, 376, 377, 378,
	330, 330, 330, 330, 335, 1141, 1142, 1143,
	380, 381, 382, 383, 384, 385, 386, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 388,
	390, 389, 330, 330, 330, 330, 335, 1141,
	1142, 1143, 330, 330, 330, 330, 335, 1141,
	1142, 1143, 392, 394, 396, 398, 393, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 395,
	330, 330, 330, 330, 335, 1141, 1142, 1143,
	397, 330, 330, 330, 330, 335, 1141, 1142,
	1143, 330, 330, 330, 330, 335, 1141, 1142,
	1143, 400, 404, 401, 402, 403, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 406, 410,
	412, 407, 408, 409, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 411, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 330, 330, 330,
	413, 330, 335, 1141, 1142, 1143, 414, 330,
	330, 330, 415, 330, 335, 1141, 1142, 1143,
	330, 330, 330, 416, 330, 335, 1141, 1142,
	1143, 417, 418, 419, 420, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 422, 423, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 425,
	426, 430, 330, 330, 330, 330, 335, 1141,
	1142, 1143, 427, 428, 429, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 432, 434, 436,
	438, 433, 330, 330, 330, 330, 335, 1141,
	1142, 1143, 435, 330, 330, 330, 330, 335,
	1141, 1142, 1143, 437, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 439, 440, 441, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 443,
	446, 448, 444, 445, 330, 330, 330, 330,
	335, 1141, 1142, 1143, 447, 330, 330, 330,
	330, 335, 1141, 1142, 1143, 449, 450, 451,
	330, 330, 330, 451, 330, 335, 1141, 1142,
	1143, 453, 454, 330, 330, 330, 330, 335,
	1141, 1142, 1143, 456, 457, 458, 330, 330,
	330, 330, 335, 1141, 1142, 1143, 460, 330,
	330, 330, 330, 335, 1141, 1142, 1143, 0,
	462, 462, 462, 462, 469, 0, 463, 464,
	464, 464, 463, 464, 468, 0, 464, 464,
	464, 465, 464, 468, 466, 466, 466, 466,
	466, 467, 1144, 1145, 1146, 471, 471, 471,
	471, 479, 472, 478, 1147, 1147, 1147, 478,
	1148, 1147, 1151, 473, 473, 473, 474, 473,
	477, 475, 475, 475, 475, 475, 476, 1148,
	1149, 1150, 473, 473, 473, 473, 477, 0,
	481, 482, 497, 536, 544, 557, 1152, 481,
	483, 484, 1152, 485, 1152, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496,
	1152, 498, 527, 499, 505, 500, 501, 502,
	503, 504, 1152, 506, 507, 508, 509, 518,
	510, 511, 512, 513, 514, 515, 516, 517,
	1152, 519, 520, 521, 522, 523, 524, 525,
	526, 1152, 528, 533, 529, 530, 531, 532,
	1152, 534, 535, 1152, 537, 538, 539, 540,
	541, 542, 543, 1152, 545, 546, 547, 548,
	549, 550, 551, 554, 552, 553, 1152, 555,
	556, 1152, 558, 559, 560, 563, 561, 562,
	1152, 564, 565, 566, 578, 581, 1152, 567,
	568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 1152, 579, 580, 1152, 582, 583,
	1152, 0, 585, 586, 592, 609, 612, 618,
	622, 1153, 585, 587, 588, 589, 590, 591,
	1153, 593, 599, 605, 594, 595, 596, 597,
	598, 1153, 600, 602, 601, 1153, 603, 604,
	1153, 606, 607, 608, 1153, 610, 611, 1153,
	613, 615, 614, 1153, 616, 617, 1153, 619,
	620, 621, 1153, 623, 624, 1153, 0, 626,
	1154, 626, 628, 1155, 630, 631, 631, 631,
	631, 660, 631, 631, 631, 632, 631, 660,
	633, 633, 633, 633, 659, 0, 633, 633,
	633, 634, 633, 659, 635, 635, 635, 634,
	635, 658, 635, 635, 635, 636, 635, 658,
	0, 637, 637, 637, 636, 655, 655, 655,
	655, 655, 637, 654, 637, 637, 637, 638,
	637, 654, 639, 639, 639, 638, 651, 651,
	651, 651, 651, 639, 650, 639, 639, 639,
	640, 639, 650, 641, 641, 641, 640, 647,
	647, 647, 647, 647, 641, 646, 641, 641,
	641, 642, 641, 646, 1156, 642, 643, 643,
	643, 643, 643, 644, 644, 645, 645, 645,
	645, 645, 1156, 644, 648, 648, 649, 649,
	649, 649, 649, 641, 641, 641, 648, 641,
	646, 652, 652, 653, 653, 653, 653, 653,
	639, 639, 639, 652, 639, 650, 656, 656,
	657, 657, 657, 657, 657, 637, 637, 637,
	656, 637, 654, 662, 663, 663, 663, 663,
	665, 664, 663, 663, 663, 663, 665, 1157,
	667, 668, 668, 668, 668, 670, 668, 668,
	668, 669, 668, 670, 1158, 672, 673, 673,
	673, 672, 673, 675, 673, 673, 673, 674,
	673, 675, 1159, 677, 0, 678, 678, 678,
	678, 679, 1160, 1161, 1162, 677, 678, 678,
	678, 678, 679, 1160, 1161, 1162, 681, 1163,
	681, 0, 683, 684, 684, 684, 683, 684,
	736, 684, 684, 684, 685, 689, 731, 684,
	736, 686, 686, 686, 685, 686, 735, 686,
	686, 686, 687, 686, 735, 688, 688, 688,
	733, 687, 688, 732, 688, 688, 688, 688,
	732, 690, 690, 690, 690, 730, 691, 692,
	692, 692, 691, 692, 729, 692, 692, 692,
	693, 697, 724, 692, 729, 694, 694, 694,
	693, 694, 728, 694, 694, 694, 695, 694,
	728, 696, 696, 696, 726, 695, 696, 725,
	696, 696, 696, 696, 725, 698, 698, 698,
	698, 723, 699, 700, 700, 701, 701, 701,
	720, 700, 722, 701, 719, 1164, 1171, 1172,
	701, 701, 701, 702, 701, 719, 1164, 1171,
	1172, 703, 703, 703, 716, 702, 718, 703,
	715, 1164, 1169, 1170, 703, 703, 703, 704,
	703, 715, 1169, 1170, 705, 705, 705, 712,
	704, 714, 705, 711, 1164, 1167, 1168, 705,
	705, 705, 706, 705, 711, 1167, 1168, 707,
	707, 707, 709, 706, 707, 708, 1164, 1165,
	1166, 707, 707, 707, 707, 708, 1165, 1166,
	707, 707, 707, 710, 707, 708, 1164, 1165,
	1166, 710, 705, 705, 705, 713, 714, 705,
	711, 1164, 1167, 1168, 713, 703, 703, 703,
	717, 718, 703, 715, 1164, 1169, 1170, 717,
	701, 701, 701, 721, 722, 701, 719, 1164,
	1171, 1172, 721, 698, 698, 698, 698, 723,
	696, 696, 696, 727, 696, 725, 727, 690,
	690, 690, 690, 730, 688, 688, 688, 734,
	688, 732, 734, 738, 739, 739, 739, 738,
	739, 747, 739, 739, 739, 740, 739, 747,
	741, 741, 741, 740, 741, 746, 741, 741,
	741, 742, 741, 746, 743, 743, 743, 742,
	743, 745, 743, 743, 743, 744, 743, 745,
	1173, 749, 750, 750, 750, 749, 750, 764,
	750, 750, 750, 751, 750, 764, 752, 752,
	752, 751, 752, 763, 753, 752, 752, 752,
	752, 763, 754, 754, 754, 754, 762, 755,
	754, 754, 754, 754, 762, 756, 756, 756,
	756, 761, 757, 756, 756, 756, 756, 761,
	758, 758, 758, 758, 760, 758, 758, 758,
	759, 758, 760, 1174, 766, 767, 767, 767,
	767, 775, 768, 769, 769, 769, 768, 769,
	774, 769, 769, 769, 770, 769, 774, 771,
	771, 771, 771, 773, 772, 1175, 0, 776,
	777, 776, 776, 778, 784, 776, 783, 1176,
	1177, 1178, 778, 784, 779, 0, 780, 780,
	781, 782, 776, 776, 776, 782, 776, 783,
	1176, 1177, 1178, 785, 786, 786, 781, 788,
	789, 789, 789, 788, 789, 799, 789, 789,
	789, 790, 789, 799, 791, 791, 791, 791,
	798, 792, 793, 793, 793, 792, 793, 797,
	0, 793, 793, 793, 794, 793, 797, 795,
	795, 795, 795, 795, 796, 1179, 1180, 1181,
	801, 802, 802, 802, 801, 802, 809, 802,
	802, 802, 803, 802, 809, 804, 804, 804,
	803, 804, 808, 804, 804, 804, 805, 804,
	808, 806, 806, 806, 806, 806, 807, 1182,
	1183, 1184, 811, 812, 812, 812, 811, 812,
	848, 0, 812, 812, 812, 813, 827, 834,
	841, 812, 848, 814, 814, 814, 814, 826,
	0, 815, 816, 816, 816, 815, 816, 825,
	816, 816, 816, 817, 816, 825, 0, 818,
	818, 818, 821, 821, 821, 823, 823, 823,
	1185, 818, 820, 1188, 1189, 821, 822, 1186,
	1187, 823, 824, 1190, 1191, 0, 819, 828,
	828, 828, 828, 833, 829, 830, 830, 830,
	829, 830, 832, 0, 830, 830, 830, 831,
	830, 832, 0, 831, 818, 818, 818, 821,
	821, 821, 823, 823, 823, 1185, 818, 820,
	1188, 1189, 821, 822, 1186, 1187, 823, 824,
	1190, 1191, 835, 835, 835, 835, 840, 836,
	837, 837, 837, 836, 837, 839, 837, 837,
	837, 838, 837, 839, 838, 818, 818, 818,
	821, 821, 821, 823, 823, 823, 1185, 818,
	820, 1188, 1189, 821, 822, 1186, 1187, 823,
	824, 1190, 1191, 842, 842, 842, 842, 847,
	843, 844, 844, 844, 843, 844, 846, 844,
	844, 844, 845, 844, 846, 818, 818, 818,
	821, 821, 821, 823, 823, 823, 1185, 818,
	820, 1188, 1189, 821, 822, 1186, 1187, 823,
	824, 1190, 1191, 0, 850, 884, 901, 915,
	922, 927, 935, 939, 947, 953, 969, 972,
	979, 990, 1000, 851, 851, 851, 875, 878,
	882, 851, 874, 851, 851, 851, 852, 851,
	874, 853, 853, 853, 853, 873, 854, 855,
	855, 855, 854, 855, 872, 855, 855, 855,
	856, 855, 872, 857, 857, 857, 856, 857,
	871, 0, 857, 857, 857, 858, 857, 871,
	859, 859, 859, 858, 859, 870, 859, 859,
	859, 860, 859, 870, 861, 861, 861, 860,
	861, 869, 861, 861, 861, 862, 861, 869,
	863, 863, 863, 862, 863, 868, 863, 863,
	863, 864, 863, 868, 865, 865, 865, 865,
	867, 865, 865, 865, 866, 865, 867, 1192,
	876, 877, 851, 851, 851, 851, 874, 879,
	880, 881, 851, 851, 851, 851, 874, 883,
	851, 851, 851, 851, 874, 885, 887, 894,
	897, 886, 851, 851, 851, 851, 874, 888,
	893, 889, 890, 891, 892, 851, 851, 851,
	851, 874, 851, 851, 851, 851, 874, 895,
	896, 851, 851, 851, 851, 874, 898, 899,
	900, 851, 851, 851, 851, 874, 902, 906,
	914, 903, 904, 905, 851, 851, 851, 851,
	874, 907, 910, 908, 909, 851, 851, 851,
	851, 874, 911, 912, 913, 851, 851, 851,
	851, 874, 851, 851, 851, 851, 874, 916,
	917, 918, 920, 919, 851, 851, 851, 851,
	874, 921, 851, 851, 851, 851, 874, 923,
	924, 925, 926, 851, 851, 851, 851, 874,
	928, 929, 930, 931, 932, 933, 934, 851,
	851, 851, 851, 874, 936, 938, 937, 851,
	851, 851, 851, 874, 851, 851, 851, 851,
	874, 940, 942, 944, 946, 941, 851, 851,
	851, 851, 874, 943, 851, 851, 851, 851,
	874, 945, 851, 851, 851, 851, 874, 851,
	851, 851, 851, 874, 948, 952, 949, 950,
	951, 851, 851, 851, 851, 874, 851, 851,
	851, 851, 874, 954, 958, 960, 955, 956,
	957, 851, 851, 851, 851, 874, 959, 851,
	851, 851, 851, 874, 851, 851, 851, 961,
	851, 874, 962, 851, 851, 851, 963, 851,
	874, 851, 851, 851, 964, 851, 874, 965,
	966, 967, 968, 851, 851, 851, 851, 874,
	970, 971, 851, 851, 851, 851, 874, 973,
	974, 978, 851, 851, 851, 851, 874, 975,
	976, 977, 851, 851, 851, 851, 874, 851,
	851, 851, 851, 874, 980, 982, 984, 986,
	981, 851, 851, 851, 851, 874, 983, 851,
	851, 851, 851, 874, 985, 851, 851, 851,
	851, 874, 987, 988, 989, 851, 851, 851,
	851, 874, 991, 994, 996, 992, 993, 851,
	851, 851, 851, 874, 995, 851, 851, 851,
	851, 874, 997, 998, 0, 999, 851, 851,
	851, 999, 851, 874, 1001, 1002, 851, 851,
	851, 851, 874, 1004, 1005, 1193, 1007, 1008,
	1008, 1008, 1007, 1008, 1016, 1008, 1008, 1008,
	1009, 1008, 1016, 1010, 1010, 1010, 1009, 1010,
	1015, 1010, 1010, 1010, 1011, 1010, 1015, 1012,
	1012, 1012, 1012, 1014, 1013, 1194, 1018, 1195,
	1020, 1021, 1021, 1021, 1020, 1021, 1047, 1021,
	1021, 1021, 1022, 1021, 1047, 1023, 1023, 1023,
	1022, 1023, 1046, 1023, 1023, 1023, 1024, 1023,
	1046, 1025, 1025, 1025, 1024, 1025, 1045, 1025,
	1025, 1025, 1026, 1043, 1025, 1045, 1027, 1027,
	1027, 1027, 1042, 0, 1027, 1027, 1027, 1028,
	1027, 1042, 1029, 1030, 1040, 1031, 1032, 1039,
	1033, 1037, 1034, 1035, 1035, 1036, 1028, 1196,
	1038, 1041, 1044, 1043, 1049, 1050, 1050, 1050,
	1049, 1050, 1060, 1050, 1050, 1050, 1051, 1050,
	1060, 1052, 1052, 1052, 1051, 1052, 1059, 1052,
	1052, 1052, 1053, 1052, 1059, 1054, 1054, 1054,
	1053, 1054, 1058, 1054, 1054, 1054, 1055, 1056,
	1054, 1058, 1197, 1057, 1056, 1062, 1063, 1063,
	1063, 1062, 1063, 1073, 1063, 1063, 1063, 1064,
	1063, 1073, 1065, 1065, 1065, 1064, 1065, 1072,
	1065, 1065, 1065, 1066, 1065, 1072, 1067, 1067,
	1067, 1066, 1067, 1071, 1067, 1067, 1067, 1068,
	1067, 1071, 1069, 1069, 1069, 1069, 1069, 1070,
	1198, 1199, 1200, 1075, 1076, 1076, 1076, 1075,
	1076, 1078, 1076, 1076, 1076, 1077, 1076, 1078,
	1201, 1077, 1080, 1081, 1081, 1081, 1080, 1081,
	1091, 1081, 1081, 1081, 1082, 1081, 1091, 1083,
	1084, 1085, 0, 1086, 1087, 1088, 1089, 1090,
	0, 1202, 1093, 1094, 0, 1095, 1096, 1097,
	1203, 1099, 1100, 1101, 1102, 1103, 1204, 1105,
	1106, 1106, 1106, 1105, 1106, 1111, 1106, 1106,
	1106, 1107, 1106, 1111, 1108, 1108, 1108, 1107,
	1108, 1110, 1109, 1108, 1108, 1108, 1108, 1110,
	1205, 1113, 1114, 1114, 1114, 1113, 1114, 1119,
	1115, 1114, 1114, 1114, 1114, 1119, 1116, 1116,
	1116, 1116, 1118, 1117, 1116, 1116, 1116, 1116,
	1118, 1206, 0, 1, 150, 1, 1, 158,
	1125, 257, 13, 192, 13, 13, 202, 222,
	1128, 236, 1129, 239, 0, 140, 140, 140,
	168, 243, 244, 245, 246, 259, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 1123,
	258, 0, 161, 168, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 0, 1, 150, 1, 1, 158,
	1120, 149, 1125, 257, 1, 1, 1125, 172,
	172, 172, 1125, 173, 176, 176, 176, 191,
	226, 0, 203, 206, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 1125
};

static const short _zone_scanner_trans_actions[] = {
	1924, 0, 5, 7, 510, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 3, 0, 3, 0,
	2052, 103, 681, 684, 41, 55, 53, 51,
	0, 57, 678, 103, 361, 0, 5, 7,
	97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 3,
	0, 1668, 1671, 2436, 2440, 0, 0, 0,
	2432, 1671, 2444, 3598, 2444, 357, 0, 355,
	5, 7, 0, 3, 0, 372, 357, 1653,
	0, 5, 7, 1797, 0, 9, 1662, 359,
	0, 5, 7, 0, 2424, 357, 357, 375,
	0, 3188, 5, 7, 1912, 2140, 2140, 2140,
	2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
	2140, 2140, 2140, 2140, 3, 0, 1656, 357,
	372, 357, 3891, 103, 681, 684, 2144, 103,
	1665, 0, 5, 7, 375, 0, 0, 0,
	0, 0, 0, 1794, 3092, 3096, 3088, 1794,
	3100, 3808, 3100, 0, 5, 7, 0, 0,
	0, 0, 0, 0, 1767, 2948, 2952, 2944,
	1767, 2956, 3763, 2956, 1764, 2932, 2936, 2928,
	1764, 2940, 3758, 2940, 0, 0, 1725, 2724,
	2728, 2720, 1725, 2732, 3693, 2732, 0, 0,
	0, 1677, 2468, 2472, 2464, 1677, 2476, 3613,
	2476, 0, 0, 0, 0, 0, 0, 1752,
	2868, 2872, 2864, 1752, 2876, 3738, 2876, 0,
	0, 0, 0, 1728, 2740, 2744, 2736, 1728,
	2748, 3698, 2748, 0, 0, 0, 1749, 2852,
	2856, 2848, 1749, 2860, 3733, 2860, 1734, 2772,
	2776, 2768, 1734, 2780, 3708, 2780, 0, 0,
	0, 0, 0, 1785, 3044, 3048, 3040, 1785,
	3052, 3793, 3052, 0, 1788, 3060, 3064, 3056,
	1788, 3068, 3798, 3068, 0, 0, 0, 0,
	1686, 2516, 2520, 2512, 1686, 2524, 3628, 2524,
	0, 0, 101, 672, 675, 669, 101, 0,
	5, 7, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 0, 0, 0, 0, 0, 0,
	0, 1740, 2804, 2808, 2800, 1740, 2812, 3718,
	2812, 0, 0, 0, 1707, 2628, 2632, 2624,
	1707, 2636, 3663, 2636, 1722, 2708, 2712, 2704,
	1722, 2716, 3688, 2716, 0, 0, 0, 0,
	0, 1776, 2996, 3000, 2992, 1776, 3004, 3778,
	3004, 0, 1779, 3012, 3016, 3008, 1779, 3020,
	3783, 3020, 0, 1713, 2660, 2664, 2656, 1713,
	2668, 3673, 2668, 1782, 3028, 3032, 3024, 1782,
	3036, 3788, 3036, 0, 0, 0, 0, 0,
	1689, 2532, 2536, 2528, 1689, 2540, 3633, 2540,
	1692, 2548, 2552, 2544, 1692, 2556, 3638, 2556,
	0, 0, 0, 0, 0, 0, 1719, 2692,
	2696, 2688, 1719, 2700, 3683, 2700, 0, 1773,
	2980, 2984, 2976, 1773, 2988, 3773, 2988, 1674,
	2452, 2456, 0, 2448, 1674, 2460, 3608, 2460,
	0, 1746, 2836, 2840, 0, 2832, 1746, 2844,
	3728, 2844, 1755, 2884, 2888, 0, 2880, 1755,
	2892, 3743, 2892, 0, 0, 0, 0, 1758,
	2900, 2904, 2896, 1758, 2908, 3748, 2908, 0,
	0, 1683, 2500, 2504, 2496, 1683, 2508, 3623,
	2508, 0, 0, 0, 1698, 2580, 2584, 2576,
	1698, 2588, 3648, 2588, 0, 0, 0, 1743,
	2820, 2824, 2816, 1743, 2828, 3723, 2828, 1704,
	2612, 2616, 2608, 1704, 2620, 3658, 2620, 0,
	0, 0, 0, 0, 1680, 2484, 2488, 2480,
	1680, 2492, 3618, 2492, 0, 1770, 2964, 2968,
	2960, 1770, 2972, 3768, 2972, 0, 1716, 2676,
	2680, 2672, 1716, 2684, 3678, 2684, 0, 0,
	0, 1737, 2788, 2792, 2784, 1737, 2796, 3713,
	2796, 0, 0, 0, 0, 0, 1761, 2916,
	2920, 2912, 1761, 2924, 3753, 2924, 0, 1695,
	2564, 2568, 2560, 1695, 2572, 3643, 2572, 0,
	0, 522, 510, 1928, 579, 2032, 2036, 41,
	2028, 579, 2040, 3318, 2040, 0, 0, 1791,
	3076, 3080, 3072, 1791, 3084, 3803, 3084, 0,
	5, 7, 3, 0, 0, 101, 672, 675,
	669, 101, 0, 5, 7, 510, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 3, 0, 103,
	681, 684, 41, 55, 53, 51, 0, 57,
	678, 103, 2056, 41, 55, 53, 51, 0,
	57, 600, 2080, 2084, 3328, 2076, 600, 95,
	91, 91, 91, 0, 0, 0, 0, 0,
	0, 89, 37, 33, 462, 465, 459, 33,
	0, 5, 7, 3, 0, 0, 3173, 468,
	1876, 1880, 1868, 468, 0, 5, 7, 3,
	0, 2056, 41, 55, 53, 51, 0, 57,
	600, 2080, 2084, 3328, 2076, 600, 1904, 1888,
	3148, 3158, 3138, 1888, 3819, 3163, 0, 5,
	7, 3, 0, 372, 357, 2428, 1671, 2436,
	2440, 3603, 1671, 3915, 2444, 3909, 2444, 0,
	5, 7, 1836, 0, 5, 7, 375, 0,
	0, 5, 7, 0, 5, 7, 0, 357,
	375, 2416, 0, 0, 0, 0, 0, 81,
	0, 0, 77, 1896, 33, 462, 465, 1872,
	33, 3928, 468, 1876, 1880, 3128, 468, 0,
	5, 7, 375, 0, 3178, 1888, 3148, 3158,
	3825, 1888, 3921, 3163, 0, 5, 7, 1836,
	1884, 483, 3143, 3153, 3133, 1884, 0, 5,
	7, 0, 5, 7, 0, 0, 1710, 2644,
	2648, 2640, 1710, 2652, 3668, 2652, 0, 0,
	0, 1701, 2596, 2600, 2592, 1701, 2604, 3653,
	2604, 0, 1731, 2756, 2760, 2752, 1731, 2764,
	3703, 2764, 0, 5, 7, 0, 5, 7,
	0, 5, 7, 0, 5, 7, 486, 390,
	3108, 11, 1844, 27, 1860, 25, 0, 429,
	1848, 15, 17, 0, 414, 393, 13, 396,
	405, 19, 19, 3113, 399, 402, 21, 426,
	621, 65, 0, 0, 1, 618, 624, 2092,
	69, 69, 627, 630, 2088, 71, 65, 0,
	0, 67, 624, 69, 69, 630, 71, 71,
	75, 0, 5, 7, 3, 0, 513, 510,
	3323, 0, 5, 7, 41, 55, 53, 51,
	0, 57, 2100, 0, 384, 2056, 2044, 41,
	55, 53, 51, 0, 57, 59, 591, 594,
	3328, 3333, 59, 79, 0, 5, 7, 3,
	0, 3338, 639, 2104, 15, 17, 0, 387,
	23, 417, 420, 393, 13, 3118, 23, 0,
	5, 7, 2108, 0, 396, 408, 19, 19,
	399, 402, 21, 0, 5, 7, 3, 0,
	642, 85, 651, 83, 645, 648, 3343, 83,
	83, 657, 0, 5, 7, 3348, 654, 2112,
	2116, 0, 0, 87, 15, 17, 0, 423,
	1852, 1856, 393, 13, 3813, 423, 0, 5,
	7, 396, 411, 19, 19, 399, 402, 21,
	1816, 0, 5, 7, 3, 0, 127, 119,
	121, 123, 0, 125, 0, 5, 7, 3,
	0, 1, 366, 1, 327, 325, 1578, 1581,
	1575, 325, 2388, 3593, 2388, 0, 5, 7,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3,
	0, 1584, 1824, 1584, 241, 1200, 1203, 0,
	0, 0, 1197, 241, 2220, 3383, 2220, 0,
	0, 267, 1317, 1320, 1314, 267, 2272, 3448,
	2272, 0, 0, 0, 0, 0, 323, 1569,
	1572, 1566, 323, 2384, 3588, 2384, 0, 0,
	0, 0, 0, 0, 305, 1488, 1491, 1485,
	305, 2348, 3543, 2348, 303, 1479, 1482, 1476,
	303, 2344, 3538, 2344, 0, 0, 277, 1362,
	1365, 1359, 277, 2292, 3473, 2292, 0, 0,
	0, 245, 1218, 1221, 1215, 245, 2228, 3393,
	2228, 0, 0, 0, 0, 0, 0, 295,
	1443, 1446, 1440, 295, 2328, 3518, 2328, 0,
	0, 0, 0, 279, 1371, 1374, 1368, 279,
	2296, 3478, 2296, 0, 0, 0, 293, 1434,
	1437, 1431, 293, 2324, 3513, 2324, 283, 1389,
	1392, 1386, 283, 2304, 3488, 2304, 0, 0,
	0, 0, 0, 317, 1542, 1545, 1539, 317,
	2372, 3573, 2372, 0, 319, 1551, 1554, 1548,
	319, 2376, 3578, 2376, 0, 0, 0, 0,
	251, 1245, 1248, 1242, 251, 2240, 3408, 2240,
	0, 0, 0, 0, 0, 0, 0, 287,
	1407, 1410, 1404, 287, 2312, 3498, 2312, 0,
	0, 0, 265, 1308, 1311, 1305, 265, 2268,
	3443, 2268, 275, 1353, 1356, 1350, 275, 2288,
	3468, 2288, 0, 0, 0, 0, 0, 311,
	1515, 1518, 1512, 311, 2360, 3558, 2360, 0,
	313, 1524, 1527, 1521, 313, 2364, 3563, 2364,
	0, 269, 1326, 1329, 1323, 269, 2276, 3453,
	2276, 315, 1533, 1536, 1530, 315, 2368, 3568,
	2368, 0, 0, 0, 0, 0, 253, 1254,
	1257, 1251, 253, 2244, 3413, 2244, 255, 1263,
	1266, 1260, 255, 2248, 3418, 2248, 0, 0,
	0, 0, 0, 0, 273, 1344, 1347, 1341,
	273, 2284, 3463, 2284, 0, 309, 1506, 1509,
	1503, 309, 2356, 3553, 2356, 243, 1209, 1212,
	0, 1206, 243, 2224, 3388, 2224, 0, 291,
	1425, 1428, 0, 1422, 291, 2320, 3508, 2320,
	297, 1452, 1455, 0, 1449, 297, 2332, 3523,
	2332, 0, 0, 0, 0, 299, 1461, 1464,
	1458, 299, 2336, 3528, 2336, 0, 0, 249,
	1236, 1239, 1233, 249, 2236, 3403, 2236, 0,
	0, 0, 259, 1281, 1284, 1278, 259, 2256,
	3428, 2256, 0, 0, 0, 289, 1416, 1419,
	1413, 289, 2316, 3503, 2316, 263, 1299, 1302,
	1296, 263, 2264, 3438, 2264, 0, 0, 0,
	0, 0, 247, 1227, 1230, 1224, 247, 2232,
	3398, 2232, 0, 307, 1497, 1500, 1494, 307,
	2352, 3548, 2352, 0, 271, 1335, 1338, 1332,
	271, 2280, 3458, 2280, 0, 0, 0, 285,
	1398, 1401, 1395, 285, 2308, 3493, 2308, 0,
	0, 0, 0, 0, 301, 1470, 1473, 1467,
	301, 2340, 3533, 2340, 0, 257, 1272, 1275,
	1269, 257, 2252, 3423, 2252, 0, 0, 510,
	239, 1191, 1194, 41, 1188, 239, 2216, 3378,
	2216, 0, 0, 321, 1560, 1563, 1557, 321,
	2380, 3583, 2380, 0, 0, 0, 261, 1290,
	1293, 1287, 261, 2260, 3433, 2260, 0, 281,
	1380, 1383, 1377, 281, 2300, 3483, 2300, 341,
	0, 5, 7, 3, 0, 516, 510, 49,
	585, 588, 41, 582, 49, 2204, 0, 5,
	7, 115, 3, 0, 117, 0, 5, 7,
	3, 0, 717, 1820, 717, 0, 5, 7,
	3, 0, 510, 510, 363, 1804, 1808, 41,
	1, 1800, 363, 0, 5, 7, 115, 3,
	0, 117, 0, 5, 7, 3, 0, 717,
	1820, 717, 49, 585, 588, 582, 49, 347,
	510, 0, 0, 0, 0, 0, 543, 41,
	0, 0, 726, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0,
	756, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 0,
	0, 768, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 741, 0, 0,
	744, 349, 510, 0, 0, 0, 0, 0,
	0, 555, 41, 0, 0, 0, 0, 0,
	789, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 786, 0, 0,
	780, 0, 0, 0, 783, 0, 0, 798,
	0, 0, 0, 777, 0, 0, 771, 0,
	0, 0, 774, 0, 0, 795, 690, 687,
	2156, 105, 489, 492, 489, 39, 498, 501,
	495, 39, 0, 5, 7, 489, 3, 0,
	39, 498, 501, 495, 39, 519, 0, 5,
	7, 510, 3, 0, 47, 573, 576, 41,
	570, 47, 0, 5, 7, 510, 3, 0,
	2048, 47, 573, 576, 41, 55, 53, 51,
	0, 57, 570, 47, 0, 5, 7, 510,
	3, 0, 47, 573, 576, 41, 55, 53,
	51, 0, 57, 570, 47, 0, 5, 7,
	510, 3, 0, 47, 573, 576, 41, 55,
	53, 51, 0, 57, 570, 47, 0, 5,
	7, 510, 3, 0, 567, 41, 55, 53,
	51, 0, 57, 2056, 41, 55, 53, 51,
	0, 57, 2060, 3328, 2056, 41, 55, 53,
	51, 0, 57, 597, 2068, 2072, 3328, 2064,
	597, 2056, 41, 55, 53, 51, 0, 57,
	597, 2068, 2072, 3328, 2064, 597, 2056, 41,
	55, 53, 51, 0, 57, 597, 2068, 2072,
	3328, 2064, 597, 432, 31, 447, 450, 444,
	31, 432, 0, 5, 7, 3, 0, 441,
	489, 39, 498, 501, 495, 39, 0, 5,
	7, 489, 3, 0, 492, 510, 45, 561,
	564, 41, 558, 45, 0, 5, 7, 489,
	3, 0, 492, 2096, 636, 31, 447, 450,
	444, 31, 1864, 3123, 1864, 432, 0, 5,
	7, 3, 0, 633, 1812, 633, 687, 2172,
	105, 1644, 2392, 329, 1590, 1593, 41, 1587,
	329, 0, 5, 7, 510, 0, 0, 3,
	0, 333, 1608, 1611, 41, 1605, 333, 0,
	5, 7, 3313, 3, 0, 525, 1960, 1964,
	0, 41, 1956, 525, 0, 5, 7, 3,
	0, 0, 5, 7, 3, 0, 510, 331,
	1599, 1602, 41, 1596, 331, 0, 5, 7,
	510, 0, 0, 3, 0, 335, 1617, 1620,
	41, 1614, 335, 0, 5, 7, 3313, 3,
	0, 528, 1972, 1976, 0, 41, 1968, 528,
	0, 5, 7, 3, 0, 0, 5, 7,
	3, 0, 0, 3308, 3903, 531, 1984, 1988,
	0, 41, 531, 1980, 531, 3288, 3867, 3288,
	0, 5, 7, 3308, 3, 0, 1641, 1828,
	1641, 534, 1996, 2000, 0, 41, 534, 1992,
	534, 3293, 3873, 3293, 0, 5, 7, 3308,
	3, 0, 1828, 1641, 537, 2008, 2012, 0,
	41, 537, 2004, 537, 3298, 3879, 3298, 0,
	5, 7, 3308, 3, 0, 1828, 1641, 540,
	2020, 2024, 0, 41, 2016, 540, 3303, 3885,
	3303, 0, 5, 7, 3, 0, 1828, 1641,
	1952, 3278, 3283, 3193, 3273, 1952, 3861, 3956,
	3861, 507, 1948, 3263, 3268, 3193, 1948, 3258,
	1948, 3855, 3949, 3855, 507, 1944, 3248, 3253,
	3193, 1944, 3243, 1944, 3849, 3942, 3849, 507,
	1940, 3233, 3238, 3193, 1940, 3228, 1940, 3843,
	3935, 3843, 507, 339, 1635, 1638, 1632, 339,
	1936, 3218, 3223, 3193, 3213, 1936, 507, 337,
	1626, 1629, 1623, 337, 1932, 3203, 3208, 3193,
	3198, 1932, 507, 510, 45, 561, 564, 41,
	558, 45, 0, 5, 7, 510, 3, 0,
	45, 561, 564, 41, 558, 45, 0, 5,
	7, 510, 3, 0, 45, 561, 564, 41,
	558, 45, 0, 5, 7, 489, 3, 0,
	492, 510, 45, 561, 564, 41, 558, 45,
	0, 5, 7, 510, 3, 0, 45, 561,
	564, 41, 558, 45, 432, 0, 5, 7,
	3, 0, 31, 447, 450, 444, 31, 432,
	0, 5, 7, 3, 0, 31, 447, 450,
	444, 31, 432, 0, 5, 7, 3, 0,
	31, 447, 450, 444, 31, 0, 5, 7,
	489, 3, 0, 492, 353, 0, 5, 7,
	3, 0, 510, 45, 561, 564, 41, 558,
	45, 0, 5, 7, 351, 3, 0, 0,
	5, 7, 3, 0, 129, 1, 711, 0,
	699, 5, 7, 702, 705, 3, 0, 1,
	366, 1, 111, 113, 0, 2148, 687, 105,
	107, 510, 708, 2196, 2200, 41, 2192, 708,
	2188, 3373, 2188, 0, 687, 105, 109, 510,
	45, 561, 564, 41, 558, 45, 0, 5,
	7, 351, 3, 0, 0, 5, 7, 3,
	0, 510, 43, 549, 552, 41, 546, 43,
	714, 0, 5, 7, 115, 3, 0, 117,
	0, 5, 7, 3, 0, 1, 366, 1,
	510, 43, 549, 552, 41, 546, 43, 0,
	5, 7, 510, 3, 0, 43, 549, 552,
	41, 546, 43, 0, 5, 7, 115, 3,
	0, 117, 0, 5, 7, 3, 0, 1,
	366, 1, 510, 43, 549, 552, 41, 546,
	43, 801, 0, 5, 7, 147, 149, 151,
	153, 3, 0, 0, 5, 7, 3, 0,
	1916, 510, 43, 549, 552, 41, 546, 43,
	0, 5, 7, 0, 3, 0, 2212, 0,
	5, 7, 0, 5, 7, 0, 5, 7,
	1, 3, 0, 366, 1, 3, 0, 366,
	1, 3, 0, 366, 1, 804, 129, 0,
	5, 7, 3, 0, 510, 43, 549, 552,
	41, 546, 43, 2152, 0, 5, 7, 687,
	3, 0, 3358, 105, 693, 2164, 2168, 693,
	2164, 2168, 693, 2164, 2168, 2156, 2160, 693,
	3363, 2156, 2160, 693, 3363, 2156, 2160, 693,
	3363, 2156, 0, 5, 7, 3, 0, 510,
	43, 549, 552, 41, 546, 43, 0, 5,
	7, 687, 3, 0, 105, 696, 2180, 2184,
	696, 2180, 2184, 696, 2180, 2184, 2172, 2176,
	696, 3368, 2172, 2176, 696, 3368, 2172, 2176,
	696, 3368, 2172, 0, 5, 7, 3, 0,
	510, 43, 549, 552, 41, 546, 43, 0,
	5, 7, 489, 3, 0, 39, 498, 501,
	39, 498, 501, 39, 498, 501, 492, 495,
	39, 1908, 492, 495, 39, 1908, 492, 495,
	39, 1908, 492, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 813, 816, 0, 0,
	0, 810, 155, 0, 5, 7, 351, 3,
	0, 0, 5, 7, 3, 0, 510, 43,
	549, 552, 41, 546, 43, 0, 5, 7,
	510, 3, 0, 47, 573, 576, 41, 570,
	47, 615, 0, 5, 7, 603, 3, 0,
	63, 609, 612, 61, 606, 63, 0, 5,
	7, 603, 3, 0, 63, 609, 612, 61,
	606, 63, 0, 5, 7, 510, 3, 0,
	45, 561, 564, 41, 558, 45, 0, 5,
	7, 489, 3, 0, 39, 498, 501, 495,
	39, 0, 5, 7, 129, 3, 0, 1,
	0, 0, 181, 930, 933, 927, 181, 0,
	0, 0, 175, 903, 906, 900, 175, 0,
	195, 993, 996, 990, 195, 0, 0, 0,
	0, 0, 237, 1182, 1185, 1179, 237, 0,
	0, 0, 0, 0, 0, 219, 1101, 1104,
	1098, 219, 217, 1092, 1095, 1089, 217, 0,
	0, 191, 975, 978, 972, 191, 0, 0,
	0, 159, 831, 834, 828, 159, 0, 0,
	0, 0, 0, 0, 209, 1056, 1059, 1053,
	209, 0, 0, 0, 0, 193, 984, 987,
	981, 193, 0, 0, 0, 207, 1047, 1050,
	1044, 207, 197, 1002, 1005, 999, 197, 0,
	0, 0, 0, 0, 231, 1155, 1158, 1152,
	231, 0, 233, 1164, 1167, 1161, 233, 0,
	0, 0, 0, 165, 858, 861, 855, 165,
	0, 0, 0, 0, 0, 0, 0, 201,
	1020, 1023, 1017, 201, 0, 0, 0, 179,
	921, 924, 918, 179, 189, 966, 969, 963,
	189, 0, 0, 0, 0, 0, 225, 1128,
	1131, 1125, 225, 0, 227, 1137, 1140, 1134,
	227, 0, 183, 939, 942, 936, 183, 229,
	1146, 1149, 1143, 229, 0, 0, 0, 0,
	0, 167, 867, 870, 864, 167, 169, 876,
	879, 873, 169, 0, 0, 0, 0, 0,
	0, 187, 957, 960, 954, 187, 0, 223,
	1119, 1122, 1116, 223, 157, 822, 825, 0,
	819, 157, 0, 205, 1038, 1041, 0, 1035,
	205, 211, 1065, 1068, 0, 1062, 211, 0,
	0, 0, 0, 213, 1074, 1077, 1071, 213,
	0, 0, 163, 849, 852, 846, 163, 0,
	0, 0, 173, 894, 897, 891, 173, 0,
	0, 0, 203, 1029, 1032, 1026, 203, 177,
	912, 915, 909, 177, 0, 0, 0, 0,
	0, 161, 840, 843, 837, 161, 0, 221,
	1110, 1113, 1107, 221, 0, 185, 948, 951,
	945, 185, 0, 0, 0, 199, 1011, 1014,
	1008, 199, 0, 0, 0, 0, 0, 215,
	1083, 1086, 1080, 215, 0, 171, 885, 888,
	882, 171, 0, 0, 1920, 510, 45, 561,
	564, 41, 558, 45, 0, 0, 235, 1173,
	1176, 1170, 235, 489, 504, 1, 510, 45,
	561, 564, 41, 558, 45, 0, 5, 7,
	510, 3, 0, 43, 549, 552, 41, 546,
	43, 0, 5, 7, 351, 3, 0, 0,
	5, 7, 3, 0, 129, 1, 129, 1,
	510, 43, 549, 552, 41, 546, 43, 0,
	5, 7, 510, 3, 0, 43, 549, 552,
	41, 546, 43, 0, 5, 7, 510, 3,
	0, 45, 561, 564, 41, 558, 45, 0,
	5, 7, 29, 435, 3, 0, 31, 447,
	450, 444, 31, 720, 0, 5, 7, 438,
	3, 0, 133, 135, 0, 137, 139, 0,
	141, 0, 143, 145, 0, 453, 131, 1,
	0, 0, 117, 115, 510, 43, 549, 552,
	41, 546, 43, 0, 5, 7, 510, 3,
	0, 43, 549, 552, 41, 546, 43, 0,
	5, 7, 510, 3, 0, 45, 561, 564,
	41, 558, 45, 0, 5, 7, 29, 435,
	3, 0, 441, 117, 115, 510, 43, 549,
	552, 41, 546, 43, 0, 5, 7, 510,
	3, 0, 43, 549, 552, 41, 546, 43,
	0, 5, 7, 510, 3, 0, 43, 549,
	552, 41, 546, 43, 0, 5, 7, 115,
	3, 0, 117, 0, 5, 7, 3, 0,
	1, 366, 1, 510, 45, 561, 564, 41,
	558, 45, 0, 5, 7, 687, 3, 0,
	2156, 105, 510, 45, 561, 564, 41, 558,
	45, 0, 5, 7, 1650, 3, 0, 117,
	115, 117, 2208, 345, 115, 117, 115, 117,
	2412, 2408, 1647, 117, 2404, 343, 115, 117,
	2396, 1647, 117, 343, 115, 117, 2400, 510,
	45, 561, 564, 41, 558, 45, 0, 5,
	7, 510, 3, 0, 45, 561, 564, 41,
	558, 45, 73, 0, 5, 7, 3, 0,
	1, 510, 43, 549, 552, 41, 546, 43,
	432, 0, 5, 7, 3, 0, 31, 447,
	450, 444, 31, 73, 0, 5, 7, 3,
	0, 1, 480, 35, 0, 474, 477, 456,
	471, 35, 35, 357, 378, 381, 2420, 456,
	369, 35, 1832, 1659, 1900, 35, 378, 381,
	2136, 2136, 2136, 2136, 2136, 2136, 2136, 2136,
	2136, 2136, 2136, 2136, 2136, 2136, 2136, 369,
	35, 3168, 3183, 3353, 3353, 3353, 3353, 3353,
	3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353,
	3353, 3353, 1892, 663, 93, 2128, 2132, 2120,
	660, 93, 2124, 663, 378, 381, 369, 35,
	378, 381, 3104, 35, 35, 378, 381, 35,
	1659, 3831, 3837, 3897, 3897, 3897, 3897, 3897,
	3897, 3897, 3897, 3897, 3897, 3897, 3897, 3897,
	3897, 3897, 1840
};

static const short _zone_scanner_eof_actions[] = {
	0, 1924, 2052, 361, 1668, 355, 1653, 9,
	9, 355, 355, 1653, 1653, 3188, 3891, 1665,
	361, 361, 1668, 1653, 361, 361, 361, 361,
	361, 1668, 1668, 361, 361, 1668, 361, 361,
	361, 1668, 361, 361, 361, 361, 1668, 361,
	361, 361, 1668, 361, 361, 361, 1668, 1668,
	361, 361, 361, 361, 1668, 361, 1668, 361,
	361, 361, 361, 1668, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 1668, 361,
	361, 1668, 1668, 361, 361, 1668, 361, 1668,
	361, 1668, 1668, 361, 361, 361, 361, 1668,
	1668, 361, 361, 361, 361, 1668, 361, 1668,
	1668, 361, 1668, 1668, 361, 361, 361, 361,
	1668, 361, 361, 1668, 361, 1668, 361, 361,
	361, 1668, 1668, 361, 361, 1668, 361, 1668,
	361, 1668, 361, 361, 361, 1668, 361, 361,
	361, 1668, 361, 1668, 361, 361, 522, 1928,
	361, 361, 1668, 361, 1924, 361, 361, 522,
	2052, 2052, 2052, 2052, 361, 9, 95, 95,
	95, 95, 95, 95, 95, 95, 37, 522,
	0, 3173, 522, 361, 2052, 2052, 2052, 361,
	1904, 1928, 2428, 1653, 1924, 9, 1653, 9,
	3188, 2428, 2428, 2428, 2428, 2428, 2428, 2428,
	2428, 2428, 2428, 2428, 2428, 2428, 2428, 1653,
	2416, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 1896, 3928, 1924, 1665, 3178, 3188,
	3178, 3178, 3178, 3178, 3178, 3178, 3178, 3178,
	3178, 3178, 3178, 3178, 3178, 3178, 483, 3188,
	1653, 9, 1653, 361, 361, 1668, 361, 361,
	361, 1668, 361, 1668, 1653, 1653, 9, 1653,
	1653, 355, 1653, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486,
	486, 9, 1665, 486, 1665, 0, 0, 27,
	27, 27, 405, 405, 405, 405, 27, 27,
	621, 621, 2092, 2092, 2092, 2092, 621, 67,
	2092, 2092, 2092, 2092, 75, 513, 3323, 384,
	384, 3323, 2044, 3323, 75, 79, 79, 79,
	387, 387, 387, 408, 408, 408, 408, 387,
	79, 0, 85, 651, 657, 87, 657, 9,
	9, 411, 411, 411, 411, 657, 9, 87,
	0, 0, 127, 127, 127, 127, 127, 127,
	127, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 341, 516, 516,
	2204, 2204, 2204, 2204, 341, 341, 341, 516,
	516, 2204, 2204, 2204, 2204, 341, 516, 341,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349,
	349, 690, 690, 355, 355, 355, 355, 355,
	355, 519, 519, 519, 2048, 519, 2048, 519,
	2048, 519, 2048, 2048, 2048, 2048, 355, 2048,
	2048, 2048, 355, 2048, 2048, 2048, 355, 2048,
	2048, 2048, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 519,
	519, 355, 355, 355, 636, 636, 636, 636,
	690, 690, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 519, 519, 519, 519, 519, 519, 355,
	355, 355, 355, 355, 519, 519, 519, 519,
	355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 519,
	519, 355, 355, 355, 355, 355, 355, 355,
	711, 711, 711, 2148, 2148, 711, 711, 355,
	711, 2148, 2148, 519, 519, 355, 355, 519,
	519, 714, 714, 714, 714, 355, 355, 355,
	519, 519, 519, 519, 714, 714, 714, 714,
	355, 355, 519, 519, 801, 801, 1916, 1916,
	801, 2212, 804, 804, 804, 804, 804, 804,
	804, 801, 801, 801, 1916, 1916, 2152, 3358,
	801, 801, 801, 1916, 1916, 2152, 3358, 801,
	801, 801, 1916, 1916, 801, 2212, 801, 801,
	355, 807, 807, 355, 355, 519, 519, 519,
	519, 615, 615, 615, 615, 519, 519, 355,
	355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 807, 1920, 1920,
	807, 807, 807, 355, 355, 355, 519, 519,
	519, 519, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 519, 519, 519, 519, 519,
	519, 714, 714, 720, 720, 720, 720, 720,
	720, 720, 720, 720, 355, 720, 720, 720,
	720, 720, 355, 714, 714, 355, 355, 355,
	519, 519, 519, 519, 519, 519, 714, 714,
	714, 714, 355, 355, 355, 519, 519, 519,
	519, 519, 519, 714, 714, 714, 714, 355,
	355, 355, 519, 519, 690, 690, 355, 519,
	519, 714, 714, 714, 714, 2208, 714, 714,
	714, 714, 2412, 355, 714, 714, 2404, 714,
	714, 2404, 714, 714, 2404, 714, 714, 2404,
	519, 519, 519, 519, 355, 355, 355, 355,
	519, 519, 355, 355, 355, 355, 355, 355,
	0, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0
};






__attribute__((visibility("default")))
int zs_init(
	zs_scanner_t *s,
	const char *origin,
	const uint16_t rclass,
	const uint32_t ttl)
{
	if (s == NULL) {
		return -1;
	}

	memset(s, 0, sizeof(*s));

	// Nonzero initial scanner state.
	s->cs = 1120;

	// Reset the file descriptor.
	s->file.descriptor = -1;

	// Use the root zone as origin if not specified.
	if (origin == NULL || strlen(origin) == 0) {
		origin = ".";
	}
	size_t origin_len = strlen(origin);

	// Prepare a zone settings header.
	const char *format;
	if (origin[origin_len - 1] != '.') {
		format = "$ORIGIN %s.\n";
	} else {
		format = "$ORIGIN %s\n";
	}

	char settings[1024];
	int ret = snprintf(settings, sizeof(settings), format, origin);
	if (ret <= 0 || ret >= sizeof(settings)) {
		ERR(ZS_ENOMEM);
		return -1;
	}

	// Parse the settings to set up the scanner origin.
	if (zs_set_input_string(s, settings, ret) != 0 ||
	    zs_parse_all(s) != 0) {
		return -1;
	}

	// Set scanner defaults.
	s->path = strdup(".");
	if (s->path == NULL) {
		ERR(ZS_ENOMEM);
		return -1;
	}
	s->default_class = rclass;
	s->default_ttl = ttl;
	s->line_counter = 1;

	s->state = ZS_STATE_NONE;
	s->process.automatic = false;

	return 0;
}

static void input_deinit(
	zs_scanner_t *s)
{
	// Deinit the file input.
	if (s->file.descriptor != -1) {
		// Unmap the file content.
		if (s->input.start != NULL) {
			munmap((void *)s->input.start,
			       s->input.end - s->input.start);
		}

		// Close the opened file.
		close(s->file.descriptor);
		s->file.descriptor = -1;
		free(s->file.name);
		s->file.name = NULL;
	}

	// Unset the input limits.
	s->input.start   = NULL;
	s->input.current = NULL;
	s->input.end     = NULL;
	s->input.eof     = false;
}

__attribute__((visibility("default")))
void zs_deinit(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return;
	}

	input_deinit(s);
	free(s->path);
}

__attribute__((visibility("default")))
int zs_set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size)
{
	if (s == NULL) {
		return -1;
	}

	if (input == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s);

	// Set the scanner input limits.
	s->input.start   = input;
	s->input.current = input;
	s->input.end     = input + size;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_input_file(
	zs_scanner_t *s,
	const char *file_name)
{
	if (s == NULL) {
		return -1;
	}

	if (file_name == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s);

	// Try to open the file.
	s->file.descriptor = open(file_name, O_RDONLY);
	if (s->file.descriptor == -1) {
		ERR(ZS_FILE_OPEN);
		return -1;
	}

	// Check for regular file input.
	struct stat file_stat;
	if (fstat(s->file.descriptor, &file_stat) == -1 ||
	    !S_ISREG(file_stat.st_mode)) {
		ERR(ZS_FILE_INVALID);
		input_deinit(s);
		return -1;
	}

	// Check for empty file (cannot mmap).
	if (file_stat.st_size > 0) {
		// Map the file to the memory.
		char *start = mmap(0, file_stat.st_size, PROT_READ, MAP_SHARED,
		                   s->file.descriptor, 0);
		if (start == MAP_FAILED) {
			ERR(ZS_FILE_MMAP);
			input_deinit(s);
			return -1;
		}

		// Try to set the mapped memory advise to sequential.
		(void)madvise(start, file_stat.st_size, MADV_SEQUENTIAL);

		// Set the scanner input limits.
		s->input.start   = start;
		s->input.current = start;
		s->input.end     = start + file_stat.st_size;
	}

	// Get absolute path of the zone file.
	char *full_name = realpath(file_name, NULL);
	if (full_name != NULL) {
		free(s->path);
		s->path = strdup(dirname(full_name));
		free(full_name);
		if (s->path == NULL) {
			ERR(ZS_ENOMEM);
			input_deinit(s);
			return -1;
		}
	} else {
		ERR(ZS_FILE_PATH);
		input_deinit(s);
		return -1;
	}

	s->file.name = strdup(file_name);
	if (s->file.name == NULL) {
		ERR(ZS_ENOMEM);
		input_deinit(s);
		return -1;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing(
	zs_scanner_t *s,
	void (*process_record)(zs_scanner_t *),
	void (*process_error)(zs_scanner_t *),
	void *data)
{
	if (s == NULL) {
		return -1;
	}

	s->process.record = process_record;
	s->process.error = process_error;
	s->process.data = data;

	return 0;
}

static void parse(
	zs_scanner_t *s)
{
	// Restore scanner input limits (Ragel internals).
	const char *p = s->input.current;
	const char *pe = s->input.end;
	const char *eof = s->input.eof ? pe : NULL;

	// Restore state variables (Ragel internals).
	int cs  = s->cs;
	int top = s->top;
	int stack[RAGEL_STACK_SIZE];
	memcpy(stack, s->stack, sizeof(stack));

	// Auxiliary variables which are used in scanner body.
	struct in_addr  addr4;
	struct in6_addr addr6;
	uint32_t timestamp;
	int16_t  window;
	int      ret;

	// Next 2 variables are for better performance.
	// Restoring r_data pointer to next free space.
	uint8_t *rdata_tail = s->r_data + s->r_data_tail;
	// Initialization of the last r_data byte.
	uint8_t *rdata_stop = s->r_data + MAX_RDATA_LENGTH - 1;

	// External processing interrupt indicator.
	bool escape = false;

	// Write scanner body (in C).

	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_widec = (*p);
	_klen = _zone_scanner_cond_lengths[cs];
	_keys = _zone_scanner_cond_keys + (_zone_scanner_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _zone_scanner_cond_spaces[_zone_scanner_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(640 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 1: {
		_widec = (short)(1152 + ((*p) - -128));
		if (
 !s->multiline  ) _widec += 256;
		break;
	}
	case 2: {
		_widec = (short)(128 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 3: {
		_widec = (short)(2688 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		break;
	}
	case 4: {
		_widec = (short)(4224 + ((*p) - -128));
		if (
 s->number64 == 0  ) _widec += 256;
		break;
	}
	case 5: {
		_widec = (short)(1664 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		break;
	}
	case 6: {
		_widec = (short)(3200 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		break;
	}
	case 7: {
		_widec = (short)(4736 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 8: {
		_widec = (short)(5760 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 9: {
		_widec = (short)(12928 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 10: {
		_widec = (short)(6784 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 11: {
		_widec = (short)(8832 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 != 0  ) _widec += 1024;
		if (
 s->number64 == 0  ) _widec += 2048;
		break;
	}
				}
				break;
			}
		}
	}

	_keys = _zone_scanner_trans_keys + _zone_scanner_key_offsets[cs];
	_trans = _zone_scanner_index_offsets[cs];

	_klen = _zone_scanner_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _zone_scanner_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _zone_scanner_indicies[_trans];
	cs = _zone_scanner_trans_targs[_trans];

	if ( _zone_scanner_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _zone_scanner_actions + _zone_scanner_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
	{
		p--; {cs = stack[--top]; goto _again;}
	}
	break;
	case 1:
	{
		s->line_counter++;
	}
	break;
	case 2:
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {cs = 261; goto _again;}
		}
		s->multiline = true;
	}
	break;
	case 3:
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {cs = 261; goto _again;}
		}
		s->multiline = false;
	}
	break;
	case 4:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 5:
	{
		s->buffer_length = 0;
	}
	break;
	case 6:
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 7:
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset the multiline context.
		s->multiline = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop the scanner if required.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}

			// Stop the scanner if fatal.
			if (s->error.fatal) {
				s->state = ZS_STATE_STOP;
				{p++; goto _out; }
			}
		} else {
			// Return if external processing.
			escape = true;
		}
	}
	break;
	case 8:
	{
		if (escape) {
			cs = 1120; {p++; goto _out; }
		} else {
			{cs = 1120; goto _again;}
		}
	}
	break;
	case 9:
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	break;
	case 10:
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 11:
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 12:
	{
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 13:
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	break;
	case 14:
	{
		s->dname_tmp_length++;
	}
	break;
	case 15:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 16:
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
	break;
	case 17:
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 18:
	{
		// Copy already verified zone origin.
		memcpy(s->dname,
		       s->zone_origin,
		       s->zone_origin_length);

		s->dname_tmp_length = s->zone_origin_length;
	}
	break;
	case 19:
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	break;
	case 20:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 21:
	{ p--; {stack[top++] = cs; cs = 263; goto _again;} }
	break;
	case 22:
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 23:
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 24:
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
	break;
	case 25:
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	break;
	case 26:
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 27:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 28:
	{
		s->dname = rdata_tail;
	}
	break;
	case 29:
	{
		rdata_tail += s->dname_tmp_length;
	}
	break;
	case 30:
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 31:
	{
		s->number64 = 0;
	}
	break;
	case 32:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 33:
	{
		s->decimal_counter = 0;
	}
	break;
	case 34:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 35:
	{
		s->decimal_counter++;
	}
	break;
	case 36:
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 37:
	{
		s->decimals = 2;
	}
	break;
	case 38:
	{
		s->decimals = 3;
	}
	break;
	case 39:
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 40:
	{
		if (s->number64 <= UINT16_MAX) {
			*((uint16_t *)rdata_tail) = htons((uint16_t)(s->number64));
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 41:
	{
		if (s->number64 <= UINT32_MAX) {
			*((uint32_t *)rdata_tail) = htonl((uint32_t)(s->number64));
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 42:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 43:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 44:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 45:
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 261; goto _again;}
	              }
	            }
	break;
	case 46:
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 261; goto _again;}
	              }
	            }
	break;
	case 47:
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 261; goto _again;}
	              }
	            }
	break;
	case 48:
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 261; goto _again;}
	              }
	            }
	break;
	case 49:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 50:
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 51:
	{
		s->buffer_length = 0;
	}
	break;
	case 52:
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 53:
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {cs = 261; goto _again;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {cs = 261; goto _again;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {cs = 261; goto _again;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 54:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 55:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 261; goto _again;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 56:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 57:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 58:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 261; goto _again;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 59:
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 60:
	{
		rdata_tail++;
	}
	break;
	case 61:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 62:
	{ p--; {stack[top++] = cs; cs = 272; goto _again;} }
	break;
	case 63:
	{
		s->long_string = true;
	}
	break;
	case 64:
	{
		s->long_string = false;
	}
	break;
	case 65:
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 66:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 67:
	{ p--; {stack[top++] = cs; cs = 284; goto _again;} }
	break;
	case 68:
	{
		s->dname = s->zone_origin;
	}
	break;
	case 69:
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
	break;
	case 70:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 71:
	{ p--; {stack[top++] = cs; cs = 293; goto _again;} }
	break;
	case 72:
	{
		rdata_tail = s->r_data;
	}
	break;
	case 73:
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {cs = 261; goto _again;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
	break;
	case 74:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 75:
	{
		s->dname = s->r_data;
	}
	break;
	case 76:
	{
		s->r_data_length = s->dname_tmp_length;
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 78:
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {cs = 261; goto _again;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (!s->process.automatic) {
			s->state = ZS_STATE_INCLUDE;
			escape = true;
		} else {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {cs = 261; goto _again;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {cs = 261; goto _again;}
			}
			zs_deinit(ss);
			free(ss);
		}
	}
	break;
	case 79:
	{ p--; {stack[top++] = cs; cs = 305; goto _again;} }
	break;
	case 80:
	{
		ERR(ZS_OK);
	}
	break;
	case 81:
	{
		NOERR;
		if (escape) {
			cs = 1120; {p++; goto _out; }
		}
	}
	break;
	case 82:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 83:
	{
		s->r_class = s->default_class;
	}
	break;
	case 84:
	{
		s->r_ttl = s->default_ttl;
	}
	break;
	case 85:
	{
		s->r_class = KNOT_CLASS_IN;
	}
	break;
	case 86:
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 87:
	{
		s->buffer_length = 0;
	}
	break;
	case 88:
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 89:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 90:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 91:
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	break;
	case 92:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 93:
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	break;
	case 94:
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
	break;
	case 95:
	{
		s->apl.excl_flag = 128; // dec 128  = bin 10000000.
	}
	break;
	case 96:
	{
		s->apl.addr_family = 1;
	}
	break;
	case 97:
	{
		s->apl.addr_family = 2;
	}
	break;
	case 98:
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 99:
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {cs = 261; goto _again;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	break;
	case 100:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 101:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 102:
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	break;
	case 103:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 104:
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 105:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 106:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 107:
	{
		*(rdata_tail++) += second_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 108:
	{
		*(rdata_tail++) += third_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = third_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 109:
	{
		*(rdata_tail++) += fourth_base64_to_num[(uint8_t)(*p)];
	}
	break;
	case 110:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 111:
	{ p--; {stack[top++] = cs; cs = 322; goto _again;} }
	break;
	case 112:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 113:
	{
		*(rdata_tail++) += second_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 114:
	{
		*rdata_tail += third_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 115:
	{
		*(rdata_tail++) += fourth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fourth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 116:
	{
		*(rdata_tail++) += fifth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fifth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 117:
	{
		*rdata_tail += sixth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 118:
	{
		*(rdata_tail++) += seventh_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = seventh_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 119:
	{
		*(rdata_tail++) += eighth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 120:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 121:
	{
		*(rdata_tail++) = 0;
	}
	break;
	case 122:
	{
		*(rdata_tail++) = 1;
	}
	break;
	case 123:
	{
		*(rdata_tail++) = 2;
	}
	break;
	case 124:
	{
		*(rdata_tail++) = 3;
	}
	break;
	case 125:
	{
		*(rdata_tail++) = 5;
	}
	break;
	case 126:
	{
		*(rdata_tail++) = 6;
	}
	break;
	case 127:
	{
		*(rdata_tail++) = 7;
	}
	break;
	case 128:
	{
		*(rdata_tail++) = 8;
	}
	break;
	case 129:
	{
		*(rdata_tail++) = 10;
	}
	break;
	case 130:
	{
		*(rdata_tail++) = 12;
	}
	break;
	case 131:
	{
		*(rdata_tail++) = 13;
	}
	break;
	case 132:
	{
		*(rdata_tail++) = 14;
	}
	break;
	case 133:
	{
		*(rdata_tail++) = 15;
	}
	break;
	case 134:
	{
		*(rdata_tail++) = 16;
	}
	break;
	case 135:
	{
		*(rdata_tail++) = 252;
	}
	break;
	case 136:
	{
		*(rdata_tail++) = 253;
	}
	break;
	case 137:
	{
		*(rdata_tail++) = 254;
	}
	break;
	case 138:
	{
		*((uint16_t *)rdata_tail) = htons(1);
		rdata_tail += 2;
	}
	break;
	case 139:
	{
		*((uint16_t *)rdata_tail) = htons(2);
		rdata_tail += 2;
	}
	break;
	case 140:
	{
		*((uint16_t *)rdata_tail) = htons(3);
		rdata_tail += 2;
	}
	break;
	case 141:
	{
		*((uint16_t *)rdata_tail) = htons(4);
		rdata_tail += 2;
	}
	break;
	case 142:
	{
		*((uint16_t *)rdata_tail) = htons(5);
		rdata_tail += 2;
	}
	break;
	case 143:
	{
		*((uint16_t *)rdata_tail) = htons(6);
		rdata_tail += 2;
	}
	break;
	case 144:
	{
		*((uint16_t *)rdata_tail) = htons(7);
		rdata_tail += 2;
	}
	break;
	case 145:
	{
		*((uint16_t *)rdata_tail) = htons(8);
		rdata_tail += 2;
	}
	break;
	case 146:
	{
		*((uint16_t *)rdata_tail) = htons(253);
		rdata_tail += 2;
	}
	break;
	case 147:
	{
		*((uint16_t *)rdata_tail) = htons(254);
		rdata_tail += 2;
	}
	break;
	case 148:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 149:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 150:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 151:
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	break;
	case 152:
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	break;
	case 153:
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	break;
	case 154:
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	break;
	case 155:
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	break;
	case 156:
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	break;
	case 157:
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	break;
	case 158:
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	break;
	case 159:
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	break;
	case 160:
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	break;
	case 161:
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	break;
	case 162:
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	break;
	case 163:
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	break;
	case 164:
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	break;
	case 165:
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	break;
	case 166:
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	break;
	case 167:
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	break;
	case 168:
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	break;
	case 169:
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	break;
	case 170:
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	break;
	case 171:
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	break;
	case 172:
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	break;
	case 173:
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	break;
	case 174:
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	break;
	case 175:
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	break;
	case 176:
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	break;
	case 177:
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	break;
	case 178:
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	break;
	case 179:
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	break;
	case 180:
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	break;
	case 181:
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	break;
	case 182:
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	break;
	case 183:
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	break;
	case 184:
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	break;
	case 185:
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	break;
	case 186:
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	break;
	case 187:
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	break;
	case 188:
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	break;
	case 189:
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	break;
	case 190:
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	break;
	case 191:
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	break;
	case 192:
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	break;
	case 193:
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 194:
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	break;
	case 195:
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	break;
	case 196:
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	break;
	case 197:
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	break;
	case 198:
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	break;
	case 199:
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	break;
	case 200:
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	break;
	case 201:
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	break;
	case 202:
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	break;
	case 203:
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	break;
	case 204:
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	break;
	case 205:
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	break;
	case 206:
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	break;
	case 207:
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	break;
	case 208:
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	break;
	case 209:
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	break;
	case 210:
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	break;
	case 211:
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	break;
	case 212:
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	break;
	case 213:
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	break;
	case 214:
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	break;
	case 215:
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	break;
	case 216:
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	break;
	case 217:
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	break;
	case 218:
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	break;
	case 219:
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	break;
	case 220:
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	break;
	case 221:
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	break;
	case 222:
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	break;
	case 223:
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	break;
	case 224:
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	break;
	case 225:
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	break;
	case 226:
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	break;
	case 227:
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	break;
	case 228:
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	break;
	case 229:
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	break;
	case 230:
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	break;
	case 231:
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	break;
	case 232:
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	break;
	case 233:
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	break;
	case 234:
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	break;
	case 235:
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	break;
	case 236:
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	break;
	case 237:
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {cs = 261; goto _again;}
				}
			}
		}
	}
	break;
	case 238:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 239:
	{ p--; {stack[top++] = cs; cs = 329; goto _again;} }
	break;
	case 240:
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 241:
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 242:
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 243:
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 244:
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 245:
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 246:
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 247:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 248:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 249:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 250:
	{
		s->loc.lat_sign = -1;
	}
	break;
	case 251:
	{
		s->loc.long_sign = -1;
	}
	break;
	case 252:
	{
		s->loc.alt_sign = -1;
	}
	break;
	case 253:
	{
		memset(&(s->loc), 0, sizeof(s->loc));
		// Defaults.
		s->loc.siz = 100;
		s->loc.vp  = 1000;
		s->loc.hp  = 1000000;
		s->loc.lat_sign  = 1;
		s->loc.long_sign = 1;
		s->loc.alt_sign  = 1;
	}
	break;
	case 254:
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
	break;
	case 255:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 256:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 257:
	{
		s->item_length = 0;
	}
	break;
	case 258:
	{
		s->item_length++;
	}
	break;
	case 259:
	{
		if (s->item_length != 6) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 260:
	{
		if (s->item_length != 8) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 261:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 262:
	{
		s->item_length = 0;
	}
	break;
	case 263:
	{
		s->item_length++;
	}
	break;
	case 264:
	{
		if (s->item_length != 4) {
			WARN(ZS_BAD_L64_LENGTH);
			p--; {cs = 261; goto _again;}
		}
	}
	break;
	case 265:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 266:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 267:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 268:
	{ p--; {stack[top++] = cs; cs = 480; goto _again;} }
	break;
	case 269:
	{ p--; {stack[top++] = cs; cs = 584; goto _again;} }
	break;
	case 270:
	{
		rdata_tail = s->r_data;
	}
	break;
	case 271:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 272:
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = cs; cs = 625; goto _again;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = cs; cs = 627; goto _again;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = cs; cs = 629; goto _again;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = cs; cs = 661; goto _again;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = cs; cs = 666; goto _again;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = cs; cs = 671; goto _again;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = cs; cs = 676; goto _again;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = cs; cs = 680; goto _again;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = cs; cs = 682; goto _again;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = cs; cs = 737; goto _again;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = cs; cs = 748; goto _again;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = cs; cs = 765; goto _again;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = cs; cs = 776; goto _again;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = cs; cs = 787; goto _again;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = cs; cs = 800; goto _again;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = cs; cs = 810; goto _again;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = cs; cs = 849; goto _again;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = cs; cs = 1003; goto _again;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = cs; cs = 1006; goto _again;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = cs; cs = 1017; goto _again;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = cs; cs = 1019; goto _again;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = cs; cs = 1048; goto _again;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = cs; cs = 1061; goto _again;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = cs; cs = 1079; goto _again;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = cs; cs = 1074; goto _again;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = cs; cs = 1092; goto _again;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = cs; cs = 1098; goto _again;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = cs; cs = 1104; goto _again;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 1112; goto _again;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{cs = 261; goto _again;}
		}
	}
	break;
	case 273:
	{
		switch (s->r_type) {
		// Next types must not have empty rdata.
		case KNOT_RRTYPE_A:
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
		case KNOT_RRTYPE_SOA:
		case KNOT_RRTYPE_HINFO:
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
		case KNOT_RRTYPE_RP:
		case KNOT_RRTYPE_AAAA:
		case KNOT_RRTYPE_LOC:
		case KNOT_RRTYPE_SRV:
		case KNOT_RRTYPE_NAPTR:
		case KNOT_RRTYPE_CERT:
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_SSHFP:
		case KNOT_RRTYPE_IPSECKEY:
		case KNOT_RRTYPE_RRSIG:
		case KNOT_RRTYPE_NSEC:
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_NSEC3:
		case KNOT_RRTYPE_NSEC3PARAM:
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_CDS:
		case KNOT_RRTYPE_CDNSKEY:
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L32:
		case KNOT_RRTYPE_L64:
		case KNOT_RRTYPE_LP:
		case KNOT_RRTYPE_EUI48:
		case KNOT_RRTYPE_EUI64:
		case KNOT_RRTYPE_URI:
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 461; goto _again;}
		// Next types can have empty rdata.
		case KNOT_RRTYPE_APL:
		default:
			{stack[top++] = cs; cs = 470; goto _again;}
		}
	}
	break;
	case 274:
	{ p--; }
	break;
	case 275:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 276:
	{ s->r_type = KNOT_RRTYPE_A; }
	break;
	case 277:
	{ s->r_type = KNOT_RRTYPE_NS; }
	break;
	case 278:
	{ s->r_type = KNOT_RRTYPE_CNAME; }
	break;
	case 279:
	{ s->r_type = KNOT_RRTYPE_SOA; }
	break;
	case 280:
	{ s->r_type = KNOT_RRTYPE_PTR; }
	break;
	case 281:
	{ s->r_type = KNOT_RRTYPE_HINFO; }
	break;
	case 282:
	{ s->r_type = KNOT_RRTYPE_MINFO; }
	break;
	case 283:
	{ s->r_type = KNOT_RRTYPE_MX; }
	break;
	case 284:
	{ s->r_type = KNOT_RRTYPE_TXT; }
	break;
	case 285:
	{ s->r_type = KNOT_RRTYPE_RP; }
	break;
	case 286:
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
	break;
	case 287:
	{ s->r_type = KNOT_RRTYPE_RT; }
	break;
	case 288:
	{ s->r_type = KNOT_RRTYPE_KEY; }
	break;
	case 289:
	{ s->r_type = KNOT_RRTYPE_AAAA; }
	break;
	case 290:
	{ s->r_type = KNOT_RRTYPE_LOC; }
	break;
	case 291:
	{ s->r_type = KNOT_RRTYPE_SRV; }
	break;
	case 292:
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
	break;
	case 293:
	{ s->r_type = KNOT_RRTYPE_KX; }
	break;
	case 294:
	{ s->r_type = KNOT_RRTYPE_CERT; }
	break;
	case 295:
	{ s->r_type = KNOT_RRTYPE_DNAME; }
	break;
	case 296:
	{ s->r_type = KNOT_RRTYPE_APL; }
	break;
	case 297:
	{ s->r_type = KNOT_RRTYPE_DS; }
	break;
	case 298:
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
	break;
	case 299:
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
	break;
	case 300:
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
	break;
	case 301:
	{ s->r_type = KNOT_RRTYPE_NSEC; }
	break;
	case 302:
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
	break;
	case 303:
	{ s->r_type = KNOT_RRTYPE_DHCID; }
	break;
	case 304:
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
	break;
	case 305:
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
	break;
	case 306:
	{ s->r_type = KNOT_RRTYPE_TLSA; }
	break;
	case 307:
	{ s->r_type = KNOT_RRTYPE_CDS; }
	break;
	case 308:
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
	break;
	case 309:
	{ s->r_type = KNOT_RRTYPE_SPF; }
	break;
	case 310:
	{ s->r_type = KNOT_RRTYPE_NID; }
	break;
	case 311:
	{ s->r_type = KNOT_RRTYPE_L32; }
	break;
	case 312:
	{ s->r_type = KNOT_RRTYPE_L64; }
	break;
	case 313:
	{ s->r_type = KNOT_RRTYPE_LP; }
	break;
	case 314:
	{ s->r_type = KNOT_RRTYPE_EUI48; }
	break;
	case 315:
	{ s->r_type = KNOT_RRTYPE_EUI64; }
	break;
	case 316:
	{ s->r_type = KNOT_RRTYPE_URI; }
	break;
	case 317:
	{ s->r_type = KNOT_RRTYPE_CAA; }
	break;
	case 318:
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 261; goto _again;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop the scanner if required.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; goto _out; }
		}
	}
	break;
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const short *__acts = _zone_scanner_actions + _zone_scanner_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 4:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 15:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 20:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 27:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 32:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 44:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 54:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 56:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 57:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 61:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 64:
	{
		s->long_string = false;
	}
	break;
	case 66:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 70:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 74:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 81:
	{
		NOERR;
		if (escape) {
			cs = 1120; {p++; goto _out; }
		}
	}
	break;
	case 82:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 89:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 100:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 103:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 105:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 110:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 120:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 148:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 149:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 150:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 238:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 255:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 256:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 261:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 265:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 266:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 267:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 271:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 261; goto _again;}
	}
	break;
	case 275:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 261; goto _again;}
	}
	break;
		}
	}
	}

	_out: {}
	}


	// Check if the scanner state machine is in an uncovered state.
	bool extra_error = false;
	if (cs == 0) {
		ERR(ZS_UNCOVERED_STATE);
		extra_error = true;
	// Check for an unclosed multiline record.
	} else if (s->input.eof && s->multiline) {
		ERR(ZS_UNCLOSED_MULTILINE);
		extra_error = true;
	}

	// Treat the extra error.
	if (extra_error) {
		s->error.counter++;
		s->state = ZS_STATE_ERROR;

		// Copy the error context just for the part of the current line.
		s->buffer_length = 0;
		while (p < pe && *p != '\n' && s->buffer_length < 50) {
			s->buffer[s->buffer_length++] = *p++;
		}
		s->buffer[s->buffer_length++] = 0;

		// Execute the error callback.
		if (s->process.automatic && s->process.error != NULL) {
			s->process.error(s);
		}

		return;
	}

	// Storing scanner states.
	s->cs  = cs;
	s->top = top;
	memcpy(s->stack, stack, sizeof(stack));

	// Store the current parser position.
	s->input.current = p;

	// Storing r_data pointer.
	s->r_data_tail = rdata_tail - s->r_data;
}

__attribute__((visibility("default")))
int zs_parse_record(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	// Stop parsing if stop or after the final parsing.
	if (s->state == ZS_STATE_STOP || s->input.eof) {
		return -1;
	}

	// Check for the end of the input.
	if (s->input.current != s->input.end) {
		s->state = ZS_STATE_NONE;
		// Parse the next item.
		parse(s);
		return 0;
	}

	switch (s->state) {
	case ZS_STATE_NONE:
		// Indicate end of the input.
		s->state = ZS_STATE_EOF;
		return 0;
	case ZS_STATE_EOF:
		// Parse the final block.
		if (zs_set_input_string(s, "\n", 1) != 0) {
			return -1;
		}
		s->input.eof = true;

		parse(s);
		if (s->state == ZS_STATE_EOF) {
			return -1;
		}
		return 0;
	default:
		return -1;;
	}
}

__attribute__((visibility("default")))
int zs_parse_all(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	s->process.automatic = true;

	// Parse input block.
	parse(s);

	// Parse trailing newline-char block if not stop.
	if (s->state != ZS_STATE_STOP) {
		if (zs_set_input_string(s, "\n", 1) != 0) {
			return -1;
		}
		s->input.eof = true;
		parse(s);
	}

	// Check if any errors has occurred.
	if (s->error.counter > 0) {
		return -1;
	}

	return 0;
}
