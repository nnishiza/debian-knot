From cac4c78f888099c45dc252939b17e63525c2f097 Mon Sep 17 00:00:00 2001
From: Jan Vcelak <jan.vcelak@nic.cz>
Date: Wed, 31 Dec 2014 15:56:26 +0100
Subject: [PATCH 3/3] [dnssec] remove anonymous union from binary

---
 dnssec/lib/dnssec/binary.h      | 7 ++-----
 dnssec/utils/legacy/pubkey.c    | 2 +-
 src/libknot/dnssec/rrset-sign.c | 2 +-
 src/libknot/tsig-op.c           | 2 +-
 4 files changed, 5 insertions(+), 8 deletions(-)

--- knot.orig/dnssec/lib/dnssec/binary.h
+++ knot/dnssec/lib/dnssec/binary.h
@@ -55,11 +55,8 @@
  * Universal structure to hold binary data.
  */
 typedef struct dnssec_binary {
-	size_t size;				/*!< Size of the binary data. */
-	union {
-		uint8_t *data;			/*!< Stored non-const data. */
-		const uint8_t *const_data;	/*!< Stored const data. */
-	};
+	size_t size;	/*!< Size of the binary data. */
+	uint8_t *data;	/*!< Stored data. */
 } dnssec_binary_t;
 
 /*!
--- knot.orig/dnssec/utils/legacy/pubkey.c
+++ knot/dnssec/utils/legacy/pubkey.c
@@ -53,7 +53,7 @@ static void parse_record(zs_scanner_t *s
 	}
 
 	dnssec_binary_t rdata = {
-		.const_data = scanner->r_data,
+		.data = scanner->r_data,
 		.size = scanner->r_data_length
 	};
 	dnssec_key_set_dname(key, scanner->dname);
--- knot.orig/src/libknot/dnssec/rrset-sign.c
+++ knot/src/libknot/dnssec/rrset-sign.c
@@ -133,7 +133,7 @@ static int sign_ctx_add_self(dnssec_sign
 	// static header
 
 	dnssec_binary_t header = { 0 };
-	header.const_data = rdata;
+	header.data = (uint8_t *)rdata;
 	header.size = RRSIG_RDATA_SIGNER_OFFSET;
 
 	result = dnssec_sign_add(ctx, &header);
--- knot.orig/src/libknot/tsig-op.c
+++ knot/src/libknot/tsig-op.c
@@ -103,7 +103,7 @@ static int compute_digest(const uint8_t
 		return KNOT_TSIG_EBADSIG;
 	}
 
-	dnssec_binary_t cover = { .const_data = wire, .size = wire_len };
+	dnssec_binary_t cover = { .data = (uint8_t *)wire, .size = wire_len };
 	dnssec_tsig_add(ctx, &cover);
 
 	*digest_len = dnssec_tsig_size(ctx);
--- knot.orig/src/dnssec/binary.h
+++ knot/src/dnssec/binary.h
@@ -55,11 +55,8 @@
  * Universal structure to hold binary data.
  */
 typedef struct dnssec_binary {
-	size_t size;				/*!< Size of the binary data. */
-	union {
-		uint8_t *data;			/*!< Stored non-const data. */
-		const uint8_t *const_data;	/*!< Stored const data. */
-	};
+	size_t size;	/*!< Size of the binary data. */
+	uint8_t *data;	/*!< Stored data. */
 } dnssec_binary_t;
 
 /*!
