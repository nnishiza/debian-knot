#!/bin/sh
set -e

dpkg-maintscript-helper rm_conffile /etc/default/knot 1.3.0~rc3-2~ -- "$@"

if [ "$1" = "configure" ]; then
    if ! getent passwd knot > /dev/null; then
        adduser --quiet --system --group --no-create-home knot
    fi

    dpkg-statoverride --list /var/lib/knot > /dev/null || dpkg-statoverride --update --add knot knot 0755 /var/lib/knot
    dpkg-statoverride --list /etc/knot/knot.conf > /dev/null || dpkg-statoverride --update --add knot knot 0640 /etc/knot/knot.conf
    dpkg-statoverride --list /etc/knot > /dev/null || dpkg-statoverride --update --add knot knot 0750 /etc/knot
    
    # Convert the configuration file to a new format if we are upgrading
    if [ -n "$2" ] && dpkg --compare-versions "$2" lt "2.0.0~"; then
	# Only convert if the configuration is not valid (e.g. 1.x based)
	if ! knotc checkconf 2>/dev/null >/dev/null; then
	    BACKUP_DIR=/var/backups/knot/$(date +%Y%m%d-%H%M%S)
	    mkdir -p ${BACKUP_DIR}
	    echo "Backup config file /etc/knot/knot.conf to ${BACKUP_DIR}."
	    cp -a /etc/knot/knot.conf ${BACKUP_DIR}/
	    echo "Converting config file /etc/knot/knot.conf to new format."
	    /usr/lib/knot/knot1to2 -i ${BACKUP_DIR}/knot.conf -o /etc/knot/knot.conf
	fi
    fi
fi

#DEBHELPER#

# (re-)initialize KASP-DB after the server has been started
# since we need to read the runtime configuration when upgrading
# from 2.0.x to 2.1.x
if [ "$1" = "configure" -a -n "$2" ] && dpkg --compare-versions "$2" lt "2.1.0~"; then
    /usr/sbin/knotc conf-read | \
	sed -n 's/.*kasp-db = "\(.*\)"/\1/p' | \
	while read KASPDB; do
	    su --shell /bin/bash --command "/usr/sbin/keymgr --dir '$KASPDB' init" knot;
	done
    # restart after (re-)initializing KASP-DB
    if [ -x "/etc/init.d/knot" ]; then
	invoke-rc.d knot restart || exit $?
    fi
fi

exit 0
